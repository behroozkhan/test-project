{"version":3,"sources":["AwesomeGridLayout/Adjustment/icons/plus.svg","AwesomeGridLayout/icons/align-left.svg","AwesomeGridLayout/icons/align-center.svg","AwesomeGridLayout/icons/align-right.svg","AwesomeGridLayout/icons/align-top.svg","AwesomeGridLayout/icons/align-middle.svg","AwesomeGridLayout/icons/align-bottom.svg","AwesomeGridLayout/icons/close.svg","AwesomeGridLayout/icons/chain.svg","AwesomeGridLayout/icons/unlink.svg","AwesomeGridLayout/Adjustment/icons/minimize.svg","AwesomeGridLayout/Adjustment/icons/maximize.svg","AwesomeGridLayout/icons/more.svg","AwesomeGridLayout/icons/question.svg","serviceWorker.js","AwesomeGridLayout/AwesomeGridLayoutUtils.js","AwesomeGridLayout/BreakPointManager.js","AwesomeGridLayout/DragDropManager.js","AwesomeGridLayout/InputManager.js","AwesomeGridLayout/GridChildContainerChildren.js","AwesomeGridLayout/Test/Inspector/InspectorBreadcrumbs.js","AwesomeGridLayout/HelperComponents/IconButton.js","AwesomeGridLayout/Test/Inspector/InspectorAligns.js","AwesomeGridLayout/AwesomwGridLayoutHelper.js","AwesomeGridLayout/Menus/CommonComponents/NumberInputWithUnit.js","AwesomeGridLayout/Menus/CommonComponents/CircularSlider.js","AwesomeGridLayout/Menus/CommonComponents/NumberInput.js","AwesomeGridLayout/Test/Inspector/InspectorSize.js","AwesomeGridLayout/Components/Helpers/AGLComponent.js","AwesomeGridLayout/Menus/MenuBase/MenuButton.js","AwesomeGridLayout/Menus/MenuBase/MenuBaseIndexTitle.js","AwesomeGridLayout/Menus/MenuBase/MenuBase.js","AwesomeGridLayout/Menus/CommonComponents/Slider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInputControlled.js","AwesomeGridLayout/Menus/CommonComponents/ColorPicker.js","AwesomeGridLayout/Components/Containers/Menus/Background.js","AwesomeGridLayout/Menus/CommonComponents/Divider.js","AwesomeGridLayout/Menus/CommonComponents/SliderInput.js","AwesomeGridLayout/Components/Containers/Menus/Border.js","AwesomeGridLayout/Components/Containers/Menus/Corners.js","AwesomeGridLayout/Menus/CommonComponents/Angle.js","AwesomeGridLayout/Components/Containers/Menus/Shadow.js","AwesomeGridLayout/Components/Containers/Menus/BorderDesign.js","AwesomeGridLayout/Components/Containers/ContainerBase.js","AwesomeGridLayout/Components/Containers/Header.js","AwesomeGridLayout/Components/Containers/Footer.js","AwesomeGridLayout/Components/Containers/Section.js","AwesomeGridLayout/Components/Pages/PageBase.js","AwesomeGridLayout/Components/Stack/VerticalSpacer.js","AwesomeGridLayout/Test/Animations/FadeInAnimation.js","AwesomeGridLayout/Test/Animations/RotateAnimation.js","AwesomeGridLayout/Dynamic/DynamicComponents.js","AwesomeGridLayout/Adjustment/AdjustmentPageControllers.js","AwesomeGridLayout/GridChildContainerFixedHolder.js","AwesomeGridLayout/GridChildContainer.js","AwesomeGridLayout/Portal.js","AwesomeGridLayout/AGLAnchor.js","AwesomeGridLayout/Adjustment/ResizePane.js","AwesomeGridLayout/Adjustment/AdjustmentStretch.js","AwesomeGridLayout/Adjustment/ResizePanePage.js","AwesomeGridLayout/Adjustment/AdjustmentResizePage.js","AwesomeGridLayout/Test/EventTrigger.js","AwesomeGridLayout/Test/WindowCache.js","AwesomeGridLayout/AnimationHolder.js","AwesomeGridLayout/Test/VisibilitySensorWrapper.js","AwesomeGridLayout/Test/ResizeAnimation.js","AwesomeGridLayout/AwesomeGridLayout2.js","AwesomeGridLayout/Components/Helpers/AGLWrapper.js","AwesomeGridLayout/Components/Stack/StackSpacerContainer.js","AwesomeGridLayout/Adjustment/AdjustmentMove.js","AwesomeGridLayout/Components/Stack/StackSpacerResizer.js","AwesomeGridLayout/Components/Stack/StackSpacer.js","AwesomeGridLayout/Components/Stack/Stack.js","AwesomeGridLayout/SelectManager.js","AwesomeGridLayout/SnapManager.js","AwesomeGridLayout/CopyManager.js","AwesomeGridLayout/IdManager.js","AwesomeGridLayout/UndoRedo.js","AwesomeGridLayout/GridLineManager.js","AwesomeGridLayout/AnchorManager.js","AwesomeGridLayout/Adjustment/AdjustmentSnapLines.js","AwesomeGridLayout/GridChildContainerGridLine.js","AwesomeGridLayout/Adjustment/GridLine.js","AwesomeGridLayout/Adjustment/AdjustmentGridRoot.js","AwesomeGridLayout/Adjustment/AdjustmentGridLinesWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentGridRow.js","AwesomeGridLayout/Adjustment/AdjustmentGrid.js","AwesomeGridLayout/Adjustment/AdjustmentSnap.js","AwesomeGridLayout/Adjustment/AdjustmentGridLinesWrapper2.js","AwesomeGridLayout/Adjustment/AdjustmentGridLines.js","AwesomeGridLayout/Adjustment/AdjustmentGroupRect.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenu.js","AwesomeGridLayout/Menus/MiniMenu/Components/RightClick.js","AwesomeGridLayout/Menus/MiniMenu/MiniMenuVerticalDivider.js","AwesomeGridLayout/Menus/MiniMenu/Components/Help.js","AwesomeGridLayout/Menus/MenuHolder.js","AwesomeGridLayout/Test/IFrameCommunicator.js","AwesomeGridLayout/Test/BreakpointController.js","AwesomeGridLayout/Test/EditorController.js","AwesomeGridLayout/Test/Inspector/Inspector.js","AwesomeGridLayout/Adjustment/AdjustmentResize.js","AwesomeGridLayout/Adjustment/AdjustmentResizeWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLinesWrapper.js","AwesomeGridLayout/Adjustment/AdjustmentHelpLines.js","AwesomeGridLayout/Adjustment/AdjustmentHover.js","AwesomeGridLayout/Editor/EditorBoundary.js","index.js","AwesomeGridLayout/icons/paint.svg"],"names":["module","exports","Boolean","window","location","hostname","match","initGriddata","griddataProp","breakpointdata","initialized","clone","cloneObject","props","griddata","getDefaultChildgriddata","bpData","exist","props2","prop","hasOwnProperty","k","sample","x","y","w","h","minW","undefined","maxW","minH","maxH","constraints","left","top","right","bottom","margin","all","units","scrollType","absolute","fix","autoHeight","autoWidth","overflowData","state","scroll","resizable","draggable","hasOwnBreakPoints","isContainer","autoDock","sortedBreakPoints","getSortedBreakPoints","name","obj","Array","copy","i","len","length","Object","attr","shallowEqual","objA","objB","keysA","keys","keysB","throttleDebounce","fn","ms","deTimer","dontCall","_","apply","arguments","setTimeout","clearTimeout","assignData","newData","assign","JSToCSS","JS","cssString","objectKey","replace","g","toLowerCase","updateStyle","styleNode","style","styleName","css","innerHTML","styleSheet","cssText","appendChild","document","createTextNode","appendStyle","styleId","createElement","setAttribute","type","getElementsByTagName","swapArrayElements","arr","indexA","indexB","temp","BreakPointManager","breakpoints","editorData","onBreakpointChange","onZoomLevelChange","updateBreakpoint","start","end","bp","find","b","getUpperBreakPoint","push","deleteBreakpoint","upper","fromClone","windowInnerWidth","lastWidth","copyDesign","designDatas","cloneDesignDatas","getCopyDesign","pasteDesign","item","forEach","designData","index","bpName","data","getWindowWidth","getWindowHeight","innerHeight","setWindowWidth","width","getBpData","getDevicePixelRatio","devicePixelRatio","onDevicePixelRatioChange","changed","onWindowResize","newWidth","innerWidth","inspectorPinned","inspectorWidth","result","checkBreakPointChange","currentBreakpointName","lastBreakpointName","current","size","getSize","setData","dataSet","param","value","breakpointName","params","split","override","getFromData","firstParamResult","id","console","log","findFirstUpperBreakPointParam","slice","p","getHighestBpName","getCompositeFromData","results","checkBreakpointName","composite","merge","hasDataInBreakPoint","findFirstUpperBreakPointName","getMinWidth","minSize","filter","sort","a","getDefault","Infinity","this","addEventListener","removeEventListener","breakPointData","DragDropManager","setDragging","draggingItem","getDragging","isDraggingItemFixed","portalNodeId","setDraggingStop","mouseOver","parent","getParentsId","includes","prepareRects","dropItem","newParent","callback","fromUndoRedo","undoPower","toggleHelpLines","onChildLeave","onChildDrop","newItem","itemId","firstRelativeX","dragData","firstPos","firstRelativeY","parentRect","lastRelativeX","lastRelativeY","newParentRect","height","parentId","newParentId","undoredo","add","idMan","getItem","onSelect","setMouseOver","setPosition","positionData","getFromTempData","toggleGridLines","setMouseOverForNonDragging","mouseOverNonDragging","getMouseOverForNonDragging","SelectManager","e","key","event","which","keyCode","ctrl","ctrlKey","shift","alt","GridChildContainerChildren","saveState","allChildren","allChildId","allChildIndex","values","map","c","zIndex","getSorted","children","getChildren","agl","getChildrenOverride","child","nextProps","nextState","nextContext","toString","React","Component","InspectorBreadcrumbs","mounted","className","reverse","onClick","tagName","IconButton","aria-label","marginLeft","borderRadius","buttonBaseStyle","display","justifyContent","alignItems","padding","imageContainerStyle","icon","InspectorAligns","getButtonsData","horizontal","img","src","require","vertical","alignItem","saveGridItemStyle","setGridItemStyle","select","onScrollItem","gridItemStyle","alignSelf","marginTop","marginBottom","justifySelf","marginRight","baseDocks","getBaseDocks","setDocks","NumberInputWithUnit","inputFilter","oldValue","okay","parseFloat","Math","min","max","onChange","target","endsWith","getValue","onShowUnits","currentTarget","setState","anchorEl","round","showUnits","unitIconButton","createRef","classes","classNames","textAlign","unit","disabled","ref","color","open","onClose","MenuListProps","dense","onUnitChange","CircularSlider","onMouseDown","rect","rootDivRef","getBoundingClientRect","onMouseMove","onMouseUp","clientX","clientY","vx","vy","angle","atan2","PI","transform","NumberInput","test","toFixed","InspectorSize","onItemPropsChange","forceUpdate","getUnit","setNewSize","breakpointmanager","onPropsChange","removeListener","addListener","widthUnits","heightUnits","minWidth","minWidthUnits","minHeight","minHeightUnits","maxWidth","maxWidthUnits","maxHeight","maxHeightUnits","AGLComponent","resolveDesignData","getData","componentData","getDefaultData","componentBpData","tempBpData","getAgl","aglRef","onDesignChange","designKey","updateDesign","getCompositeDesignData","getInspector","MenuButton","menu","updateMenu","MenuBaseIndexTitle","disableRipple","onIndexClick","title","MenuBase","close","selectedIndexNo","getDefaultPos","defaultPosition","handle","bounds","styles","root","menuTitle","indexData","backgroundColor","options","render","option","defaultProps","Slider","SliderInputControlled","ColorPicker","getRgbA","substring","r","join","startsWith","rgb","alpha","trim","handleClick","displayColorPicker","handleClose","handleChangeComplete","handleAlphaChange","background","position","onChangeComplete","disableAlpha","Background","Divider","SliderInput","Border","border","Corners","side","radius","changeSide","link","_side","onLinkClick","v","direction","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Angle","loop","deg2rad","rad2deg","Shadow","shadow","getDegree","xOffset","yOffset","degree","ratio","atan","getRatio","tan","calcDegree","xO","yO","abs","distance","blur","BorderDesign","getIndex","getOptions","design","fillColor","ContainerBase","getPrimaryOptions","compositeDesign","updateLayout","getStaticChildren","topLeft","topRight","bottomRight","bottomLeft","boxShadow","Header","defaultGridItemStyle","gridArea","as","autoConstraintsOff","helplineOff","Footer","Section","designStyle","PageBase","initKeyboard","preventDefault","selectedItem","getSelected","getHorizontalSection","moveUp","moveDown","getVerticalSection","moveLeft","moveRight","pageResize","auto","grid","gridX","gridY","gridTemplateRows","gridTemplateColumns","containerHeight","allSectionsH","deleteHorizontalSection","findIndex","areas","getGridArea","x1","parseInt","x2","firstRow","lastRow","allSectionsV","verticalSection","x12","y12","x22","y22","setGridArea","horizontalSection","x13","y13","x23","y23","splice","fill","setGrid","deleteVerticalSection","y1","y2","firstCol","lastCol","mainColIndex","getMainColIndex","addSectionQueue","dynamicComponents","isVertical","addQueue","checkingAddQueue","nextOne","checkAddQueue","addVerticalSection","newNextOne","addHorizontalSection","onItemPreDelete","allow","onItemPreResizeStop","dir","delta","runtimeStyle","yLineRefs","gridLine","getYlineRef","firstLineTop","getGridLineRect","targetTop","selectedX1","lineTop","checkIndex","nextSectionV","targetBottom","selectedX2","lineBottom","currentSectionIndex","currentSection","currentSectionGridArea","Tag","section","isSection","resizeSides","addChild","insertIndex","isVerticalSection","areas2","currentIndex","sideSection","hasMiniMenuOverride","DynamicComponents","fullWidth","isPage","page","VerticalSpacer","FadeInAnimation","animationStyles","StyleSheet","create","fadeIn","animationName","opacity","animationDuration","duration","RotateAnimation","compositeTransform","rotate","rotateDegree","DynamicAnimations","AdjustmentPageControllers","addSection","getAnchor","getElementById","needUpdate","updateTimeout","GridChildContainerFixedHolder","clientWidth","clientHeight","GridChildContainer","aglStyle","modifyContainerStyle","modifyContainerStyleOverride","getContainerStyleId","modifyOverflowStyle","getOverflowStyleId","getOverflowStyle","overflowX","overflowY","updateAdjustments","controllerRef","fixedHolderRef","show","overflowClasses","containerClasses","overflowRef","onScroll","containerRef","Portal","canUseDOM","defaultNode","body","removeChild","node","nodeId","ReactDOM","createPortal","AGLAnchor","anchor","ResizePane","isLeftClick","stopPropagation","mouseDown","pointerType","button","moving","onDrag","onDragStart","onDragStop","lastMouseX","lastMouseY","onResizeStart","onResize","onResizeStop","isCorner","draggingStart","pointerEvents","onPointerDown","AdjustmentStretch","stretch","isStretch","ResizePanePage","AdjustmentResizePage","sides","EventTrigger","defaultListener","listener","listeners","l","trigger","prevent","windowCache","boundingRects","clientsWidth","clientsHeight","clearCache","clearCacheTimeuot","getCachedBoundingRect","getCachedClientWidth","getCachedClientHeight","addToCache","propName","AnimationHolder","animation","onAnimationEnd","VisibilitySensorWrapper","partialVisibility","once","editor","playAnimation","containment","getPageOverflowRef","active","disableVS","ResizeAnimation","w1","w2","h1","h2","resize","animationTimingFunction","_name","AwesomeGridLayout2","callOverride","funcName","getOverrideProp","args","hasOverride","init","needRender","lastZIndex","getNextIndexData","savedChildren","savedChildrenArray","childData","oldId","createChildByData","Children","createdChild","getClearProps","renderChild","childs","childrenData","initLayout","getDefaultStyle","setDesignStyle","setStyle","defaultGrid","defaultStyle","lateMounted","addToSnap","onPageResize","onChildMounted","getShortcutOptions","hasMiniMenu","debounce","snap","addSnap","p1","p2","allChildRefs","childRef","parentsId","getGridLineSnaps","snaps","horizontals","verticals","xLineRef","getXlineRef","yLineRef","newId","fixed","getId","AGLProps","toUpperCase","dragdrop","copyMan","anchorMan","gridEditorRef","getAllChildOverrideProps","force","fullForce","tempSize","scrollLeft","scrollTop","getBoundarySize","updateState","invalidateSize","updateParent","updateChildren","arrangeIndex","nextZIndex","nextChild","prevZIndex","prevChild","firstZIndex","changeIndex","allChildData","change","startIndex","lastIndex","childZIndex","isPointInclude","forceCalculate","childElement","newProps","keepChildren","Error","onChildAdd","newBreakpointName","setTransformStyle","delete","getChildData","createItem","clearItem","removeChildElement","clearMiniMenu","childId","getAllOverrideProps","removeId","removeGridLine","removeSnap","portalNode","hide","onMouseOver","fromEnter","setItemHover","onMouseOut","hover","updateHover","onMouseEnter","outAllParent","forceRect","forceGridLines","isPrepared","onNewChildMounted","calcResult","coordinates","childRect","thisRect","calculateChildGridItem","setDataInBreakpoint","setTempData","setProps","clearFromAllBp","newChild","removeIdAndChildrenId","nonePointerEventForChildren","parentDragging","onParentDragging","setRuntimeStyle","group","callGroup","resizing","setDraggingState","groupDragStart","isFixed","checkSnapOnDrag","updateResizePanes","updateGridLines","updateHelpLines","helpLinesParent","dragging","updateMiniMenu","groupDrag","gridType","addGrid","groupDragStop","drawSnap","dropped","relativeX","relativeY","redoData","undoData","calculateGridItem","snapDelta1","getSnapDelta","snapDelta2","snapDelta3","snapDelta","deltaX","snapV","deltaY","snapH","pointOfSnapH","pointOfSnapV","parentGridLines","checkSnap","dontCalculate","getDocks","fromState","dontAutoDock","calculateGridArea","cy1","cy2","cx1","cx2","coordinatesAbs","coordinateToRelative","centerX","centerY","parentCenterMinusX","parentCenterPlusX","cy2IsLastLine","docks","centerDiffX","centerDiffY","getPxOrPcOrValue","parentValue","coordinateToAbsolute","getTopLeft","pageResizeStart","resizeData","firstX","firstLeft","firstY","firstTop","lastHeight","requestAnimationFrame","onResizeCalculate","backContainerRef","previusWidth","previusHeight","checkSnapOnResize","setResizeHelpData","animationData","getAnimationCSS","onResizeData","animationCss","resizeHelpData","pageResizeStop","setPageSize","onPageResizeStop","setSize","firstWidth","firstHeight","gridCoordinates","dontAddToSnap","oldStyle","isPercent","isNaN","setStyleParam","newValue","getParentProps","newRuntimeStyle","getGridItemStyleId","newGridItemStyle","dontOverride","getStyleId","getDesignStyleId","newDesignStyle","designStyleNode","getTransformStyleId","newTransform","transformStyleNode","getTransformStyle","rules","newStyle","excludeBp","hasGridLine","getGridLineOfPoint","cx","after","cy","gridLine1","gridLine2","mouseMoved","lastClientX","lastClientY","startMillis","Date","getTime","canMove","isGroupSelected","currentMillis","groupSelected","selected","deselectParent","clicked","isSelectable","selectItem","removeGridLineByType","showGridLines","updateParentsRect","onScrollEnd","editGrid","editing","updateGridEditor","update","setAnchor","disable","stateChange","forceKey","showAnimation","getCompositeAnimationCss","compositeAnimation","childContainers","windowWidth","setItem","prevProps","prevState","snapshot","holderClasses","TagAs","cursor","childSize","showSideResize","layoutType","compactType","AGLWrapper","StackSpacerContainer","updateSpacers","spacers","spacer","PureComponent","AdjustmentMove","StackSpacerResizer","StackSpacer","setPointerEvents","updateSpacerData","newHeight","spacerData","stack","updateSize","order","Stack","sortedChildrenArray","lateMountedOverride","lateMountedComplete","setOrder","calculateGridItemChildOverride","calculateWrapper","calculateChildGridItemOverride","child1","centerDiff","childRelativeY","childHeight","childFound","childOrderSet","sorted","relativeYA","relativeYB","relativeY2","getSpacer","getSpacerData","spacerContainerRef","allSpacerData","allSpacerRef","onStackDragStart","onStackDragStop","onMouseOverSpacer","onMouseEnterSpacer","onMouseOutSpacer","setMouseOverOverride","setPointerEventOfSpacers","setMouseOverForNonDraggingOverride","spacerRef","setGridItemStyleChildOverride","container","flexDirection","onChildLeaveOverride","removing","stretchChildOverride","isStretchChildOverride","setStyleParamOverride","isStack","onDragStartChildOverride","onDragChildOverride","onDragStopChildOverride","saveStyle","beStretch","allowStretch","disableStretch","getSectionId","uuidv4","createStack","items","itemsParent","getSectionParent","lastBottom","rightFromLeft","topA","topB","stackNode","_stack","stackId","itemIds","newItems","removeStackFromAGL","addToStack","parentWidth","stackAgl","childIds","removeChilds","addToUndo","breakpointData","inputManager","groupSelectRef","pageAglRef","miniMenuHolderRef","inspectorRef","resizeRef","helpLinesRef","hoverRef","createGroup","clearGroup","setInspector","clear","addMiniMenu","addMenu","inspectorMenu","setMenu","updateGroupRect","mainItem","deleteGroup","firstRect","updateRect","updateHelpSizeLines","throttle","helpLineParent","itemRect","test1","test2","bounce","floor","random","test3","SnapManager","snapThreshold","snapSvgRef","ignoreId","additionalSnaps","topUp","topDown","leftUp","leftDown","concat","CopyManager","selectManager","pageRef","copyItem","getCopyItem","paste","destinationItem","copyRect","duplicate","IdManager","prefix","preferName","fixName","baseId","postNo","allId","UndoRedo","getQueueObject","func","undo","power","redo","undoQueue","unshift","pop","redoQueue","undoFunc","object","hasUndo","hasRedo","GridLineManager","gridContainerRef","positions","getIdCache","AnchorManager","addAnchor","allAnchors","goToAnchor","saveToHistory","GridLine","lineRef","AdjustmentGridRoot","AdjustmentGridRow","gridLineManager","rowLines","rowLineRect","nextRowLineRect","rowHeight","fontWeight","AdjustmentGrid","addRow","rowsHeight","addColumn","columnsWidth","changeColumnWidth","changeRowHeight","deleteRow","deleteColumn","AdjustmentSnap","AdjustmentGridLinesWrapper2","yNo","xNo","refId","AdjustmentGridLines","fixLineRef","idCache","updateGridLine","reload","prepared","xNoA","yNoA","xNoB","yNoB","xLineRefA","yLineRefA","xLineRefB","yLineRefB","AdjustmentGroupRect","MiniMenu","shortcut","primary","MenuHolder","miniMenuItem","miniMenuRef","IFrameCommunicator","origin","otherWindow","onMessage","processIncomingMessage","JSON","parse","error","callbacks","responseFunc","responses","post","counter","postMessage","stringify","BreakpointController","changeBreakpoint","changeWidth","EditorController","AllowFunctions","res","inputs","getItemGridData","getLayout","layout","rootLayoutRef","fillData","getBreakpointsData","currentWidth","changePage","pageId","onPageChange","addItem","breakpointManagerMethod","method","undoRedoMethod","togglePreview","preview","setZoomLevel","zoomLevel","setDataInBackground","saveValue","Inspector","opening","clearInterval","closeInterval","openInterval","setInterval","percent","speed","interval","closing","getDefaultMenu","AdjustmentResize","stretchStyle","AdjustmentResizeWrapper","AdjustmentHelpLinesWrapper","AdjustmentHover","EditorBoundary","InputManager","iFrameCommunicator","pinInspector","openInspector","closeInspector","onSiteDataUpdated","siteData","notifyBreakpointChange","newDevicePixelRatio","pageAgl","editorScale","dispose","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.dc5998f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.4ffb5b5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-left.0a5b083d.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-center.c06baa72.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-right.47dacf61.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-top.a4e81be5.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-middle.18bded08.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-bottom.b15149df.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.ebf2f3f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/chain.91ca2215.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlink.91af3919.svg\";","module.exports = __webpack_public_path__ + \"static/media/minimize.d1b14794.svg\";","module.exports = __webpack_public_path__ + \"static/media/maximize.c16a073e.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.7e1c1c4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/question.910508a9.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {Resizable} from \"re-resizable\";\r\n// import css from 'dom-css';\r\nimport {exist, getFromData, getSortedBreakPoints, setData} from \"./BreakPointManager\";\r\nimport {css, StyleSheet} from 'aphrodite'\r\n\r\nlet CalculateLayout = (griddatas, layoutType, parentSize, dir, compactType, scrollType, snap\r\n                       , breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    parentGriddata = parentGriddata || getDefaultChildgriddata(breakpointdata);\r\n\r\n    let dummy;\r\n    let childContainers = griddatas.map((griddata) => {\r\n        if (griddata.id === undefined)\r\n            console.error(\"direct child must have a id props\");\r\n\r\n        let result = {\r\n            griddata: griddata,\r\n        };\r\n\r\n        result.griddata.id = griddata.id;\r\n        result.isContainer = griddata.isContainer;\r\n        result.selected = griddata.selected;\r\n        result.resizable = griddata.resizable;\r\n        result.draggable = griddata.draggable;\r\n        result.dragging = griddata.dragging;\r\n\r\n        result.w = getPxFromPercent(\r\n            getFromData(result.griddata, \"w\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.h = getPxFromPercent(\r\n            getFromData(result.griddata, \"h\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.x = getPxFromPercent(\r\n            getFromData(result.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.x);\r\n\r\n        result.y = getPxFromPercent(\r\n            getFromData(result.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                ,breakpointdata), parentSize.y);\r\n\r\n        result.rotate = getFromData(result.griddata, \"rotate\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.absolute = getFromData(result.griddata, \"absolute\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.fix = getFromData(result.griddata, \"fix\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        result.zIndex = getFromData(result.griddata, \"zIndex\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n        if (result.griddata.dragging) {\r\n            dummy = {};\r\n            dummy.griddata = cloneObject(result.griddata);\r\n            // dummy.griddata.dragging = false;\r\n            dummy.griddata.id = \"dummy\";\r\n            dummy.x = result.x;\r\n            dummy.y = result.y;\r\n            dummy.w = result.w;\r\n            dummy.h = result.h;\r\n            dummy.griddata.draggable = false;\r\n            dummy.griddata.resizable = false;\r\n            dummy.absolute = result.absolute;\r\n            dummy.fix = result.fix;\r\n            dummy.zIndex = result.zIndex;\r\n            dummy.dragging = result.dragging;\r\n\r\n            dummy.isDummy = true;\r\n        }\r\n\r\n        return result;\r\n    });\r\n\r\n    if (!childContainers)\r\n        childContainers = [];\r\n\r\n    if (dummy)\r\n        childContainers.push(dummy);\r\n\r\n    sortChilds(childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints);\r\n\r\n    let layouts = [];\r\n    let layoutContainers = [];\r\n\r\n    let maxHeight = scatter(childContainers, layoutContainers, layouts, layoutType, parentSize\r\n        , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n    return {childContainers: childContainers, layouts: layouts, maxHeight: maxHeight};\r\n};\r\n\r\nlet getDummy = (w, h) => {\r\n    return (\r\n        <Resizable\r\n            enable={false}\r\n            size={{\r\n                width: w,\r\n                height: h,\r\n            }}\r\n        >\r\n            <div style={{\r\n                backgroundColor: \"rgba(201, 76, 76, 0.3)\",\r\n                width: \"100%\",\r\n                height: \"100%\"\r\n            }}>\r\n            </div>\r\n        </Resizable>\r\n    );\r\n};\r\n\r\nlet scatter = (childContainers, layoutContainers, layouts, layoutType, parentSize\r\n               , compactType, scrollType, snap, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let notCompareChilds = [];\r\n    let maxHeight = 0;\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        if (childContainer.griddata.dragging) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (childContainer.absolute || childContainer.fix) {\r\n            notCompareChilds.push(childContainer);\r\n            continue;\r\n        }\r\n\r\n        if (layoutType === \"free\") {\r\n            maxHeight = scatterFree(childContainer, childContainers, layoutContainers\r\n                , parentSize, compactType, scrollType, snap, maxHeight, breakpointdata\r\n                , hasOwnBreakPoints, parentGriddata);\r\n        }\r\n\r\n        layoutContainers.push(childContainer);\r\n    }\r\n\r\n    for (let i = 0; i < childContainers.length; i++) {\r\n        let childContainer = childContainers[i];\r\n\r\n        layouts.push(childContainer.griddata);\r\n    }\r\n\r\n    notCompareChilds.forEach(childContainer => {\r\n        if (childContainer.absolute)\r\n            fixAbsoluteChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n        if (childContainer.fix)\r\n            fixFixChild(childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata);\r\n\r\n        setChildPosition(childContainer, {x:childContainer.x, y:childContainer.y}\r\n             , parentSize, breakpointdata, hasOwnBreakPoints);\r\n\r\n        layoutContainers.push(childContainer);\r\n        layouts.push(childContainer.griddata);\r\n    });\r\n\r\n    return maxHeight;\r\n};\r\n\r\nlet fixFixChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    if (left)\r\n        left += parentSize.scrollLeft;\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    if (top)\r\n        top += parentSize.scrollTop;\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    if (right)\r\n        right += (parentSize.x - parentSize.clientWidth - parentSize.scrollLeft);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n    if (bottom)\r\n        bottom += (parentSize.y - parentSize.clientHeight - parentSize.scrollTop);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet fixAbsoluteChild = (childContainer, parentSize, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let maxHeight;\r\n    let maxWidth;\r\n\r\n    // fix constraints\r\n    let constraints =\r\n        getFromData(childContainer.griddata, \"constraints\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    let left = getPxFromPercent(constraints.left, parentSize.x);\r\n    let top = getPxFromPercent(constraints.top, parentSize.y);\r\n    let right = getPxFromPercent(constraints.right, parentSize.x);\r\n    let bottom = getPxFromPercent(constraints.bottom, parentSize.y);\r\n\r\n    let minW =\r\n        getFromData(childContainer.griddata, \"minW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let minH =\r\n        getFromData(childContainer.griddata, \"minH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxW =\r\n        getFromData(childContainer.griddata, \"maxW\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    let maxH =\r\n        getFromData(childContainer.griddata, \"maxH\"\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n\r\n    if (right !== undefined && left !== undefined) {\r\n        // ignore w value and calculate from remain space\r\n        childContainer.w = parentSize.x - left - right;\r\n        childContainer.x = left + childContainer.w / 2;\r\n    }\r\n    if (bottom !== undefined && top !== undefined) {\r\n        // ignore h value and calculate from remain space\r\n        childContainer.h = parentSize.y - top - bottom;\r\n        childContainer.y = top + childContainer.h / 2;\r\n    }\r\n    if (right !== undefined && left === undefined) {\r\n        // use w to calculate x. w must have value in this situation\r\n        childContainer.x = parentSize.x - childContainer.w / 2 - right;\r\n    }\r\n    if (bottom !== undefined && top === undefined) {\r\n        // use h to calculate y. h must have value in this situation\r\n        childContainer.y = parentSize.y - childContainer.h / 2 - bottom;\r\n    }\r\n\r\n    if (right === undefined) {\r\n        if (left !== undefined)\r\n            childContainer.x = left + childContainer.w / 2;\r\n    }\r\n\r\n    if (bottom === undefined) {\r\n        if (top !== undefined)\r\n            childContainer.y = top + childContainer.h / 2;\r\n    }\r\n\r\n    if (minW) {\r\n        childContainer.w = Math.max(minW, childContainer.w);\r\n    }\r\n    if (maxW) {\r\n        childContainer.w = Math.min(maxW, childContainer.w);\r\n    }\r\n    if (minH) {\r\n        childContainer.h = Math.max(minH, childContainer.h);\r\n    }\r\n    if (maxH) {\r\n        childContainer.h= Math.min(maxH, childContainer.h);\r\n    }\r\n\r\n    maxWidth = childContainer.x + childContainer.w / 2 + right;\r\n    maxHeight = childContainer.y + childContainer.h / 2 + bottom;\r\n    return {maxHeight: maxHeight, maxWidth: maxWidth};\r\n};\r\n\r\nlet scatterFree = (childContainer, childContainers, layoutContainers, parentSize, compactType, scrollType\r\n                   , snap, maxHeight, breakpointdata, hasOwnBreakPoints, parentGriddata) => {\r\n    let autoWidth =\r\n        getFromData(parentGriddata, \"autoWidth\", parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    if (!autoWidth) {\r\n        if (childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n        }\r\n    }\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.x > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.x -= snap.x;\r\n        }\r\n    }\r\n    if (compactType === \"vertical\")\r\n    {\r\n        childContainer.y = Math.min(bottom(layoutContainers), childContainer.y);\r\n        while (childContainer.y > 0 && !checkCollide(childContainer, layoutContainers)) {\r\n            childContainer.y -= snap.y;\r\n        }\r\n    }\r\n\r\n    childContainer.x = Math.max(0, childContainer.x);\r\n    childContainer.y = Math.max(0, childContainer.y);\r\n\r\n    let collide;\r\n    while (checkCollide(childContainer, layoutContainers)) {\r\n        collide = checkCollide(childContainer, layoutContainers);\r\n        if (compactType === \"horizontal\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.x + collide.w, \"x\");\r\n        }\r\n        if (compactType === \"vertical\") {\r\n            resolveCompactionCollision(childContainers, childContainer, collide.y + collide.h, \"y\");\r\n        }\r\n        // Since we can't grow without bounds horizontally, if we've overflown, let's move it down and try again.\r\n        if ((compactType === \"horizontal\") &&\r\n            childContainer.x + childContainer.w > parentSize.x) {\r\n            childContainer.x = parentSize.x - childContainer.w;\r\n            childContainer.y++;\r\n        }\r\n    }\r\n\r\n    if (childContainer.y + childContainer.h > maxHeight)\r\n        maxHeight = childContainer.y + childContainer.h;\r\n\r\n    return maxHeight;\r\n};\r\n\r\nconst heightWidth = { x: \"w\", y: \"h\" };\r\nlet resolveCompactionCollision = (layout, item, moveToCoord, axis) => {\r\n    const sizeProp = heightWidth[axis];\r\n    item[axis] += 1;\r\n    const itemIndex = layout\r\n        .map(layoutItem => {\r\n            return layoutItem.griddata.id;\r\n        })\r\n        .indexOf(item.griddata.id);\r\n\r\n    // Go through each item we collide with.\r\n    for (let i = itemIndex + 1; i < layout.length; i++) {\r\n        const otherItem = layout[i];\r\n        // Ignore static items\r\n        if (otherItem.static || otherItem.griddata.dragging) continue;\r\n\r\n        // Optimization: we can break early if we know we're past this el\r\n        // We can do this b/c it's a sorted layout\r\n        if (otherItem.y > item.y + item.h) break;\r\n\r\n        if (collide(item, otherItem)) {\r\n            resolveCompactionCollision(\r\n                layout,\r\n                otherItem,\r\n                moveToCoord + item[sizeProp],\r\n                axis\r\n            );\r\n        }\r\n    }\r\n\r\n    item[axis] = moveToCoord;\r\n};\r\n\r\nlet bottom = (layoutContainers) => {\r\n    let max = 0,\r\n        bottomY;\r\n    for (let i = 0, len = layoutContainers.length; i < len; i++) {\r\n        bottomY = layoutContainers[i].y + layoutContainers[i].h;\r\n        if (bottomY > max) max = bottomY;\r\n    }\r\n    return max;\r\n};\r\n\r\nlet checkCollide = (childContainer, layoutContainers) => {\r\n    for (let i = 0; i < layoutContainers.length; i++) {\r\n        if (collide(childContainer, layoutContainers[i]))\r\n            return layoutContainers[i];\r\n    }\r\n    return false;\r\n};\r\n\r\nlet collide = (child1, child2) => {\r\n    if (child1.griddata.id === child2.griddata.id) return false; // same element\r\n    if (child1.x + child1.w <= child2.x) return false; // l1 is left of l2\r\n    if (child1.x >= child2.x + child2.w) return false; // l1 is right of l2\r\n    if (child1.y + child1.h <= child2.y) return false; // l1 is above l2\r\n    if (child1.y >= child2.y + child2.h) return false; // l1 is below l2\r\n    return true; // boxes overlap\r\n};\r\n\r\nlet sortChilds = (childContainers, parentSize, compactType, breakpointdata, hasOwnBreakPoints) => {\r\n    childContainers.forEach(childContainer => {\r\n            childContainer.x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.x);\r\n            childContainer.y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                ,  parentSize.y);\r\n    });\r\n\r\n    if (compactType === \"horizontal\") {\r\n        childContainers.sort((a, b) => {\r\n            if (a.x > b.x || (a.x === b.x && a.y > b.y)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    } else {\r\n        childContainers.sort((a, b) => {\r\n            if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n                return 1;\r\n            } else if (a.y === b.y && a.x === b.x) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n    }\r\n};\r\n\r\nlet getPxFromPercent = (val, parentVal) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (getUnit(val) === \"%\") {\r\n            let percent = parseFloat(val.replace(\"%\", \"\")) / 100;\r\n            return parentVal * percent;\r\n        }\r\n        return val;\r\n    } else {\r\n        return val;\r\n    }\r\n};\r\n\r\nlet getUnit = (val) => {\r\n    if (typeof(val) === \"string\") {\r\n        if (val.includes(\"%\"))\r\n            return \"%\";\r\n    }\r\n    return \"\";\r\n};\r\n\r\nlet hasDir = (dir, target) => {\r\n    return dir.toLowerCase().includes(target);\r\n};\r\n\r\nlet setChildSize = (childContainer, newSize, parentSize, breakpointdata, hasOwnBreakPoints\r\n                    , dir, delta) => {\r\n    setData(childContainer.griddata, \"w\", newSize.w, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.w\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"w\",\r\n            (getFromData(childContainer.griddata, \"w\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.w\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"h\", newSize.h, parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.h\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"h\",\r\n            (getFromData(childContainer.griddata, \"h\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.h\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    if (delta) {\r\n        if (hasDir(dir, \"right\") || hasDir(dir, \"left\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            if (hasDir(dir, \"right\"))\r\n                x = x + delta.width / 2;\r\n            else\r\n                x = x - delta.width / 2;\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n        if (hasDir(dir, \"top\") || hasDir(dir, \"bottom\")) {\r\n            let x = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"x\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.x);\r\n            let y = getPxFromPercent(\r\n                getFromData(childContainer.griddata, \"y\", parentSize.x, hasOwnBreakPoints\r\n                    ,breakpointdata)\r\n                , parentSize.y);\r\n            if (hasDir(dir, \"bottom\"))\r\n                y = y + delta.height / 2;\r\n            else\r\n                y = y - delta.height / 2;\r\n\r\n            setChildPosition(childContainer, {x: x, y: y}, parentSize, breakpointdata, hasOwnBreakPoints)\r\n        }\r\n    }\r\n};\r\n\r\nlet setChildPosition = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints) => {\r\n    setData(childContainer.griddata, \"x\", newPosition.x, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.x\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"x\",\r\n            (getFromData(childContainer.griddata, \"x\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.x * 100)\r\n            + getFromData(childContainer.griddata, \"units.x\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n\r\n    setData(childContainer.griddata, \"y\", newPosition.y, parentSize.x\r\n        , hasOwnBreakPoints\r\n        ,breakpointdata);\r\n    if (getFromData(childContainer.griddata, \"units.y\", parentSize.x, hasOwnBreakPoints\r\n        ,breakpointdata)) {\r\n        setData(childContainer.griddata, \"y\",\r\n            (getFromData(childContainer.griddata, \"y\", parentSize.x\r\n                , hasOwnBreakPoints\r\n                ,breakpointdata) / parentSize.y * 100)\r\n            + getFromData(childContainer.griddata, \"units.y\", parentSize.x\r\n            , hasOwnBreakPoints\r\n            ,breakpointdata)\r\n            , parentSize.x, hasOwnBreakPoints\r\n            ,breakpointdata);\r\n    }\r\n};\r\n\r\n/*let updateConstraints = (childContainer, newPosition, parentSize, breakpointdata, hasOwnBreakPoints\r\n                        , parentGridSystem) =>\r\n{\r\n    if (!parentGridSystem)\r\n        parentGridSystem = getDefaultGridSystem();\r\n};*/\r\n\r\n/*let getDefaultGridSystem = () => {\r\n    return {\r\n        xNumber: 1,\r\n        yNumber: 1,\r\n        widths: [100],\r\n        widthUnits: [\"%\"],\r\n        heights: [100],\r\n        heightUnits: [\"%\"]\r\n    }\r\n};*/\r\n\r\nlet fixGriddata = (griddata, breakpointdata) => {\r\n    if (!griddata)\r\n        return;\r\n\r\n    if (griddata.initialized) {\r\n        let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            let name = sortedBreakPoints[i].name;\r\n\r\n            if (!griddata[name])\r\n                continue;\r\n\r\n            if (!griddata[name].units)\r\n                griddata[name].units = {};\r\n\r\n            griddata[name].units.x = getUnit(griddata[name].x);\r\n            griddata[name].units.y = getUnit(griddata[name].y);\r\n            griddata[name].units.w = getUnit(griddata[name].w);\r\n            griddata[name].units.h = getUnit(griddata[name].h);\r\n        }\r\n    } else {\r\n        if (!griddata.units)\r\n            griddata.units = {};\r\n\r\n        griddata.units.x = getUnit(griddata.x);\r\n        griddata.units.y = getUnit(griddata.y);\r\n        griddata.units.w = getUnit(griddata.w);\r\n        griddata.units.h = getUnit(griddata.h);\r\n\r\n    }\r\n};\r\n\r\nlet initGriddata = (griddataProp, breakpointdata) => {\r\n    if (griddataProp && griddataProp.initialized)\r\n        return griddataProp;\r\n\r\n    if (!griddataProp)\r\n        griddataProp = {};\r\n\r\n    let clone = cloneObject(griddataProp);\r\n\r\n    for (let props in griddataProp) delete griddataProp[props];\r\n\r\n    let griddata = getDefaultChildgriddata(breakpointdata);\r\n    if (clone.bpData) {\r\n        for (let props in griddata.bpData) {\r\n            if (exist(props, breakpointdata)) {\r\n                    for(let props2 in clone.bpData) {\r\n                        griddata.bpData[props][props2] = cloneObject(clone.bpData[props2]);\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    for (let prop in clone) {\r\n        if (clone.hasOwnProperty(prop) && prop !== \"bpData\") {\r\n            griddata[prop] = clone[prop];\r\n        }\r\n    }\r\n\r\n    for(let k in griddata) griddataProp[k]=griddata[k];\r\n\r\n    return griddataProp;\r\n};\r\n\r\nlet getDefaultChildgriddata = (breakpointdata) => {\r\n    let sample = {\r\n        x: \"50%\",\r\n        y: \"50%\",\r\n        w: \"100%\",\r\n        h: \"100%\",\r\n        minW: undefined,\r\n        maxW: undefined,\r\n        minH: undefined,\r\n        maxH: undefined,\r\n        constraints: {\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined,\r\n        },\r\n        margin: {\r\n            all: undefined,\r\n            left: undefined,\r\n            top: undefined,\r\n            right: undefined,\r\n            bottom: undefined\r\n        },\r\n        units: {\r\n            x: \"%\",\r\n            y: \"%\",\r\n            w: \"%\",\r\n            h: \"%\",\r\n        },\r\n        scrollType: \"vertical\",\r\n        absolute: true,\r\n        fix: false,\r\n        autoHeight: false,\r\n        autoWidth: false,\r\n        overflowData: {\r\n            state: 'hide',\r\n            scroll: 'vertical'\r\n        },\r\n    };\r\n    let griddata = {\r\n        initialized: true,\r\n        resizable: true,\r\n        draggable: true,\r\n        hasOwnBreakPoints: false,\r\n        isContainer: false,\r\n        autoDock: true,\r\n        bpData: {}\r\n    };\r\n    let sortedBreakPoints = getSortedBreakPoints(breakpointdata);\r\n    griddata.bpData[sortedBreakPoints[0].name] = cloneObject(sample);\r\n    return griddata;\r\n};\r\n\r\nlet cloneObject = (obj) => {\r\n    if (obj instanceof Array) {\r\n        let copy = [];\r\n        for (let i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = cloneObject(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    if (obj instanceof Object) {\r\n        if (null == obj) return obj;\r\n        let copy = {};\r\n        for (let attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = cloneObject(obj[attr]);\r\n            }\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nlet shallowEqual = (objA, objB) => {\r\n    if (objA === objB) {\r\n        return true;\r\n    }\r\n\r\n    if (typeof objA !== 'object' || objA === null ||\r\n        typeof objB !== 'object' || objB === null) {\r\n        return false;\r\n    }\r\n\r\n    let keysA = Object.keys(objA);\r\n    let keysB = Object.keys(objB);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    // Test for A's keys different from B.\r\n    for (let i = 0; i < keysA.length; i++) {\r\n        if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nfunction throttleDebounce(fn, ms) {\r\n    let deTimer;\r\n    let dontCall;\r\n\r\n    return _ => {\r\n        if (!dontCall) {\r\n            fn.apply(this, arguments);\r\n            dontCall = true;\r\n            setTimeout(_ => {\r\n                dontCall = false;\r\n            }, ms)\r\n        }\r\n\r\n        clearTimeout(deTimer);\r\n        deTimer = setTimeout(_ => {\r\n            deTimer = null;\r\n            fn.apply(this, arguments);\r\n        }, ms)\r\n    };\r\n}\r\n\r\nlet getOverFlow = (griddata, parent, breakpointdata) => {\r\n    if (!griddata)\r\n        return {x:\"hidden\", y:\"hidden\"};\r\n    let parentSizeX;\r\n    if (parent)\r\n        parentSizeX = parent.getSize().x;\r\n\r\n    let scrollType;\r\n    if (parentSizeX) {\r\n        scrollType = getFromData(griddata, \"scrollType\", parentSizeX\r\n                , griddata? griddata.hasOwnBreakPoints: false, breakpointdata);\r\n    } else {\r\n        scrollType = getFromData(griddata, \"scrollType\", 0\r\n                , false, breakpointdata);\r\n    }\r\n    switch (scrollType) {\r\n        case \"hide\":\r\n            return {x:\"hidden\", y:\"hidden\"};\r\n        case \"show\":\r\n            return {x:\"visible\", y:\"visible\"};\r\n        case \"horizontal\":\r\n            return {x:\"overlay\", y:\"hidden\"};\r\n        case \"vertical\":\r\n            return {x:\"hidden\", y:\"overlay\"};\r\n        case \"both\":\r\n            return {x:\"overlay\", y:\"overlay\"};\r\n        default:\r\n            return {x:\"visible\", y:\"visible\"};\r\n    }\r\n};\r\n\r\nlet scrollbarWidth = false;\r\nlet getScrollbarWidth = () => {\r\n    if (scrollbarWidth !== false) return scrollbarWidth;\r\n    /* istanbul ignore else */\r\n    if (typeof document !== 'undefined') {\r\n        const div = document.createElement('div');\r\n        css(div, {\r\n            width: 100,\r\n            height: 100,\r\n            position: 'absolute',\r\n            top: -9999,\r\n            overflow: 'scroll',\r\n            MsOverflowStyle: 'scrollbar'\r\n        });\r\n        document.body.appendChild(div);\r\n        scrollbarWidth = (div.offsetWidth - div.clientWidth);\r\n        document.body.removeChild(div);\r\n    } else {\r\n        scrollbarWidth = 0;\r\n    }\r\n    return scrollbarWidth || 0;\r\n};\r\n\r\nexport let assignData = (griddata, newData) => {\r\n    if (!griddata)\r\n        griddata = {};\r\n    return Object.assign(griddata, newData || {})\r\n};\r\n\r\nexport function getOffsetLeft( elem )\r\n{\r\n    let offsetLeft = 0;\r\n    do {\r\n        let elemOffsetLeft = elem.offsetLeft;\r\n        if ( !isNaN( elemOffsetLeft ) )\r\n        {\r\n            offsetLeft += elemOffsetLeft;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetLeft;\r\n}\r\n\r\nexport function getOffsetTop( elem )\r\n{\r\n    let offsetTop = 0;\r\n    do {\r\n        let elemOffsetTop = elem.offsetTop;\r\n        if ( !isNaN( elemOffsetTop ) )\r\n        {\r\n            offsetTop += elemOffsetTop;\r\n        }\r\n    } while( elem = elem.offsetParent );\r\n    return offsetTop;\r\n}\r\n\r\n\r\nexport function JSToCSS(JS){\r\n    let cssString = \"\";\r\n    for (let objectKey in JS) {\r\n        cssString += objectKey.replace(/([A-Z])/g, (g) => `-${g[0].toLowerCase()}`) + \": \" + JS[objectKey] + \";\\n\";\r\n    }\r\n    return cssString;\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n\r\n    styleNode.innerHTML = \"\";\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n};\r\n\r\nexport function appendStyle(style, styleId, styleName){\r\n    let css = `\r\n            .${styleName} {${\r\n        JSToCSS(style)\r\n        }}\r\n            `;\r\n    let styleNode = document.createElement('style');\r\n    styleNode.setAttribute(\"id\", styleId);\r\n    // styleNode.setAttribute(\"title\", styleId);\r\n\r\n    styleNode.type = 'text/css';\r\n\r\n    if (styleNode.styleSheet) { // IE\r\n        styleNode.styleSheet.cssText = css;\r\n    } else {\r\n        styleNode.appendChild(document.createTextNode(css));\r\n    }\r\n\r\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\r\n};\r\n\r\n/*export function appendStyle(style, styleId, styleName){\r\n    return StyleSheet.create({\r\n        [styleId]: style\r\n    })[styleId];\r\n};\r\n\r\nexport function updateStyle(styleNode, style, styleName){\r\n    return StyleSheet.create({\r\n        [styleName]: style\r\n    });\r\n};*/\r\n\r\nexport function getScrollParent(node) {\r\n    if (node == null) {\r\n        return null;\r\n    }\r\n\r\n    if (node.scrollHeight > node.clientHeight) {\r\n        return node;\r\n    } else {\r\n        return getScrollParent(node.parentNode);\r\n    }\r\n}\r\n\r\nexport function swapArrayElements(arr, indexA, indexB) {\r\n    let temp = arr[indexA];\r\n    arr[indexA] = arr[indexB];\r\n    arr[indexB] = temp;\r\n}\r\n\r\nexport {CalculateLayout, cloneObject, getPxFromPercent, shallowEqual\r\n        ,throttleDebounce, setChildSize, fixGriddata, setChildPosition\r\n        ,getDefaultChildgriddata, initGriddata, getOverFlow, getScrollbarWidth, getDummy}\r\n","import {cloneObject, throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from \"lodash.merge\";\r\n\r\nexport default class BreakPointManager {\r\n    constructor(breakpoints, editorData, onBreakpointChange, onZoomLevelChange) {\r\n        if (!breakpoints)\r\n            breakpoints = this.getDefault();\r\n        this.breakpoints = breakpoints;\r\n        this.editorData = editorData;\r\n        this.windowInnerWidth = editorData && editorData.innerWidth;\r\n        this.lastWidth = editorData && editorData.innerWidth;\r\n        this.onBreakpointChange = onBreakpointChange || (() => {});\r\n        this.onZoomLevelChange = onZoomLevelChange || (() => {});\r\n\r\n        if (onBreakpointChange)\r\n            window.addEventListener(\"resize\", this.onWindowResize);\r\n        if (onZoomLevelChange)\r\n            window.addEventListener(\"resize\", this.onDevicePixelRatioChange);\r\n    }\r\n\r\n    updateBreakpoint = (name, start, end) => {\r\n        let bp = this.breakpoints.find(b => b.name === name);\r\n        if (bp) {\r\n            bp.end = end;\r\n            let upperBP = this.getUpperBreakPoint(name);\r\n            if (upperBP) this.getUpperBreakPoint(name).start = end + 1;\r\n            return;\r\n        }\r\n\r\n        start++;\r\n        bp = {name, start, end};\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bp.start === sortedBreakPoints[i].start + 1) {\r\n                bp.start++;\r\n            }\r\n            if (bp.start >= sortedBreakPoints[i].start) {\r\n                bp.end = sortedBreakPoints[i].end;\r\n                sortedBreakPoints[i].end = bp.start - 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.breakpoints.push(bp);\r\n    };\r\n\r\n    deleteBreakpoint = (name) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (name === sortedBreakPoints[i].name) {\r\n                let upper = sortedBreakPoints[i - 1];\r\n                if (upper) {\r\n                    upper.start = sortedBreakPoints[i].start;\r\n                    break;\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        delete this.breakpoints[name];\r\n    };\r\n\r\n    fromClone = (clone) => {\r\n        this.breakpoints = clone.breakpoints;\r\n        this.windowInnerWidth = clone.windowInnerWidth;\r\n        this.lastWidth = clone.lastWidth;\r\n        this.editorData = clone.editorData;\r\n\r\n        return this;\r\n    };\r\n\r\n    copyDesign = (designDatas) => {\r\n        this.cloneDesignDatas = cloneObject(designDatas);\r\n    };\r\n\r\n    getCopyDesign = () => {\r\n        return this.cloneDesignDatas;\r\n    };\r\n\r\n    pasteDesign = (item) => {\r\n        if (!this.getCopyDesign())\r\n            return;\r\n\r\n        this.cloneDesignDatas.forEach((designData, index) => {\r\n            let bpName = designData.bpName;\r\n            let data = designData.data;\r\n            item.props.griddata.bpData[bpName] = cloneObject(data);\r\n        });\r\n    };\r\n\r\n    getWindowWidth = () => {\r\n        return this.lastWidth\r\n    };\r\n\r\n    getWindowHeight = () => {\r\n        return window.innerHeight * 0.8;\r\n    };\r\n\r\n    setWindowWidth = (width) => {\r\n        this.lastWidth = width;\r\n    };\r\n\r\n    getBpData = (bpName) => {\r\n        return this.breakpoints.find(bp => {\r\n            return bp.name === bpName;\r\n        });\r\n    };\r\n\r\n    dispose() {\r\n        window.removeEventListener(\"resize\", this.onWindowResize);\r\n    }\r\n\r\n    getDevicePixelRatio = () => {\r\n        return window.devicePixelRatio;\r\n    };\r\n\r\n    onDevicePixelRatioChange = () => {\r\n        let changed = this.devicePixelRatio !== window.devicePixelRatio;\r\n\r\n        this.devicePixelRatio = window.devicePixelRatio;\r\n\r\n        if (changed) {\r\n            this.onZoomLevelChange(this.getDevicePixelRatio());\r\n        }\r\n    };\r\n\r\n    onWindowResize = throttleDebounce(() => {\r\n        let newWidth = window.innerWidth -\r\n            this.editorData.inspectorPinned ? this.editorData.inspectorWidth : 0;\r\n\r\n        let result = this.checkBreakPointChange(newWidth);\r\n\r\n        this.setWindowWidth(newWidth);\r\n\r\n        if (result.changed) {\r\n            this.onBreakpointChange(newWidth, result.currentBreakpointName, this.getDevicePixelRatio());\r\n        }\r\n    }, 100);\r\n\r\n    checkBreakPointChange = (newWidth) => {\r\n        let lastBreakpointName = this.current(this.getWindowWidth());\r\n        let currentBreakpointName = this.current(newWidth);\r\n\r\n        return {\r\n            changed: (lastBreakpointName !== currentBreakpointName),\r\n            currentBreakpointName\r\n        }\r\n    };\r\n\r\n    current = (size) => {\r\n        if (!size)\r\n            size = this.getWindowWidth();\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (this.getSize(size) >= sortedBreakPoints[i].start)\r\n                return sortedBreakPoints[i].name;\r\n        }\r\n\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].name;\r\n    };\r\n\r\n    getUpperBreakPoint = (bpName) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n            if (bpName === sortedBreakPoints[i].name)\r\n                return sortedBreakPoints[i - 1] && sortedBreakPoints[i - 1].name;\r\n        }\r\n    };\r\n\r\n    setData = (dataSet, param, value, breakpointName) => {\r\n        let params = param.split('.');\r\n        let name = breakpointName ||\r\n            this.current(this.getSize());\r\n        if (!dataSet.bpData[name]) {\r\n            dataSet.bpData[name] = {};\r\n        }\r\n        if (params.length === 1) {\r\n            if (value !== undefined)\r\n                dataSet.bpData[name][params[0]] = value;\r\n            else\r\n                delete dataSet.bpData[name][params[0]];\r\n        } else {\r\n            if (dataSet.bpData[name][params[0]] === undefined)\r\n                dataSet.bpData[name][params[0]] = {};\r\n            let override = dataSet.bpData[name][params[0]];\r\n            for(let i = 1; i < params.length; i++) {\r\n                if (i === params.length - 1) { // Last index\r\n                    if (value !== undefined)\r\n                        override[params[i]] = value;\r\n                    else\r\n                        delete override[params[i]];\r\n                }\r\n                else\r\n                {\r\n                    if (override[params[i]] === undefined)\r\n                        override[params[i]] = {};\r\n                    override = override[params[i]];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getFromData = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (param === \"style\" && dataSet.id === \"comp_Section_1\")\r\n            console.log(\"bpData\", dataSet.bpData[currentBreakpointName]);\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n        else {\r\n            firstParamResult = this.findFirstUpperBreakPointParam(dataSet, params[0]\r\n                , this.getSize());\r\n            if (param === \"style\" && dataSet.id === \"comp_Section_1\")\r\n                console.log(\"Here\", firstParamResult);\r\n        }\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    getHighestBpName = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[0].name;\r\n    };\r\n\r\n    getCompositeFromData = (dataSet, param) => {\r\n        let params = param.split('.');\r\n        let results = [];\r\n\r\n        let sortedBreakPoints = this.getSortedBreakPoints(this.getWindowWidth());\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            let checkBreakpointName = sortedBreakPoints[i].name;\r\n\r\n            let firstParamResult;\r\n            if (dataSet.bpData[checkBreakpointName] &&\r\n                dataSet.bpData[checkBreakpointName][params[0]] !== undefined)\r\n                firstParamResult = dataSet.bpData[checkBreakpointName][params[0]];\r\n\r\n            if (firstParamResult === undefined)\r\n                continue;\r\n\r\n            if (params.length === 1)\r\n                results.push(firstParamResult);\r\n\r\n            params.slice(1).forEach(p => {\r\n                if (firstParamResult)\r\n                    firstParamResult = firstParamResult[p];\r\n            });\r\n\r\n            results.push(firstParamResult);\r\n        }\r\n\r\n        if (!(results[0] instanceof Object))\r\n            return results[0];\r\n\r\n        let composite = {};\r\n        for (let i = results.length - 1; i >= 0; i--) {\r\n            composite = merge(composite, results[i]);\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    hasDataInBreakPoint = (dataSet, param, breakpointName) => {\r\n        let params = param.split('.');\r\n        let firstParamResult;\r\n        let currentBreakpointName = breakpointName ||\r\n            this.current(this.getSize());\r\n\r\n        if (dataSet.bpData[currentBreakpointName] &&\r\n            dataSet.bpData[currentBreakpointName][params[0]] !== undefined)\r\n            firstParamResult =\r\n                dataSet.bpData[currentBreakpointName][params[0]];\r\n\r\n        if (firstParamResult === undefined)\r\n            return;\r\n\r\n        if (params.length === 1)\r\n            return firstParamResult;\r\n\r\n        params.slice(1).forEach(p => {\r\n            if (firstParamResult)\r\n                firstParamResult = firstParamResult[p];\r\n        });\r\n\r\n        return firstParamResult;\r\n    };\r\n\r\n    findFirstUpperBreakPointParam = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name] &&\r\n                    dataSet.bpData[sortedBreakPoints[i].name][param] !== undefined)\r\n                    return dataSet.bpData[sortedBreakPoints[i].name][param];\r\n            }\r\n        }\r\n    };\r\n\r\n    findFirstUpperBreakPointName = (dataSet, param, size) => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        for(let i = sortedBreakPoints.length - 1; i >= 0; i--) {\r\n            if (this.getSize(size) <= sortedBreakPoints[i].end) {\r\n                if (dataSet.bpData[sortedBreakPoints[i].name]/* && dataSet[sortedBreakPoints[i].name][param] !== undefined*/)\r\n                    return sortedBreakPoints[i].name;\r\n            }\r\n        }\r\n    };\r\n\r\n    getMinWidth = () => {\r\n        let sortedBreakPoints = this.getSortedBreakPoints();\r\n        return sortedBreakPoints[sortedBreakPoints.length - 1].start;\r\n    };\r\n\r\n    getSortedBreakPoints = (minSize) => {\r\n        let breakpoints = this.breakpoints;\r\n        if (minSize) {\r\n            breakpoints = this.breakpoints.filter(bp => {\r\n                return bp.end >= minSize;\r\n            });\r\n        }\r\n        return breakpoints.sort((a,b) => {\r\n            if (a.start > b.start) {\r\n                return -1;\r\n            } else if (a.start === b.start) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        });\r\n    };\r\n\r\n    exist = (name) => {\r\n        return this.breakpoints.find(b => {\r\n            return b.name === name;\r\n        });\r\n    };\r\n\r\n    getDefault = () => {\r\n        return [\r\n            {\r\n                name: \"laptop\",\r\n                start: 1001,\r\n                end: Infinity\r\n            },\r\n            {\r\n                name: \"tablet\",\r\n                start: 751,\r\n                end: 1000\r\n            },\r\n            {\r\n                name: \"mobile\",\r\n                start: 320,\r\n                end: 750\r\n            },\r\n        ]\r\n    };\r\n\r\n    getSize = (size) => {\r\n        return size || this.getWindowWidth();\r\n    };\r\n};\r\n\r\nexport let setData = (dataSet, param, value, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    breakPointManager.setData(dataSet, param, value, breakpointName);\r\n};\r\n\r\nexport let getFromData = (dataSet, param, breakPointData, breakpointName) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getFromData(dataSet, param, breakpointName);\r\n};\r\n\r\nexport let getCompositeFromData = (dataSet, param, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager().fromClone(breakPointData);\r\n    return breakPointManager.getCompositeFromData(dataSet, param);\r\n};\r\n\r\nexport let getSortedBreakPoints = (breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.getSortedBreakPoints();\r\n};\r\n\r\nexport let exist = (name, breakPointData) => {\r\n    let breakPointManager = new BreakPointManager(breakPointData.breakpoints, breakPointData.windowInnerWidth);\r\n    return breakPointManager.exist(name);\r\n};\r\n","import {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\n\r\nexport default class DragDropManager {\r\n    setDragging = (item) => {\r\n        this.draggingItem = item;\r\n    };\r\n\r\n    getDragging = () => {\r\n        return this.draggingItem;\r\n    };\r\n\r\n    isDraggingItemFixed = () => {\r\n        if (!this.draggingItem)\r\n            return false;\r\n        return this.draggingItem.state.portalNodeId === \"page_fixed_holder\";\r\n    };\r\n\r\n    // return true if dropping on another parent\r\n    setDraggingStop = () => {\r\n        if (this.draggingItem && this.mouseOver &&\r\n            this.draggingItem.props.parent !== this.mouseOver &&\r\n            !this.mouseOver.getParentsId().includes(this.draggingItem.props.id) &&\r\n            !this.isDraggingItemFixed())\r\n        {\r\n            this.mouseOver.prepareRects();\r\n            this.dropItem(this.draggingItem, this.draggingItem.props.parent, this.mouseOver);\r\n\r\n            this.draggingItem = undefined;\r\n            return true;\r\n        }\r\n\r\n        this.draggingItem = undefined;\r\n        return false;\r\n    };\r\n\r\n    dropItem = (item, parent, newParent, callback, fromUndoRedo, undoPower) => {\r\n        item.toggleHelpLines();\r\n        parent.onChildLeave(item);\r\n        newParent.onChildDrop(item, undefined, undefined, (newItem) => {\r\n            if (callback)\r\n                callback(newItem);\r\n\r\n            if (!fromUndoRedo) {\r\n                let itemId = item.props.id;\r\n                let firstRelativeX =\r\n                    (item.dragData? item.dragData.firstPos.left : newItem.getSize(false).left)\r\n                    - parent.getSize(false).left;\r\n                let firstRelativeY =\r\n                    (item.dragData? item.dragData.firstPos.top : newItem.getSize(false).top)\r\n                    - parent.getSize(false).top;\r\n                let parentRect = cloneObject(parent.getSize(false));\r\n                let lastRelativeX = newItem.getSize(false).left - newParent.getSize(false).left;\r\n                let lastRelativeY = newItem.getSize(false).top - newParent.getSize(false).top;\r\n                let newParentRect = cloneObject(newParent.getSize(false));\r\n                let width = newItem.getSize(false).width;\r\n                let height = newItem.getSize(false).height;\r\n\r\n                let parentId = parent.props.id;\r\n                let newParentId = newParent.props.id;\r\n                item.props.undoredo.add((idMan) => {\r\n                    idMan.getItem(itemId).onSelect(true);\r\n                    this.setMouseOver(idMan.getItem(newParentId));\r\n                    this.dropItem(idMan.getItem(itemId), idMan.getItem(parentId), idMan.getItem(newParentId),\r\n                        (newItem) => {\r\n                        setTimeout(() => {\r\n                            idMan.getItem(itemId).setPosition(false, lastRelativeX, lastRelativeY, undefined, undefined,\r\n                                width, height, newParentRect, true);\r\n                        }, 0);\r\n                    }, true);\r\n                }, (idMan) => {\r\n                    idMan.getItem(itemId).onSelect(true);\r\n                    this.setMouseOver(idMan.getItem(parentId));\r\n                    this.dropItem(idMan.getItem(itemId), idMan.getItem(newParentId), idMan.getItem(parentId),\r\n                        (newItem) => {\r\n                        setTimeout(() => {\r\n                            idMan.getItem(itemId).setPosition(false, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                                width, height, parentRect, true);\r\n                        }, 0);\r\n                    }, true);\r\n                }, undoPower);\r\n            }\r\n        });\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.isDraggingItemFixed())\r\n            return;\r\n\r\n        if (this.mouseOver) {\r\n            if (!this.mouseOver.getFromTempData(\"selected\")) {\r\n                if (this.mouseOver !== item)\r\n                    this.mouseOver.toggleGridLines(false);\r\n            }\r\n        }\r\n\r\n        this.mouseOver = item;\r\n\r\n        console.log(\"HEEEEEEEEEEEREEEEE\", item.props.id);\r\n        if(this.draggingItem)\r\n            this.draggingItem.toggleHelpLines();\r\n        item.toggleGridLines(true, () => {\r\n            if(this.draggingItem)\r\n                this.draggingItem.toggleHelpLines(item);\r\n            if (callback)\r\n                callback(this.draggingItem, this.mouseOver);\r\n        }, \"B\");\r\n    };\r\n\r\n    setMouseOverForNonDragging = (item) => {\r\n        this.mouseOverNonDragging = item;\r\n    };\r\n\r\n    getMouseOverForNonDragging = () => {\r\n        return this.mouseOverNonDragging;\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\n\r\nexport default class SelectManager {\r\n    constructor() {\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            this.ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n        });\r\n        window.addEventListener(\"keyup\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            if (key === 17) {\r\n                this.ctrl = false;\r\n            }\r\n        });\r\n\r\n        this.ctrl = false;\r\n        this.shift = false;\r\n        this.alt = false;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {cloneObject, shallowEqual} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerChildren extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(this.allChildIndex.toString(),\r\n                Object.values(nextProps.allChildren).map(c => c.zIndex)).toString()\r\n        )\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => c.zIndex);\r\n    };\r\n\r\n    getSorted = (children) => {\r\n        return children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex)\r\n                return 1;\r\n            if (a.zIndex < b.zIndex)\r\n                return -1;\r\n\r\n            return 0;\r\n        })\r\n    };\r\n\r\n    getChildren = (allChildren, agl) => {\r\n        if (this.props.getChildrenOverride)\r\n            return this.props.getChildrenOverride(this.getSorted(Object.values(allChildren)), agl);\r\n\r\n        return this.getSorted(Object.values(allChildren)).map((child) => {\r\n            return child.child;\r\n        })\r\n    };\r\n\r\n    render () {\r\n        this.saveState();\r\n        let {allChildren, agl} = this.props;\r\n        return (\r\n            this.getChildren(allChildren, agl)\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class InspectorBreadcrumbs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div\r\n                className=\"InspectorOptionRoot\"\r\n            >\r\n                <div\r\n                    className=\"InspectorBreadcrumbsParentsRoot\"\r\n                >\r\n                        {\r\n                            item.getParentsId().slice(0, 2).reverse().map(parentId => {\r\n                                let parent = item.props.idMan.getItem(parentId);\r\n                                return (\r\n                                    <ButtonBase\r\n                                        className={\"InspectorBreadcrumbsParentsButton\"}\r\n                                        onClick={(e) => {\r\n                                            parent.onSelect(true);\r\n                                        }}\r\n                                        key={parent.props.id}\r\n                                    >\r\n                                        {\r\n                                            parent.props.tagName + \" >\"\r\n                                        }\r\n                                    </ButtonBase>\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n\r\n                <span\r\n                    className=\"InspectorBreadcrumbsTagName\"\r\n                >\r\n                    {item.props.tagName}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class IconButton extends React.Component {\r\n    render () {\r\n        return (\r\n            <ButtonBase\r\n                aria-label={this.props[\"aria-label\"] || \"aria-label\"}\r\n                onClick={this.props.onClick}\r\n                style={{...{\r\n                    marginLeft: 4,\r\n                    borderRadius: 4\r\n                }, ...this.props.buttonBaseStyle}}\r\n                className={this.props.className}\r\n            >\r\n                <div style={{...{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    padding: 8,\r\n                }, ...this.props.imageContainerStyle}}>\r\n                    {\r\n                        this.props.icon\r\n                    }\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </div>\r\n            </ButtonBase>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport {alignItem} from \"../../AwesomwGridLayoutHelper\";\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class InspectorAligns extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    getButtonsData = () => {\r\n        return [\r\n            {\r\n                name: \"Align to left\",\r\n                horizontal: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-left.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to center\",\r\n                horizontal: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-center.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to right\",\r\n                horizontal: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-right.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to top\",\r\n                vertical: \"start\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-top.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to middle\",\r\n                vertical: \"center\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-middle.svg')}\r\n                />\r\n            },\r\n            {\r\n                name: \"Align to bottom\",\r\n                vertical: \"end\",\r\n                img: <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../icons/align-bottom.svg')}\r\n                />\r\n            },\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        return (\r\n            <div className=\"InspectorOptionRoot\">\r\n                <span className=\"InspectorOptionTitle\">\r\n                    Alignment\r\n                </span>\r\n                <div\r\n                    className=\"InspectorAlignsRoot\"\r\n                >\r\n                    {\r\n                        this.getButtonsData().map((data, i) => {\r\n                            return (\r\n                                <IconButton\r\n                                    key={data.name}\r\n                                    buttonBaseStyle={{\r\n                                        marginLeft: 0,\r\n                                    }}\r\n                                    imageContainerStyle={{\r\n                                        padding: 6\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        alignItem(item, data.vertical, data.horizontal)\r\n                                    }}\r\n                                    className=\"InspectorAlignsButtons\"\r\n                                >\r\n                                    {data.img}\r\n                                </IconButton>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport merge from 'lodash.merge';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport Stack from \"./Components/Stack/Stack\";\r\nimport DynamicComponents from \"./Dynamic/DynamicComponents\";\r\nimport {getCompositeFromData, getFromData, setData} from \"./BreakPointManager\";\r\nimport {css, StyleSheet} from \"aphrodite\";\r\nimport Portal from \"./Portal\";\r\n\r\nexport function stretch(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        let saveStyle = cloneObject(item.getFromData(\"style\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            stretch(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).setStyle(saveStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (item.hasOverride(\"stretch\")) {\r\n        item.callOverride(\"stretch\", item);\r\n        return;\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let beStretch = false;\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (!isStretch(item))\r\n        beStretch = true;\r\n\r\n    gridItemStyle.alignSelf = beStretch? \"stretch\": \"start\";\r\n    gridItemStyle.justifySelf = beStretch? \"stretch\": \"center\";\r\n    gridItemStyle.marginTop = \"0px\";\r\n    gridItemStyle.marginLeft = \"0px\";\r\n    gridItemStyle.marginRight = \"0px\";\r\n    gridItemStyle.marginBottom = \"0px\";\r\n    item.setStyleParam(\"width\", \"auto\");\r\n    item.setStyleParam(\"height\", \"auto\");\r\n    item.setStyleParam(\"minHeight\", \"unset\");\r\n\r\n    if (!beStretch) {\r\n        let parentRect = item.props.parent.getSize();\r\n        gridItemStyle.marginTop = `${(parentRect.height - 0.8 * parentRect.height) / 2}px`;\r\n\r\n        item.setStyleParam(\"width\", \"80%\");\r\n        item.setStyleParam(\"height\", \"auto\");\r\n        item.setStyleParam(\"minHeight\", `${0.8 * parentRect.height}px`);\r\n    }\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function isStretch(item, log) {\r\n    if (item.hasOverride(\"isStretch\")) {\r\n        return item.callOverride(\"isStretch\", item, log);\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    return !(gridItemStyle.alignSelf !== \"stretch\" || gridItemStyle.justifySelf !== \"stretch\" ||\r\n        gridItemStyle.marginTop !== \"0px\" || gridItemStyle.marginLeft !== \"0px\" ||\r\n        gridItemStyle.marginRight !== \"0px\" || gridItemStyle.marginBottom !== \"0px\");\r\n}\r\n\r\nexport function allowStretch(item) {\r\n    if (!item.props.parent)\r\n        return false;\r\n\r\n    if (item.props.as === \"section\" || item.props.as === \"header\" || item.props.as === \"footer\")\r\n        return false;\r\n\r\n    return !item.props.disableStretch;\r\n}\r\n\r\nexport function alignItem(item, vertical, horizontal, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let saveGridItemStyle = cloneObject(item.getFromData(\"gridItemStyle\"));\r\n        item.props.undoredo.add((idMan) => {\r\n            alignItem(idMan.getItem(itemId), vertical, horizontal, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).setGridItemStyle(saveGridItemStyle);\r\n            idMan.getItem(itemId).props.select.onScrollItem();\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n    if (vertical) {\r\n        gridItemStyle.alignSelf = vertical;\r\n        gridItemStyle.marginTop = \"0px\";\r\n        gridItemStyle.marginBottom = \"0px\";\r\n    }\r\n    if (horizontal) {\r\n        gridItemStyle.justifySelf = horizontal;\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n    }\r\n\r\n    let baseDocks = item.getBaseDocks();\r\n    item.setDocks(\r\n        baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n        item.getFromTempData(\"autoDock\"), undefined, true\r\n    );\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n    item.props.select.onScrollItem();\r\n}\r\n\r\nexport function setScrollBehaviour(item, behaviour, pageAgl, fromUndoRedo, {offsetTop} = {}) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let pageId = pageAgl.props.id;\r\n        let oldBehaviour = item.getFromData(\"isFixed\")? \"fixed\": item.getFromData(\"scrollBehaviour\") || \"none\";\r\n        let oldOffsetTop = item.getFromData(\"scrollStickyOffsetTop\");\r\n        item.props.undoredo.add((idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), behaviour, idMan.getItem(pageId), true, {offsetTop});\r\n        }, (idMan) => {\r\n            setScrollBehaviour(idMan.getItem(itemId), oldBehaviour, idMan.getItem(pageId), true,\r\n                {offsetTop: oldOffsetTop});\r\n        });\r\n    }\r\n\r\n    if (!item.props.parent)\r\n        return;\r\n\r\n    let style = item.getFromData(\"style\");\r\n    if (isFixed(item) && behaviour !== \"fixed\" && style.lastSectionId) {\r\n        item.props.parent.onChildLeave(item);\r\n        let sectionParent = pageAgl.current.allChildRefs[style.lastSectionId];\r\n        if (!sectionParent) {\r\n            sectionParent = Object.values(pageAgl.current.allChildRefs)[0];\r\n        }\r\n\r\n        sectionParent.current.onSelect(true);\r\n        // let sectionRect = sectionParent.current.prepareRects(true);\r\n        let sectionRect = sectionParent.current.prepareRects();\r\n        sectionParent.current.onChildDrop(item, undefined, false, (newItem) => {\r\n            item.setState({portalNodeId: undefined});\r\n            setTimeout(() => {\r\n                newItem.onSelect(true);\r\n            }, 400);\r\n        });\r\n    }\r\n\r\n    item.setTempData(\"isFixed\", behaviour === \"fixed\");\r\n    item.setDataInBreakpoint(\"scrollBehaviour\", behaviour);\r\n    item.setDataInBreakpoint(\"scrollStickyOffsetTop\", offsetTop);\r\n\r\n    switch (behaviour) {\r\n        case \"none\":\r\n            item.setStyleParam(\"position\", undefined);\r\n            item.setStyleParam(\"top\", undefined);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"sticky\":\r\n            item.setStyleParam(\"position\", \"sticky !important\");\r\n            item.setStyleParam(\"top\", offsetTop || 0);\r\n            item.setStyleParam(\"pointerEvents\", undefined);\r\n            break;\r\n        case \"fixed\":\r\n            if (!isFixed(item))\r\n                addFixedChildToRoot(item, pageAgl);\r\n            break;\r\n    }\r\n}\r\n\r\nfunction addFixedChildToRoot(item, pageAgl) {\r\n    item.toggleHelpLines();\r\n    item.setStyleParam(\"lastSectionId\", item.props.parent.props.id);\r\n    item.props.parent.onChildLeave(item);\r\n    pageAgl.current.onSelect(true);\r\n    // let pageRect = pageAgl.current.prepareRects(true);\r\n    let pageRect = pageAgl.current.prepareRects();\r\n    let itemRect = item.getSize(false);\r\n\r\n    pageAgl.current.onChildDrop(item, undefined, true, (newItem) => {\r\n        setTimeout(() => {\r\n            newItem.onSelect(true);\r\n        }, 400);\r\n    });\r\n\r\n    let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n    gridItemStyle.alignSelf = \"start\";\r\n    gridItemStyle.justifySelf = \"start\";\r\n    gridItemStyle.marginTop = `${itemRect.top - pageRect.top}px`;\r\n    gridItemStyle.marginLeft = `${itemRect.left - pageRect.left}px`;\r\n    gridItemStyle.gridArea = \"1/1/2/2\";\r\n\r\n    item.setGridItemStyle(gridItemStyle);\r\n\r\n    item.setStyleParam(\"width\", `${itemRect.width}px`);\r\n    item.setStyleParam(\"height\", `${itemRect.height}px`);\r\n    item.setStyleParam(\"position\", undefined);\r\n    item.setStyleParam(\"top\", undefined);\r\n    item.setStyleParam(\"pointerEvents\", \"auto\");\r\n}\r\n\r\nexport function isFixed(item) {\r\n    return item.state.portalNodeId === \"page_fixed_holder\";\r\n}\r\n\r\nexport function hideInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", \"none !important\");\r\n}\r\n\r\nexport function showInBreakPoint(item, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            showInBreakPoint(idMan.getItem(itemId), true);\r\n        }, (idMan) => {\r\n            hideInBreakPoint(idMan.getItem(itemId), true);\r\n        });\r\n    }\r\n    item.setStyleParam(\"display\", undefined);\r\n}\r\n\r\nexport function hasBreakpointDesign(fromName, item) {\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n    return !(fromData === undefined);\r\n}\r\n\r\nexport function pasteFromBreakpointDesign(item, fromName, toName, fromUndoRedo) {\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n    if (fromData === undefined)\r\n        return;\r\n\r\n    if (!toName)\r\n        toName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[toName])\r\n        item.props.griddata.bpData[toName] = {};\r\n\r\n    let currentData = item.props.griddata.bpData[toName];\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(currentData);\r\n        item.props.undoredo.add((idMan) => {\r\n            pasteFromBreakpointDesign(idMan.getItem(itemId), fromName, toName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[toName] = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    merge(currentData, fromData);\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function deepAssign(fromData, currentData) {\r\n    Object.keys(fromData).map(key => {\r\n        let currentValue = currentData[key];\r\n        let fromValue = fromData[key];\r\n        if (currentValue === undefined) {\r\n            currentData[key] = cloneObject(fromValue);\r\n        } else {\r\n            if (fromValue instanceof Object) {\r\n                if (!currentValue)\r\n                    currentData[key] = {};\r\n                deepAssign(fromValue, currentValue)\r\n            } else {\r\n                currentData[key] = cloneObject(fromValue);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function removeOverrides(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (fromName === \"laptop\")\r\n        return;\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldData = cloneObject(item.props.griddata.bpData[fromName] || {});\r\n        item.props.undoredo.add((idMan) => {\r\n            removeOverrides(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).props.griddata.bpData[fromName] = oldData;\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.griddata.bpData[fromName] = {};\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function applyOnAllBreakPoint(item, fromName, fromUndoRedo) {\r\n    if (!fromName)\r\n        fromName = item.props.breakpointmanager.current();\r\n\r\n    if (!item.props.griddata.bpData[fromName])\r\n        return;\r\n\r\n    let fromData = item.props.griddata.bpData[fromName];\r\n\r\n    let undoData = {};\r\n\r\n    let sortedBreakPoints = item.props.breakpointmanager.getSortedBreakPoints();\r\n    for(let i = 0; i < sortedBreakPoints.length; i++) {\r\n        let toName = sortedBreakPoints[i].name;\r\n        if (fromData !== toName) {\r\n            undoData[toName] = cloneObject(item.props.griddata.bpData[toName] || {});\r\n            item.props.griddata.bpData[toName] = cloneObject(fromData);\r\n        }\r\n    }\r\n\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            applyOnAllBreakPoint(idMan.getItem(itemId), fromName, true);\r\n        }, (idMan) => {\r\n            Object.keys(undoData).forEach(key => {\r\n                idMan.getItem(itemId).props.griddata.bpData[key] = undoData[key];\r\n            });\r\n\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function copyDesign(item, fromAll) {\r\n    let currentBpName = item.props.breakpointmanager.current();\r\n\r\n    let designDatas = [];\r\n    if (!fromAll && item.props.griddata.bpData[currentBpName])\r\n        designDatas[0] = item.props.griddata.bpData[currentBpName];\r\n    else if (fromAll) {\r\n        Object.keys(item.props.griddata.bpData).forEach((key, index) => {\r\n            designDatas[index] = item.props.griddata.bpData[key];\r\n        });\r\n    }\r\n\r\n    if (designDatas.length > 0)\r\n        item.props.breakpointmanager.copyDesign(designDatas);\r\n}\r\n\r\nexport function pasetDesign(item, fromUndoRedo)     {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let copyDesign = cloneObject(this.props.breakpointmanager.getCopyDesign());\r\n        let oldDesign = cloneObject(item.props.griddata.bpData);\r\n        item.props.undoredo.add((idMan) => {\r\n            let temp = cloneObject(idMan.getItem(itemId).props.breakpointmanager.cloneDesignDatas);\r\n            idMan.getItem(itemId).props.breakpointmanager.cloneDesignDatas = copyDesign;\r\n            idMan.getItem(itemId).props.breakpointmanager.pasteDesign(idMan.getItem(itemId));\r\n            idMan.getItem(itemId).props.breakpointmanager.cloneDesignDatas = temp;\r\n\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        }, (idMan) => {\r\n            idMan.getItem(itemId).griddata.bpData = oldDesign;\r\n\r\n            idMan.getItem(itemId).onBreakpointChange(\r\n                idMan.getItem(itemId).props.breakpointmanager.getWindowWidth(),\r\n                idMan.getItem(itemId).props.breakpointmanager.current());\r\n        });\r\n    }\r\n\r\n    item.props.breakpointmanager.pasteDesign(item);\r\n\r\n    item.onBreakpointChange(\r\n        item.props.breakpointmanager.getWindowWidth(),\r\n        item.props.breakpointmanager.current());\r\n}\r\n\r\nexport function isGroupSelected(item) {\r\n    return item.props.select.group;\r\n}\r\n\r\nexport function getSectionId(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent.props.id;\r\n\r\n    return uuidv4();\r\n}\r\n\r\nexport function getSectionParent(item) {\r\n    let parent = item.props.parent;\r\n    while (parent && !parent.props.isSection) {\r\n        parent = parent.props.parent;\r\n    }\r\n\r\n    if (parent)\r\n        return parent;\r\n}\r\n\r\nexport function createStack(items, fromUndoRedo) {\r\n    if (!items || items.length < 2)\r\n        return;\r\n\r\n    let itemsParent = getSectionParent(items[0]);\r\n\r\n    if (!itemsParent)\r\n        return;\r\n\r\n    let top = 99999999;\r\n    let left = 99999999;\r\n    let rightFromLeft = 0;\r\n    let allSpacerData = [];\r\n    let lastBottom;\r\n\r\n    items.sort((a,b) => {\r\n        if (a && b){\r\n            let topA = a.getSize(false).top;\r\n            let topB = b.getSize(false).top;\r\n            if (topA < topB) {\r\n                return -1;\r\n            } else if (topA === topB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    items.forEach((item) => {\r\n        let rect = item.getSize(false);\r\n        top = Math.min(rect.top, top);\r\n        left = Math.min(rect.left, left);\r\n        rightFromLeft = Math.max(rect.left + rect.width, rightFromLeft);\r\n\r\n        if (lastBottom) {\r\n            allSpacerData.push({\r\n                height: Math.max(0, rect.top - lastBottom)\r\n            });\r\n        }\r\n\r\n        lastBottom = rect.top + rect.height;\r\n    });\r\n\r\n    let stack;\r\n    let stackNode =\r\n        <Stack\r\n            style={{\r\n                width: `${rightFromLeft - left}px`,\r\n            }}\r\n            lateMountedComplete={(_stack) => {\r\n                stack = _stack;\r\n            }}\r\n            allSpacerData={allSpacerData}\r\n            document={items[0].props.document}\r\n        />;\r\n\r\n    let parentRect = itemsParent.prepareRects();\r\n    // let parentRect = itemsParent.prepareRects(true);\r\n    itemsParent.addChild(stackNode, undefined, undefined, undefined, (agl) => {\r\n        if (!fromUndoRedo) {\r\n            let stackId = agl.props.id;\r\n            let itemIds = items.map(item => {\r\n                return item.props.id;\r\n            });\r\n            agl.props.undoredo.add((idMan) => {\r\n                let newItems = itemIds.map(id => {\r\n                    return idMan.getItem(id);\r\n                });\r\n                newItems.forEach(item => {\r\n                    item.onSelect(true);\r\n                });\r\n                createStack(newItems, true);\r\n            }, (idMan) => {\r\n                removeStackFromAGL(idMan.getItem(stackId), undefined, true);\r\n            });\r\n        }\r\n\r\n        agl.onSelect(true);\r\n        let {gridItemStyle} =\r\n            agl.calculateGridItem(left - parentRect.left, top - parentRect.top,\r\n                itemsParent, undefined, undefined, itemsParent.getSize(false));\r\n        agl.setGridItemStyle(gridItemStyle);\r\n        agl.prepareRects();\r\n        // agl.prepareRects(true);\r\n        setTimeout(() => {\r\n            items = items.filter(item => {\r\n                return item.props.id !== agl.props.id;\r\n            });\r\n\r\n            let addToStack = (items) => {\r\n                let item = items.shift();\r\n                if (!item)\r\n                    return;\r\n\r\n                item.props.parent.onChildLeave(item);\r\n                agl.onChildDrop(item, undefined, undefined, () => {\r\n                    addToStack(items);\r\n                });\r\n            };\r\n            addToStack(items);\r\n            setTimeout(() => {\r\n                stack.setOrder();\r\n                setTimeout(() => {\r\n                    let width = agl.getSize(false, true).width;\r\n                    let parentWidth = agl.props.parent.getSize(false).width;\r\n                    agl.setProps(\"width\", `${width / parentWidth * 100}%`);\r\n                    agl.onSelect(true);\r\n                }, 0);\r\n            }, 0);\r\n        }, 0);\r\n    });\r\n}\r\n\r\nexport function removeStack(stack, childIds, fromUndoRedo) {\r\n    removeStackFromAGL (stack.aglRef.current, childIds, fromUndoRedo);\r\n}\r\n\r\nexport function removeStackFromAGL(stackAgl, childIds, fromUndoRedo) {\r\n    stackAgl.removing = true;\r\n    if (!stackAgl || !stackAgl.props.isStack)\r\n        return;\r\n\r\n    if (!fromUndoRedo) {\r\n        let stackId = stackAgl.props.id;\r\n        stackAgl.props.undoredo.add((idMan) => {\r\n            removeStackFromAGL(idMan.getItem(stackId), childIds, true);\r\n        }, (idMan) => {\r\n            let newItems = childIds.map(id => {\r\n                return idMan.getItem(id);\r\n            });\r\n            createStack(newItems, true);\r\n        });\r\n    }\r\n\r\n    let newParent = stackAgl.props.parent;\r\n    stackAgl.clearItem();\r\n\r\n    let sorted = Object.values(stackAgl.allChildRefs).sort((a,b) => {\r\n        if (a && a.current && b && b.current){\r\n            let relativeYA = a.current.getFromData(\"relativeY\");\r\n            let relativeYB = b.current.getFromData(\"relativeY\");\r\n            if (relativeYA < relativeYB) {\r\n                return 1;\r\n            } else if (relativeYA === relativeYB) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    });\r\n\r\n    newParent.onSelect(true);\r\n    newParent.prepareRects();\r\n    // newParent.prepareRects(true);\r\n    let removeChilds = (sorted) => {\r\n        let item = sorted.shift();\r\n\r\n        if (!item) {\r\n            setTimeout(() => {\r\n                newParent.onChildLeave(stackAgl);\r\n            }, 0);\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            if (item && item.current) {\r\n                item.current.props.parent.onChildLeave(item.current);\r\n                newParent.onChildDrop(item.current);\r\n            }\r\n            removeChilds(sorted, newParent);\r\n        }, 0);\r\n    };\r\n\r\n    removeChilds(sorted);\r\n    /*sorted.forEach(item => {\r\n        if (item && item.current) {\r\n            console.log(\"onChildDrop\", item.current.props.id);\r\n            item.current.props.parent.onChildLeave(item.current);\r\n            newParent.onChildDrop(item.current);\r\n        }\r\n    });*/\r\n}\r\n\r\nexport function createItem(parent, childData, fromUndoRedo, gridItemStyle, style) {\r\n    childData.props = cloneObject(parent.getClearProps({...childData.props}, true));\r\n    if (gridItemStyle) {\r\n        parent.setDataInBreakpoint(\r\n            \"gridItemStyle\", gridItemStyle, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n    if (style) {\r\n        parent.setDataInBreakpoint(\r\n            \"style\", style, childData.props.griddata,\r\n            parent.props.breakpointmanager.getHighestBpName());\r\n    }\r\n\r\n    let child = parent.createChildByData(\r\n        childData , DynamicComponents, undefined, (newItem) => {\r\n        newItem.onSelect(true);\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = newItem.props.id;\r\n            let parentId = parent.props.id;\r\n            let childData = cloneObject(parent.getChildData(itemId));\r\n            parent.props.undoredo.add((idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true, gridItemStyle, style);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            });\r\n        }\r\n    });\r\n\r\n    parent.children[childData.props.id] = {\r\n        child: child,\r\n        zIndex: childData.zIndex\r\n    };\r\n\r\n    let savedChildren = parent.getFromTempData(\"savedChildren\");\r\n    savedChildren[childData.props.id] = childData;\r\n\r\n    parent.updateLayout();\r\n}\r\n\r\nexport function setDataInBreakpoint(prop, value, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(prop, undefined, breakpointName);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setDataInBreakpoint(prop, saveValue, idMan.getItem(itemId), false, breakpointName);\r\n        }, (idMan) => {\r\n            setDataInBreakpoint(prop, oldValue, idMan.getItem(itemId), false, breakpointName);\r\n        });\r\n    }\r\n    item.setDataInBreakpoint(prop, value, undefined, breakpointName);\r\n}\r\n\r\nexport function setTempData(prop, value, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromTempData(prop);\r\n        oldValue = cloneObject(oldValue);\r\n        let saveValue = cloneObject(value);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setTempData(prop, saveValue, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setTempData(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setTempData(prop, value);\r\n}\r\n\r\nexport function setStyle(newStyle, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldStyle = item.getFromData(\"style\", undefined, breakpointName);\r\n        oldStyle = cloneObject(oldStyle);\r\n        let saveStyle = cloneObject(newStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setStyle(oldStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setStyle(newStyle);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setNewSize(prop, value, item, addToUndo, breakpointName, updateLayout){\r\n    if (addToUndo) {\r\n        let oldValue = item.getFromData(`style.${prop}`, undefined, breakpointName);\r\n        let saveStyle = cloneObject(item.getFromData(\"style)\"));\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setNewSize(prop, oldValue, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setNewSize(prop, value);\r\n    updateLayout && item.updateLayout();\r\n}\r\n\r\nexport function setDesignStyle(newDesignStyle, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldDesignStyle = item.getFromData(\"designStyle\", undefined, breakpointName);\r\n        oldDesignStyle = cloneObject(oldDesignStyle);\r\n        let saveDesignStyle = cloneObject(newDesignStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setStyle(saveDesignStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setStyle(oldDesignStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setDesignStyle(newDesignStyle);\r\n}\r\n\r\nexport function setGridItemStyle(newGridItemStyle, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGridItemStyle = item.getFromData(\"gridItemStyle\", undefined, breakpointName);\r\n        oldGridItemStyle = cloneObject(oldGridItemStyle);\r\n        let saveGridItemStyle = cloneObject(newGridItemStyle);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridItemStyle(saveGridItemStyle, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridItemStyle(oldGridItemStyle, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridItemStyle(newGridItemStyle);\r\n}\r\n\r\nexport function setGridArea(newGridArea, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldGridArea = item.getGridArea();\r\n        oldGridArea = cloneObject(oldGridArea);\r\n        let saveGridArea = cloneObject(newGridArea);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGridArea(saveGridArea, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGridArea(oldGridArea, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGridArea(newGridArea);\r\n}\r\n\r\nexport function setGrid(newGrid, item, addToUndo, breakpointName){\r\n    if (addToUndo) {\r\n        let oldGrid = item.getFromData(\"grid\", undefined, breakpointName);\r\n        oldGrid = cloneObject(oldGrid);\r\n        let saveGrid = cloneObject(newGrid);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setGrid(saveGrid, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setGrid(oldGrid, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setGrid(newGrid);\r\n}\r\n\r\nexport function setAnchor(newAnchor, item, addToUndo){\r\n    if (addToUndo) {\r\n        let oldAnchor = item.getFromTempData(\"anchor\");\r\n        oldAnchor = cloneObject(oldAnchor);\r\n        let saveAnchor = cloneObject(newAnchor);\r\n        let itemId = item.props.id;\r\n        item.props.undoredo.add((idMan) => {\r\n            setAnchor(saveAnchor, idMan.getItem(itemId));\r\n        }, (idMan) => {\r\n            setAnchor(oldAnchor, idMan.getItem(itemId));\r\n        });\r\n    }\r\n    item.setAnchor(newAnchor);\r\n}\r\n\r\nexport function arrangeIndex(item, child, type, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldType = type === \"forward\"? \"backward\":\r\n            type === \"backward\"? \"forward\": undefined;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), type);\r\n        }, (idMan) => {\r\n            if (oldType)\r\n                arrangeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldType);\r\n            else\r\n                changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.arrangeIndex(child, type);\r\n}\r\n\r\nexport function changeIndex (item, child, index, addToUndo){\r\n    if (addToUndo) {\r\n        let itemId = item.props.id;\r\n        let childId = child.props.id;\r\n        let oldZIndex = item.getFromTempData(\"savedChildren\")[childId].zIndex;\r\n        item.props.undoredo.add((idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), index);\r\n        }, (idMan) => {\r\n            changeIndex(idMan.getItem(itemId), idMan.getItem(childId), oldZIndex);\r\n        });\r\n    }\r\n    item.changeIndex(child, index);\r\n}\r\n\r\nexport function resolveDesignData (item, key, value){\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName()))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    if (!key)\r\n        return;\r\n\r\n    let design = getFromData(item.props.griddata, \"design\", breakpointData, breakpointData.getHighestBpName());\r\n    if (!design[key])\r\n        design[key] = value || {};\r\n}\r\n\r\nexport function getCompositeDesignData (item) {\r\n    let breakpointData = item.props.breakpointmanager;\r\n    if (!getCompositeFromData(item.props.griddata, \"design\", breakpointData))\r\n        setData(item.props.griddata, \"design\", {}, breakpointData, breakpointData.getHighestBpName());\r\n\r\n    return getCompositeFromData(item.props.griddata, \"design\", breakpointData);\r\n}\r\n\r\nexport function rotate (item, degree, fromUndoRedo) {\r\n    if (!fromUndoRedo) {\r\n        let itemId = item.props.id;\r\n        let oldDegree = item.getFromData(\"rotateDegree\");\r\n        item.props.undoredo.add((idMan) => {\r\n            rotate(idMan.getItem(itemId), degree, true);\r\n        }, (idMan) => {\r\n            rotate(idMan.getItem(itemId), oldDegree || 0, true);\r\n        });\r\n    }\r\n\r\n    item.setDataInBreakpoint(\"transform.rotateDegree\", degree);\r\n    item.setTransformStyle(item.getFromData(\"transform\"));\r\n    item.updateLayout();\r\n}\r\n\r\nexport function getRotatedRectangle (x, y, degree) {\r\n    let rad = (degree || 0) * Math.PI/180;\r\n\r\n    let c = (x * Math.tan(rad) - y) / (Math.tan(rad) * Math.tan(rad) - 1);\r\n    let b = (y * Math.tan(rad) - x) / (Math.tan(rad) * Math.tan(rad) - 1);\r\n    let a = c * Math.tan(rad);\r\n    let d = b * Math.tan(rad);\r\n\r\n    let x2 = Math.sqrt(b * b + d * d);\r\n    let y2 = Math.sqrt(a * a + c * c);\r\n\r\n    return {x2, y2};\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem/MenuItem\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class NumberInputWithUnit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showUnits: false\r\n        };\r\n\r\n        this.unitIconButton = React.createRef();\r\n    }\r\n\r\n    inputFilter = (value, oldValue) => {\r\n        let okay = false;\r\n        try {\r\n            value = parseFloat(value);\r\n            okay = true;\r\n        } catch {}\r\n        if (okay) {\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = e.target.value;\r\n        if (value.endsWith(\".\"))\r\n            value += \"0\";\r\n        value = this.inputFilter(value, this.getValue(this.props.value));\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    onShowUnits = (e) => {\r\n        console.log(\"onShowUnits\", e.currentTarget);\r\n        this.setState({anchorEl: e.currentTarget});\r\n    };\r\n\r\n    getValue = (value) => {\r\n        if (!value)\r\n            return \"value\";\r\n\r\n        if (value.includes(\"%\")) {\r\n            return Math.round(parseFloat(value.replace(\"%\", \"\")) * 100) / 100;\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return Math.round(parseFloat(value.replace(\"px\", \"\")) * 100) / 100;\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return Math.round(parseFloat(value.replace(\"vh\", \"\")) * 100) / 100;\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return Math.round(parseFloat(value.replace(\"vw\", \"\")) * 100) / 100;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let classes = classNames(\r\n            \"NumberInputWithUnit\",\r\n            this.props.className\r\n        );\r\n        return (\r\n            <div className={classes}>\r\n                <input\r\n                    style={{\r\n                        textAlign: \"left\",\r\n                        width: 64,\r\n                        height: 20\r\n                    }}\r\n                    className=\"NumberInput\"\r\n                    value={![\"%\", \"px\", \"vw\", \"vh\"].includes(this.props.unit) ? \"\" :\r\n                        (this.getValue(this.props.value) || 0)}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    disabled={![\"%\", \"px\", \"vw\", \"vh\"].includes(this.props.unit)}\r\n                >\r\n                </input>\r\n\r\n                <IconButton\r\n                    ref={this.unitIconButton}\r\n                    className=\"InputUnitButton\"\r\n                    buttonBaseStyle={{\r\n                        marginLeft: 0,\r\n                    }}\r\n                    imageContainerStyle={{\r\n                        padding: 6\r\n                    }}\r\n                    onClick={this.onShowUnits}\r\n                >\r\n                    <span style={{\r\n                        color: \"#0a108b\"\r\n                    }}>\r\n                        {this.props.unit}\r\n                    </span>\r\n                </IconButton>\r\n\r\n                <Menu\r\n                    style={{\r\n                        zIndex: 99999999999\r\n                    }}\r\n                    anchorEl={this.state.anchorEl}\r\n                    open={this.state.anchorEl !== undefined}\r\n                    onClose={(e) => {\r\n                        this.setState({anchorEl: undefined});\r\n                    }}\r\n                    MenuListProps={{\r\n                        style: {\r\n                            padding: 0\r\n                        }\r\n                    }}\r\n                >\r\n                    {\r\n                        this.props.units.map((unit, i) => {\r\n                            return (\r\n                                <MenuItem\r\n                                    dense\r\n                                    key={i}\r\n                                    onClick={(e) => {\r\n                                        if (this.props.onUnitChange)\r\n                                            this.props.onUnitChange(unit);\r\n\r\n                                        this.setState({anchorEl: undefined});\r\n                                    }}\r\n                                >\r\n                                    <span style={{\r\n                                        color: \"#0a108b\"\r\n                                    }}>\r\n                                        {unit}\r\n                                    </span>\r\n                                </MenuItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\n\r\nexport default class CircularSlider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        this.rect = this.rootDivRef.current.getBoundingClientRect();\r\n        window.addEventListener(\"pointermove\", this.onMouseMove);\r\n        window.addEventListener(\"pointerup\", this.onMouseUp);\r\n\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        let x = e.clientX;\r\n        let y = e.clientY;\r\n\r\n        let vx = x - (this.rect.left + this.rect.width / 2);\r\n        let vy = y - (this.rect.top + this.rect.height / 2);\r\n\r\n        let angle = - Math.atan2(vx, vy) * 180 / Math.PI;\r\n        if (angle < 0) {\r\n            angle = angle + 360;\r\n        }\r\n        this.props.onChange(angle);\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                className={`CircularSliderRoot ${this.props.className}`}\r\n                style={{\r\n                    transform: `rotate(${this.props.value}deg)`\r\n                }}\r\n                onMouseDown={this.onMouseDown}\r\n                ref={this.rootDivRef}\r\n            >\r\n                <div\r\n                    className=\"CircularSliderBg\"\r\n                    style={{\r\n                        width: this.props.width || 90,\r\n                        height: this.props.width || 90\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"CircularSliderLine\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderCenter\"\r\n                    />\r\n                    <div\r\n                        className=\"CircularSliderKnob\"\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\n\r\nexport default class NumberInput extends React.Component {\r\n    inputFilter = (value, oldValue) => {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = parseFloat(value).toFixed(0);\r\n            value = Math.min(this.props.max, value);\r\n            value = Math.max(this.props.min, value);\r\n            return value;\r\n        } else if (value === \"\") {\r\n            return \"0\";\r\n        }\r\n\r\n        return oldValue;\r\n    };\r\n\r\n    onChange = (e) => {\r\n        let value = this.inputFilter(e.target.value, this.props.value);\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <input\r\n                className=\"NumberInput\"\r\n                value={this.props.value || 0}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport {alignItem, setNewSize} from \"../../AwesomwGridLayoutHelper\";\r\nimport NumberInputWithUnit from \"../../Menus/CommonComponents/NumberInputWithUnit\";\r\nimport CircularSlider from \"../../Menus/CommonComponents/CircularSlider\";\r\nimport NumberInput from \"../../Menus/CommonComponents/NumberInput\";\r\n\r\nexport default class InspectorSize extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n        this.props.item.onPropsChange.removeListener(this.onItemPropsChange);\r\n    }\r\n\r\n    shouldComponentUpdate (nextProps, nextState, nextContext) {\r\n        nextProps.item.onPropsChange.addListener(this.onItemPropsChange);\r\n        return true;\r\n    }\r\n\r\n    onItemPropsChange = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onChange = (prop, value) => {\r\n        let {item} = this.props;\r\n        let oldValue = item.getCompositeFromData(\"style\")[prop];\r\n        if ([\"%\", \"px\"].includes(this.getUnit(oldValue))) {\r\n            value = `${value}${this.getUnit(oldValue)}`;\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    onUnitChange = (prop, unit) => {\r\n        let {item} = this.props;\r\n\r\n        let value;\r\n        if (unit === \"px\") {\r\n            value = `${item.getSize(false).width}px`;\r\n        } else if (unit === \"%\") {\r\n            value = `${item.getSize(false).width / item.props.parent.getSize(false).width * 100}%`;\r\n        } else if (unit === \"vh\") {\r\n            value = `${item.getSize(false).width / item.props.breakpointmanager.getWindowHeight() * 100}vh`;\r\n        } else if (unit === \"vw\") {\r\n            value = `${item.getSize(false).width / item.props.breakpointmanager.getWindowWidth() * 100}vw`;\r\n        } else if (unit === \"none\") {\r\n            value = undefined;\r\n        } else {\r\n            value = unit;\r\n        }\r\n\r\n        setNewSize(prop, value, item, true);\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value)\r\n            return \"none\";\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        }\r\n\r\n        if (value.includes(\"px\")) {\r\n            return \"px\";\r\n        }\r\n\r\n        if (value.includes(\"vw\")) {\r\n            return \"vw\";\r\n        }\r\n\r\n        if (value.includes(\"vh\")) {\r\n            return \"vh\";\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    render () {\r\n        let {item} = this.props;\r\n        let style = item.getCompositeFromData(\"style\");\r\n        return (\r\n            <div className=\"InspectorOptionRoot\">\r\n                <span className=\"InspectorOptionTitle\">\r\n                    Size\r\n                </span>\r\n\r\n                <div className=\"InspectorSizeRow\">\r\n                    <div className=\"InspectorSizeItem\" style={{\r\n                        marginRight: 12\r\n                    }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Width\r\n                        </span>\r\n                        <NumberInputWithUnit\r\n                            className=\"AngleInput\"\r\n                            min={0}\r\n                            max={Infinity}\r\n                            value={style.width}\r\n                            onChange={(value) => {\r\n                                this.onChange(\"width\", value);\r\n                            }}\r\n                            onUnitChange={(unit) => {\r\n                                this.onUnitChange(\"width\", unit);\r\n                            }}\r\n                            units={this.props.widthUnits}\r\n                            unit={this.getUnit(style.width)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Height\r\n                        </span>\r\n                        <NumberInputWithUnit\r\n                            className=\"InspectorSizeItemInput\"\r\n                            min={0}\r\n                            max={Infinity}\r\n                            value={style.height}\r\n                            onChange={(value) => {\r\n                                this.onChange(\"height\", value);\r\n                            }}\r\n                            onUnitChange={(unit) => {\r\n                                this.onUnitChange(\"height\", unit);\r\n                            }}\r\n                            units={this.props.heightUnits}\r\n                            unit={this.getUnit(style.height)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"InspectorSizeRow\">\r\n                    <div className=\"InspectorSizeItem\" style={{\r\n                        marginRight: 12\r\n                    }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min W\r\n                        </span>\r\n                        <NumberInputWithUnit\r\n                            className=\"AngleInput\"\r\n                            min={0}\r\n                            max={Infinity}\r\n                            value={style.minWidth}\r\n                            onChange={(value) => {\r\n                                this.onChange(\"minWidth\", value);\r\n                            }}\r\n                            onUnitChange={(unit) => {\r\n                                this.onUnitChange(\"minWidth\", unit);\r\n                            }}\r\n                            units={this.props.minWidthUnits}\r\n                            unit={this.getUnit(style.minWidth)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Min H\r\n                        </span>\r\n                        <NumberInputWithUnit\r\n                            className=\"InspectorSizeItemInput\"\r\n                            min={0}\r\n                            max={Infinity}\r\n                            value={style.minHeight}\r\n                            onChange={(value) => {\r\n                                this.onChange(\"minHeight\", value);\r\n                            }}\r\n                            onUnitChange={(unit) => {\r\n                                this.onUnitChange(\"minHeight\", unit);\r\n                            }}\r\n                            units={this.props.minHeightUnits}\r\n                            unit={this.getUnit(style.minHeight)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"InspectorSizeRow\" style={{\r\n                    marginBottom: 0\r\n                }}>\r\n                    <div className=\"InspectorSizeItem\" style={{\r\n                        marginRight: 12\r\n                    }}>\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max W\r\n                        </span>\r\n                        <NumberInputWithUnit\r\n                            className=\"AngleInput\"\r\n                            min={0}\r\n                            max={Infinity}\r\n                            value={style.maxWidth}\r\n                            onChange={(value) => {\r\n                                this.onChange(\"maxWidth\", value);\r\n                            }}\r\n                            onUnitChange={(unit) => {\r\n                                this.onUnitChange(\"maxWidth\", unit);\r\n                            }}\r\n                            units={this.props.maxWidthUnits}\r\n                            unit={this.getUnit(style.maxWidth)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"InspectorSizeItem\">\r\n                        <span className=\"InspectorSizeItemTitle\">\r\n                            Max H\r\n                        </span>\r\n                        <NumberInputWithUnit\r\n                            className=\"InspectorSizeItemInput\"\r\n                            min={0}\r\n                            max={Infinity}\r\n                            value={style.maxHeight}\r\n                            onChange={(value) => {\r\n                                this.onChange(\"maxHeight\", value);\r\n                            }}\r\n                            onUnitChange={(unit) => {\r\n                                this.onUnitChange(\"maxHeight\", unit);\r\n                            }}\r\n                            units={this.props.maxHeightUnits}\r\n                            unit={this.getUnit(style.maxHeight)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {assignData, cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\nimport {getCompositeDesignData} from \"../../AwesomwGridLayoutHelper\";\r\nimport {setData} from \"../../BreakPointManager\";\r\nimport InspectorBreadcrumbs from \"../../Test/Inspector/InspectorBreadcrumbs\";\r\nimport InspectorAligns from \"../../Test/Inspector/InspectorAligns\";\r\nimport InspectorSize from \"../../Test/Inspector/InspectorSize\";\r\n\r\nexport default class AGLComponent extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    resolveDesignData = () => {\r\n        // Must Override\r\n    };\r\n\r\n    getData = () => {\r\n        let componentData = this.getDefaultData && this.getDefaultData();\r\n        let componentBpData = componentData.bpData;\r\n        componentData = assignData(componentData, cloneObject(this.props.data));\r\n        if (componentBpData) {\r\n            let tempBpData = componentData.bpData;\r\n            componentData.bpData = assignData(componentBpData, tempBpData);\r\n        }\r\n\r\n        return componentData;\r\n    };\r\n\r\n    getAgl = () => {\r\n        return this.props.aglRef.current;\r\n    };\r\n\r\n    onDesignChange = (designKey, value) => {\r\n        setData(this.props.griddata, designKey, value, this.props.breakpointmanager);\r\n        this.updateDesign(getCompositeDesignData(this));\r\n    };\r\n\r\n    getInspector = () => {\r\n        return (\r\n            <>\r\n                <InspectorBreadcrumbs\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorAligns\r\n                    item={this.getAgl()}\r\n                />\r\n                <InspectorSize\r\n                    item={this.getAgl()}\r\n                    widthUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    heightUnits={[\"auto\", \"%\", \"px\", \"vh\", \"vw\"]}\r\n                    minWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    minHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxWidthUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                    maxHeightUnits={[\"%\", \"px\", \"vh\", \"vw\", \"none\"]}\r\n                />\r\n            </>\r\n        )\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\n\r\nexport default class MenuButton extends React.Component {\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    onClick = (e) => {\r\n        let {menu} = this.props;\r\n        this.props.select.updateMenu((typeof menu === \"function\") ? menu(e) : menu);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                {\r\n                    this.props.icon\r\n                }\r\n                {\r\n                    this.props.children\r\n                }\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport '../../HelperStyle.css';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\n\r\nexport default class MenuBaseIndexTitle extends React.Component {\r\n    render () {\r\n        return (\r\n            <div\r\n                className=\"MenuBaseIndexTitle\"\r\n            >\r\n                <ButtonBase\r\n                    disableRipple={!this.props.onIndexClick}\r\n                    onClick={(e) => {\r\n                        this.props.onIndexClick &&\r\n                        this.props.onIndexClick(e, this.props.title, this.props.index)\r\n                    }}\r\n                >\r\n                    <span>\r\n                        {this.props.title}\r\n                    </span>\r\n                </ButtonBase>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MenuBase.css';\r\nimport Draggable from 'react-draggable';\r\nimport IconButton from \"../../HelperComponents/IconButton\";\r\nimport '../../HelperStyle.css';\r\nimport MenuBaseIndexTitle from \"./MenuBaseIndexTitle\";\r\n\r\nexport default class MenuBase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.props.select.updateMenu();\r\n    };\r\n\r\n    onIndexClick = (e, key, selectedIndexNo) => {\r\n        this.setState({selectedIndexNo})\r\n    };\r\n\r\n    getDefaultPos = (defaultPosition) => {\r\n        return {\r\n            y: Math.min(defaultPosition.y, window.innerHeight - 398),\r\n            x: Math.min(defaultPosition.x, window.innerWidth - 300),\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Draggable\r\n                handle=\".MenuBaseHeaderTitle\"\r\n                bounds=\"parent\"\r\n                defaultPosition={this.getDefaultPos(this.props.defaultPosition)}\r\n            >\r\n                <div\r\n                    className=\"MenuBaseRoot\"\r\n                    style={this.props.styles.root}\r\n                >\r\n                    {/*Header*/}\r\n                    <div\r\n                        className=\"MenuBaseHeaderContainer\"\r\n                    >\r\n                        <span className=\"MenuBaseHeaderTitle\">\r\n                            {this.props.menuTitle || \"Menu Title\"}\r\n                        </span>\r\n\r\n                        <IconButton\r\n                            onClick={this.close}\r\n                        >\r\n                            <img\r\n                                draggable={false}\r\n                                width={16}\r\n                                height={16}\r\n                                src={require('../../icons/close.svg')}\r\n                            />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    {/*Body*/}\r\n                    <div\r\n                        className=\"MenuBaseBodyContainer\"\r\n                    >\r\n                        <div className=\"MenuBaseBodyIndex\">\r\n                            {\r\n                                this.props.index.map((indexData, i) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={i}\r\n                                            style={{\r\n                                                backgroundColor: this.state.selectedIndexNo === i &&\r\n                                                    'rgba(115, 115, 115, 0.36)'\r\n                                            }}\r\n                                        >\r\n                                            <IconButton\r\n                                                key={indexData.key}\r\n                                                onClick={(e) => {\r\n                                                    this.onIndexClick(e, indexData.key, i);\r\n                                                }}\r\n                                                buttonBaseStyle={{\r\n                                                    marginLeft: 0\r\n                                                }}\r\n                                            >\r\n                                                {indexData.icon}\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"MenuBaseBodyOptions\">\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                <MenuBaseIndexTitle\r\n                                    index={this.state.selectedIndexNo}\r\n                                    key={this.props.options[this.state.selectedIndexNo].key}\r\n                                    title={this.props.options[this.state.selectedIndexNo].key}\r\n                                />\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo !== undefined &&\r\n                                this.props.options[this.state.selectedIndexNo].render\r\n                            }\r\n                            {\r\n                                this.state.selectedIndexNo === undefined &&\r\n                                this.props.options.map((option, i) => {\r\n                                    return (\r\n                                        <MenuBaseIndexTitle\r\n                                            index={i}\r\n                                            key={option.key}\r\n                                            title={option.key}\r\n                                            onIndexClick={this.onIndexClick}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nMenuBase.defaultProps = {\r\n    styles: {}\r\n};\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\n\r\nexport default class Slider extends React.Component {\r\n    render () {\r\n        return (\r\n            <RCSlider\r\n                {...this.props}\r\n                min={this.props.min}\r\n                max={this.props.max}\r\n                value={this.props.value}\r\n                onChange={this.props.onChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInputControlled extends React.Component {\r\n    onChange = (value) => {\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 16 }}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.props.value}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport { SketchPicker } from 'react-color';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport SliderInputControlled from \"./SliderInputControlled\";\r\n\r\nexport default class ColorPicker extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            color: this.getRgbA(props.color) || {\r\n                r: 0,\r\n                g: 0,\r\n                b: 0,\r\n                a: 0\r\n            },\r\n            alpha: this.getRgbA(props.color) && this.getRgbA(props.color).a * 100\r\n        };\r\n\r\n        console.log(this.state.color, props.color)\r\n    }\r\n\r\n    getRgbA = (value) => {\r\n        if (!value)\r\n            return;\r\n\r\n        if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(value)){\r\n            let c;\r\n            c = value.substring(1).split('');\r\n            if(c.length === 3){\r\n                c= [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n            }\r\n            c = '0x'+c.join('');\r\n            return {\r\n                r: (c>>16)&255,\r\n                g: (c>>8)&255,\r\n                b: c&255,\r\n                a: 1,\r\n            };\r\n        }\r\n\r\n        if (value.startsWith(\"rgba\")) {\r\n            let a, isPercent,\r\n                rgb = value.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i),\r\n                alpha = (rgb && rgb[4] || \"\").trim();\r\n\r\n            if (alpha !== \"\") {\r\n                a = alpha;\r\n            } else {\r\n                a = 1;\r\n            }\r\n\r\n            return {\r\n                r: rgb[1],\r\n                g: rgb[2],\r\n                b: rgb[3],\r\n                a: a\r\n            };\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        console.log(\"handleChangeComplete\", color);\r\n        let value = {\r\n            r: color.rgb.r,\r\n            g: color.rgb.g,\r\n            b: color.rgb.b,\r\n            a: (this.state.alpha || 100) / 100,\r\n        };\r\n\r\n        this.setState({color: color.rgb, alpha: this.state.alpha || 100});\r\n\r\n        value = `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\r\n\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n    };\r\n\r\n    handleAlphaChange = (alpha) => {\r\n        this.setState({alpha});\r\n        console.log(\"handleAlphaChange\", this.state.color);\r\n        let value = {\r\n            r: this.state.color.r,\r\n            g: this.state.color.g,\r\n            b: this.state.color.b,\r\n            a: alpha / 100,\r\n        };\r\n\r\n        value = `rgba(${value.r}, ${value.g}, ${value.b}, ${value.a})`;\r\n\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"CommonMenuRoot ColorPickerRoot\">\r\n                <ButtonBase\r\n                    style={{\r\n                        background: `url('/static/icon/transparency.png')`,\r\n                    }}\r\n                    className=\"ColorPickerRGB\"\r\n                    onClick={ this.handleClick }\r\n                >\r\n                    <div\r\n                        style={{\r\n                            background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.alpha / 100 })`,\r\n                        }}\r\n                    />\r\n                </ButtonBase>\r\n\r\n                <div\r\n                    className=\"ColorPickerAlpha\"\r\n                >\r\n                    <SliderInputControlled\r\n                        min={0}\r\n                        max={100}\r\n                        value={this.state.alpha || 0}\r\n                        onChange={this.handleAlphaChange}\r\n                    />\r\n                </div>\r\n                {\r\n                    this.state.displayColorPicker &&\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        zIndex: '2',\r\n                    }}>\r\n                        <div style={ {\r\n                            position: 'fixed',\r\n                            top: '0px',\r\n                            right: '0px',\r\n                            bottom: '0px',\r\n                            left: '0px',\r\n                            // backgroundColor: 'rgba(115, 115, 115, 0.4)'\r\n                        }} onClick={ this.handleClose }/>\r\n                        <SketchPicker\r\n                            color={this.state.color}\r\n                            onChangeComplete={ this.handleChangeComplete }\r\n                            disableAlpha\r\n                            width={224}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nexport default class Background extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Background</p>\r\n\r\n                <ColorPicker\r\n                    color={this.props.color}\r\n                    designKey={this.props.designKey}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport { SketchPicker } from 'react-color';\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport {cloneObject} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class Divider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Divider\">\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport RCSlider from 'rc-slider';\r\nimport Slider from \"./Slider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class SliderInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: this.props.value || 0\r\n        }\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.setState({value});\r\n\r\n        this.props.onDesignChange &&\r\n        this.props.onDesignChange(this.props.designKey, value);\r\n\r\n        this.props.onChange &&\r\n        this.props.onChange(value);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Slider\r\n                    className=\"BorderWidthSlider\"\r\n                    style={{ marginRight: 16 }}\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.state.value}\r\n                    onChange={this.onChange}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"BorderWidthInput\"\r\n                    min={this.props.min}\r\n                    max={this.props.max}\r\n                    value={this.state.value}\r\n                    onChange={this.onChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../Menus/CommonComponents/ColorPicker\";\r\nimport 'rc-slider/assets/index.css';\r\nimport './style.css';\r\nimport Divider from \"../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../Menus/CommonComponents/SliderInput\";\r\n\r\nexport default class Border extends React.Component {\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.props.border.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                    />\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Width (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={15}\r\n                            value={this.props.border.width}\r\n                            designKey={`${this.props.designKey}.width`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../Menus/Menu.css';\r\nimport ColorPicker from \"../../../Menus/CommonComponents/ColorPicker\";\r\nimport NumberInput from \"../../../Menus/CommonComponents/NumberInput\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport {cloneObject} from \"../../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class Corners extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            radius: cloneObject(props.radius),\r\n            link: true\r\n        }\r\n    }\r\n\r\n    onChange = (value, side) => {\r\n        let radius = this.state.radius;\r\n        let changeSide = [side];\r\n        if (this.state.link)\r\n            changeSide = [\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"];\r\n        changeSide.forEach(_side => {\r\n            radius[_side] = value;\r\n            this.props.onDesignChange(`${this.props.designKey}.${_side}`, value);\r\n        });\r\n        this.setState({radius});\r\n    };\r\n\r\n    onLinkClick = () => {\r\n        this.setState({link: !this.state.link});\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"MenuOptionSection\">\r\n                <p className=\"MenuOptionSectionTitle\">Radius (px)</p>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"topLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"topRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"topRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{position: \"relative\"}}>\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowTopLeft\"\r\n                             style={{\r\n                                 borderTopLeftRadius: this.state.radius[\"topLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowTopRight\"\r\n                             style={{\r\n                                 borderTopRightRadius: this.state.radius[\"topRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersRow\">\r\n                        <div className=\"CornersRowShowBottomLeft\"\r\n                             style={{\r\n                                 borderBottomLeftRadius: this.state.radius[\"bottomLeft\"]\r\n                             }}\r\n                        />\r\n                        <div className=\"CornersRowShowBottomRight\"\r\n                             style={{\r\n                                 borderBottomRightRadius: this.state.radius[\"bottomRight\"]\r\n                             }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"CornersLink\">\r\n                        <IconButton\r\n                            buttonBaseStyle={{\r\n                                marginLeft: 0\r\n                            }}\r\n                            onClick={this.onLinkClick}\r\n                        >\r\n                            {\r\n                                this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../icons/chain.svg')} />\r\n                            }\r\n                            {\r\n                                !this.state.link &&\r\n                                <img draggable={false} width={24} height={24}\r\n                                     src={require('../../../icons/unlink.svg')} />\r\n                            }\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"CornersRow\">\r\n                    <div className=\"CornersRowInput\">\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomLeft\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomLeft\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"CornersRowInput\" style={{direction: \"rtl\"}}>\r\n                        <NumberInput\r\n                            min={0}\r\n                            max={999}\r\n                            value={this.state.radius[\"bottomRight\"]}\r\n                            onChange={(v) => this.onChange(v, \"bottomRight\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './CommonMenu.css';\r\nimport CircularSlider from \"./CircularSlider\";\r\nimport NumberInput from \"./NumberInput\";\r\n\r\nexport default class Angle extends React.Component {\r\n    onChange = (value) => {\r\n        if (this.props.loop && value === 360)\r\n            value = 0;\r\n\r\n        this.props.onChange(value.toFixed(0));\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"AngleRoot\">\r\n                <CircularSlider\r\n                    {...this.props}\r\n                    className=\"AngleSlider\"\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                    min={0}\r\n                    max={360}\r\n                />\r\n\r\n                <NumberInput\r\n                    className=\"AngleInput\"\r\n                    min={0}\r\n                    max={360}\r\n                    value={this.props.angle}\r\n                    onChange={this.onChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport '../../../Menus/Menu.css';\r\nimport './style.css';\r\nimport NumberInput from \"../../../Menus/CommonComponents/NumberInput\";\r\nimport Angle from \"../../../Menus/CommonComponents/Angle\";\r\nimport Divider from \"../../../Menus/CommonComponents/Divider\";\r\nimport SliderInput from \"../../../Menus/CommonComponents/SliderInput\";\r\nimport ColorPicker from \"../../../Menus/CommonComponents/ColorPicker\";\r\n\r\nconst deg2rad = Math.PI/180;\r\nconst rad2deg = 180/Math.PI;\r\nexport default class Shadow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shadow: props.shadow\r\n        }\r\n    }\r\n\r\n    onChange = (key, value) => {\r\n        let shadow = this.state.shadow;\r\n        shadow[key] = value;\r\n        this.setState({shadow});\r\n        this.props.onDesignChange(`${this.props.designKey}.${key}`, value);\r\n    };\r\n\r\n    getDegree = (xOffset, yOffset) => {\r\n        if (xOffset === undefined) xOffset = -1;\r\n        if (yOffset === undefined) yOffset = 1;\r\n        let ratio = (xOffset) / (yOffset);\r\n        let degree;\r\n        if (xOffset < 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg;\r\n        if (xOffset < 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset < 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 180;\r\n        if (xOffset > 0 && yOffset > 0)\r\n            degree = - Math.atan( ratio ) * rad2deg + 360;\r\n\r\n        return Math.round(degree);\r\n    };\r\n\r\n    getRatio = (degree) => {\r\n        return Math.tan( degree * deg2rad );\r\n    };\r\n\r\n    calcDegree = (degree) => {\r\n        let ratio = this.getRatio(degree);\r\n        let xO, yO;\r\n        if (ratio === 0) {\r\n            xO = 0;\r\n            yO = 1;\r\n        } else if (ratio === Infinity) {\r\n            xO = 1;\r\n            yO = 0;\r\n        } else {\r\n            xO = ratio;\r\n            yO = 1;\r\n            if (Math.abs(ratio) > 1) {\r\n                xO /= Math.abs(ratio);\r\n                yO /= Math.abs(ratio);\r\n            }\r\n        }\r\n        this.onChange(\"xOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? -xO : xO);\r\n        this.onChange(\"yOffset\", (degree <= 90 && degree >= 0) || (degree <= 360 && degree > 270)\r\n            ? yO : -yO);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Angle</p>\r\n\r\n                    <div className=\"ShadowRoot\">\r\n                        <Angle\r\n                            className=\"ShadowAngle\"\r\n                            angle={this.getDegree(this.state.shadow.xOffset , this.state.shadow.yOffset)}\r\n                            onChange={this.calcDegree}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Distance (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.state.shadow.distance}\r\n                            designKey={`${this.props.designKey}.distance`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Size (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.state.shadow.size}\r\n                            designKey={`${this.props.designKey}.size`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Blur (px)</p>\r\n\r\n                    <div\r\n                        className=\"BorderWidth\"\r\n                    >\r\n                        <SliderInput\r\n                            className=\"BorderWidthSlider\"\r\n                            min={0}\r\n                            max={50}\r\n                            value={this.state.shadow.blur}\r\n                            designKey={`${this.props.designKey}.blur`}\r\n                            onDesignChange={this.props.onDesignChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <Divider/>\r\n\r\n                <div className=\"MenuOptionSection\">\r\n                    <p className=\"MenuOptionSectionTitle\">Opacity & Color</p>\r\n\r\n                    <ColorPicker\r\n                        color={this.state.shadow.color}\r\n                        designKey={`${this.props.designKey}.color`}\r\n                        onDesignChange={this.props.onDesignChange}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MenuBase from \"../../../Menus/MenuBase/MenuBase\";\r\nimport Background from \"./Background\";\r\nimport Border from \"./Border\";\r\nimport Corners from \"./Corners\";\r\nimport Shadow from \"./Shadow\";\r\n\r\nexport default class BorderDesign extends React.Component {\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    getIndex = () => {\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={require('../../../icons/paint.svg')} />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={require('../../../icons/paint.svg')} />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={require('../../../icons/paint.svg')} />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                icon: <img draggable={false} width={16} height={16}\r\n                           src={require('../../../icons/paint.svg')} />\r\n            }\r\n        ]\r\n    };\r\n\r\n    getOptions = () => {\r\n        console.log(this.props.design.fillColor);\r\n        return [\r\n            {\r\n                key: \"Fill Color & Opacity\",\r\n                render: <Background\r\n                    color={this.props.design.fillColor}\r\n                    designKey={\"design.fillColor\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            },\r\n            {\r\n                key: \"Border\",\r\n                render: <Border\r\n                    border={this.props.design.border}\r\n                    designKey={\"design.border\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            },\r\n            {\r\n                key: \"Corner\",\r\n                render: <Corners\r\n                    radius={this.props.design.border.radius}\r\n                    designKey={\"design.border.radius\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            },\r\n            {\r\n                key: \"Shadow\",\r\n                render: <Shadow\r\n                    shadow={this.props.design.border.shadow}\r\n                    designKey={\"design.border.shadow\"}\r\n                    onDesignChange={this.props.onDesignChange}\r\n                />\r\n            }\r\n        ]\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <MenuBase\r\n                menuTitle=\"Border Design\"\r\n                {...this.props}\r\n                index={this.getIndex()}\r\n                options={this.getOptions()}\r\n                item={this.props.item}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport MenuButton from \"../../Menus/MenuBase/MenuButton\";\r\nimport BorderDesign from \"./Menus/BorderDesign\";\r\nimport '../../HelperStyle.css';\r\nimport './ContainerBase.css';\r\nimport {getCompositeDesignData, resolveDesignData} from \"../../AwesomwGridLayoutHelper\";\r\n\r\nexport default class ContainerBase extends AGLComponent{\r\n    resolveDesignData = () => {\r\n        resolveDesignData(this, \"border\", {shadow: {\r\n                xOffset: -1,\r\n                yOffset: 1,\r\n                distance: 1,\r\n                size: 0,\r\n                blur: 4\r\n        }, radius: {}});\r\n    };\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        this.resolveDesignData();\r\n        return [\r\n            <MenuButton\r\n                key={0}\r\n                icon={ <img draggable={false} width={16} height={16}\r\n                            src={require('../../icons/paint.svg')} /> }\r\n                select={this.props.select}\r\n                menu={(e) =>\r\n                    <BorderDesign\r\n                        defaultPosition={{\r\n                            x: e.clientX + 48 || 48,\r\n                            y: e.clientY + 48 || 48\r\n                        }}\r\n                        design={getCompositeDesignData(this)}\r\n                        onDesignChange={this.onDesignChange}\r\n                        select={this.props.select}\r\n                        item={this.getAgl()}\r\n                    />\r\n                }\r\n            />\r\n        ]\r\n    };\r\n\r\n    updateDesign = (compositeDesign) => {\r\n        this.getAgl().updateLayout();\r\n    };\r\n\r\n    getStaticChildren = () => {\r\n        this.resolveDesignData();\r\n\r\n        let border = getCompositeDesignData(this).border;\r\n        let fillColor = getCompositeDesignData(this).fillColor;\r\n\r\n        return <div\r\n            className=\"ContainerBaseBorderRoot\"\r\n            style={{\r\n                border:\r\n                    `${border.width || 0}px solid ${border.color || 'rgba(186,218,85,0.63)'}`,\r\n                backgroundColor: fillColor,\r\n                borderRadius:\r\n                    `${border.radius.topLeft || 0}px ${border.radius.topRight || 0}px ${border.radius.bottomRight || 0}px ${border.radius.bottomLeft || 0}px`,\r\n                boxShadow: `${(border.shadow.xOffset) * (border.shadow.distance)}px ${(border.shadow.yOffset) * (border.shadow.distance)}px ${border.shadow.blur}px ${border.shadow.size}px ${border.shadow.color || 'rgba(186,218,85,0.63)'}`\r\n            }}\r\n        >\r\n\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"ContainerBase\"\r\n                {...this.props}\r\n                data={this.getData()}\r\n                getPrimaryOptions={this.getPrimaryOptions}\r\n                getInspector={this.getInspector}\r\n                getStaticChildren={this.getStaticChildren}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nContainerBase.defaultProps = {\r\n    tagName: \"ContainerBase\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport getStyledTag from \"../../Test/StyledTest\";\r\n\r\nexport default class Header extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Header\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"1/1/2/2\",\r\n                        }}\r\n                        {...this.props}\r\n                        style={{\r\n                            backgroundColor: \"#bcbcbc\",\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"150px\",\r\n                            zIndex: \"50\"\r\n                        }}\r\n                        as=\"header\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.defaultProps = {\r\n    tagName: \"Header\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\n\r\nexport default class Footer extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Footer\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"3/1/4/2\",\r\n                        }}\r\n                        {...this.props}\r\n                        style={{\r\n                            backgroundColor: \"#bcbcbc\",\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"100px\",\r\n                            zIndex: \"51\"\r\n                        }}\r\n                        as=\"footer\"\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        data={this.getData()}\r\n                        getInspector={this.getInspector}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nFooter.defaultProps = {\r\n    tagName: \"Footer\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\n\r\nexport default class Section extends AGLComponent{\r\n    getDefaultData = () => {\r\n        return {\r\n            draggable: false,\r\n            isContainer: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"show\"\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <AGLWrapper tagName=\"Section\"\r\n                        defaultGridItemStyle={{\r\n                            alignSelf: \"stretch\",\r\n                            justifySelf: \"stretch\",\r\n                            position: \"relative\",\r\n                            gridArea: \"2/1/3/2\",\r\n                        }}\r\n                        {...this.props}\r\n                        style={{...{\r\n                            width: \"100%\",\r\n                            height: \"auto\",\r\n                            minHeight: \"500px\",\r\n                        }, ...this.props.style}}\r\n                        designStyle={{...{\r\n                                backgroundColor: \"#b3faf5\",\r\n                        }, ...this.props.designStyle}}\r\n                        data={this.getData()}\r\n                        autoConstraintsOff\r\n                        helplineOff\r\n                        as={\"section\"}\r\n                        getInspector={this.getInspector}\r\n            >\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nSection.defaultProps = {\r\n    tagName: \"Section\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport Header from \"../Containers/Header\";\r\nimport Footer from \"../Containers/Footer\";\r\nimport Section from \"../Containers/Section\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport DynamicComponents from \"../../Dynamic/DynamicComponents\";\r\nimport {swapArrayElements} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nconst mainColTemplate = \"minmax(0px,1fr)\";\r\n\r\nexport default class PageBase extends AGLComponent{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n        this.gridTemplateRows = \"auto\";\r\n        this.gridTemplateColumns = mainColTemplate;\r\n        this.gridX = 0;\r\n        this.gridY = 1;\r\n\r\n        this.allSectionsH = [];\r\n        this.allSectionsV = [null];\r\n\r\n        this.root = React.createRef();\r\n\r\n        this.initKeyboard();\r\n    }\r\n\r\n    initKeyboard = () => {\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 38 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Up\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveUp(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if ( key === 40 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Down\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getHorizontalSection(selectedItem.props.id))\r\n                    this.moveDown(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if ( key === 37 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Left\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveLeft(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n\r\n            if ( key === 39 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + Right\");\r\n                let selectedItem = this.props.select.getSelected();\r\n                if (this.getVerticalSection(selectedItem.props.id))\r\n                    this.moveRight(selectedItem.props.id);\r\n\r\n                this.props.select.onScrollItem(e, this);\r\n            }\r\n        });\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.addSectionQueue(0, \"Header\", DynamicComponents, undefined, false);\r\n        this.addSectionQueue(1, \"Section\", DynamicComponents, undefined, false);\r\n        this.addSectionQueue(2, \"Footer\", DynamicComponents, undefined, false);\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n            draggable: false,\r\n            resizable: false,\r\n            pageResize: true,\r\n            bpData: {\r\n                overflowData: {\r\n                    state: \"scroll\",\r\n                    scroll: \"vertical\",\r\n                    auto: true\r\n                },\r\n                grid: {\r\n                    x: this.gridX,\r\n                    y: this.gridY,\r\n                    gridTemplateRows: this.gridTemplateRows,\r\n                    gridTemplateColumns: this.gridTemplateColumns\r\n                },\r\n                containerHeight: \"max-content\",\r\n            }\r\n        };\r\n    };\r\n\r\n    getHorizontalSection = (id) => {\r\n        return this.allSectionsH.find(h => {\r\n            return h.props.id === id;\r\n        })\r\n    };\r\n\r\n    deleteHorizontalSection = (id) => {\r\n        let index = this.allSectionsH.findIndex(h => {\r\n            return h.props.id === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        if (this.allSectionsH.length === 1)\r\n            return false;\r\n\r\n        this.gridX--;\r\n\r\n        let currentSection = this.allSectionsH[index];\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (firstRow >= x12 && lastRow <= x22) {\r\n                x22--;\r\n            } else if (lastRow <= x12) {\r\n                x22--;\r\n                x12--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (lastRow <= x13) {\r\n                x13--;\r\n                x23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        index >= 0 && this.allSectionsH.splice(index, 1);\r\n\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        return true;\r\n    };\r\n\r\n    getVerticalSection = (id) => {\r\n        return this.allSectionsV.find(h => {\r\n            if (h === null)\r\n                return false;\r\n            return h.props.id === id;\r\n        })\r\n    };\r\n\r\n    deleteVerticalSection = (id) => {\r\n        let index = this.allSectionsV.findIndex(h => {\r\n            if (h === null)\r\n                return false;\r\n            return h.props.id === id;\r\n        });\r\n        if (index < 0)\r\n            return false;\r\n\r\n        this.gridY--;\r\n\r\n        let currentSection = this.allSectionsV[index];\r\n        let gridArea = currentSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        let firstRow = x1;\r\n        let lastRow = x2;\r\n        let firstCol = y1;\r\n        let lastCol = y2;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x12 = parseInt(areas[0]);\r\n            let y12 = parseInt(areas[1]);\r\n            let x22 = parseInt(areas[2]);\r\n            let y22 = parseInt(areas[3]);\r\n\r\n            if (y12 >= firstCol) {\r\n                y12--;\r\n                y22--;\r\n            }\r\n\r\n            gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x13 = parseInt(areas[0]);\r\n            let y13 = parseInt(areas[1]);\r\n            let x23 = parseInt(areas[2]);\r\n            let y23 = parseInt(areas[3]);\r\n\r\n            if (y13 >= lastCol) {\r\n                // fully right\r\n                y13--;\r\n                y23--;\r\n            } else if (y23 >= lastRow) {\r\n                // partially right\r\n                y23--;\r\n            }\r\n\r\n            gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.allSectionsV.splice(index, 1);\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        return true;\r\n    };\r\n\r\n    addSectionQueue = (index, tagName, dynamicComponents, as, isVertical, callback) => {\r\n        if (!this.addQueue)\r\n            this.addQueue = [];\r\n\r\n        this.addQueue.push({\r\n            index, tagName, dynamicComponents, as, isVertical, callback\r\n        });\r\n\r\n        if (!this.checkingAddQueue) {\r\n            let nextOne = this.addQueue.shift();\r\n            this.checkAddQueue(nextOne);\r\n        }\r\n    };\r\n\r\n    checkAddQueue = (nextOne) => {\r\n        this.checkingAddQueue = true;\r\n        if (!nextOne.isVertical) {\r\n            this.addHorizontalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        } else {\r\n            this.addVerticalSection(nextOne.index, nextOne.tagName, nextOne.dynamicComponents,\r\n                nextOne.as, (agl) => {\r\n                    if (nextOne.callback)\r\n                        nextOne.callback(agl);\r\n                    let newNextOne = this.addQueue.shift();\r\n                    if (newNextOne)\r\n                        this.checkAddQueue(newNextOne);\r\n                    else\r\n                        this.checkingAddQueue = false;\r\n                });\r\n        }\r\n    };\r\n\r\n    onItemPreDelete = (item) => {\r\n        let allow = this.deleteHorizontalSection(item.props.id);\r\n        if (!allow)\r\n            allow = this.deleteVerticalSection(item.props.id);\r\n\r\n        return allow;\r\n    };\r\n\r\n    // Just for vertical items\r\n    onItemPreResizeStop = (item, e, dir, delta, runtimeStyle) => {\r\n        if (dir === 'e' || dir === 'w')\r\n            return;\r\n\r\n        let gridArea = item.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n\r\n        this.root.current.prepareRects();\r\n        let yLineRefs = this.props.gridLine.getYlineRef(this.root.current.props.id);\r\n        // let firstLineTop = yLineRefs[0].current.rect.top;\r\n        let firstLineTop =\r\n            this.root.current.getGridLineRect(yLineRefs[0], 0, 'y', this.root.current).top;\r\n\r\n        if (dir === 'n') {\r\n            if (delta.y > 0)\r\n            { // small from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop =\r\n                        this.root.current.getGridLineRect(yLineRefs[i], i, 'y', this.root.current).top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x1 && x12 < selectedX1) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h.props.id === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h.props.id === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x22 <= x13) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n            else\r\n            { // big from top\r\n                let targetTop = runtimeStyle.top - firstLineTop;\r\n                let selectedX1 = 1;\r\n                for (let i = yLineRefs.length - 1; i >= 0; i--) {\r\n                    let lineTop = yLineRefs[i].current.rect.top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineTop++;\r\n\r\n                    console.log(\"targetTop\", targetTop, lineTop);\r\n                    if (targetTop >= lineTop) {\r\n                        selectedX1 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                console.log(\"selectedX1\", selectedX1);\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x22 <= x1 && x12 >= selectedX1) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h.props.id === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x1 = Math.min(selectedX1, x2 - 1);\r\n            }\r\n        }\r\n        else\r\n        { // dir === 's'\r\n            if (delta.y > 0)\r\n            { // big from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom = yLineRefs[i].current.rect.top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 >= x2 && x12 < selectedX2) {\r\n                        if (y12 <= y1 && y22 >= y2) { // walk through\r\n                            let mainColIndex = this.getMainColIndex();\r\n                            let currentIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h.props.id === item.props.id;\r\n                            });\r\n                            if (mainColIndex > currentIndex) { // move right\r\n                                y12 = y2;\r\n                            } else { // move left\r\n                                y22 = y1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n            else\r\n            { // small from bottom\r\n                let targetBottom = runtimeStyle.height + (runtimeStyle.top - firstLineTop);\r\n                let selectedX2 = yLineRefs.length;\r\n                for (let i = 1; i < yLineRefs.length; i++) {\r\n                    let lineBottom = yLineRefs[i].current.rect.top - firstLineTop;\r\n                    if (i === yLineRefs.length - 1) // last line\r\n                        lineBottom++;\r\n\r\n                    if (targetBottom <= lineBottom) {\r\n                        selectedX2 = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.allSectionsH.forEach(horizontalSection => {\r\n                    let gridArea = horizontalSection.getGridArea();\r\n                    let areas = gridArea.split('/');\r\n                    let x12 = parseInt(areas[0]);\r\n                    let y12 = parseInt(areas[1]);\r\n                    let x22 = parseInt(areas[2]);\r\n                    let y22 = parseInt(areas[3]);\r\n\r\n                    if (x12 < x2 && x12 >= selectedX2) {\r\n                        if (y12 === y2) { // shift left\r\n                            y12--;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h.props.id === item.props.id;\r\n                            }) - 1;\r\n                            while (checkIndex >= 0) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y12--;\r\n                                        checkIndex--;\r\n                                    } else {\r\n                                        checkIndex = -1;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = -1;\r\n                                }\r\n                            }\r\n                        } else if (y22 === y1) { // shift right\r\n                            y22++;\r\n                            let checkIndex = this.allSectionsV.findIndex(h => {\r\n                                if (h === null)\r\n                                    return false;\r\n                                return h.props.id === item.props.id;\r\n                            }) + 1;\r\n                            while (checkIndex < this.allSectionsV.length) {\r\n                                let nextSectionV = this.allSectionsV[checkIndex];\r\n                                if (nextSectionV) {\r\n                                    let gridArea = nextSectionV.getGridArea();\r\n                                    let areas = gridArea.split('/');\r\n                                    let x13 = parseInt(areas[0]);\r\n                                    let y13 = parseInt(areas[1]);\r\n                                    let x23 = parseInt(areas[2]);\r\n                                    let y23 = parseInt(areas[3]);\r\n\r\n                                    if (x12 >= x23) {\r\n                                        y22++;\r\n                                        checkIndex++;\r\n                                    } else {\r\n                                        checkIndex = this.allSectionsV.length;\r\n                                    }\r\n                                } else {\r\n                                    checkIndex = this.allSectionsV.length;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    gridArea = `${x12}/${y12}/${x22}/${y22}`;\r\n                    horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n                });\r\n\r\n                x2 = Math.max(selectedX2, x1 + 1);\r\n            }\r\n        }\r\n\r\n        item.setGridArea(\r\n            `${x1}/${y1}/${x2}/${y2}`\r\n            , this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    addHorizontalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridX++;\r\n        this.gridTemplateRows = new Array(this.allSectionsH.length + 1).fill(0).map(a => {\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        let currentSectionIndex = index !== 0? index - 1: 0;\r\n\r\n        let currentSection = this.allSectionsH[currentSectionIndex];\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea? `${index + 1}/${\r\n            currentSectionGridArea.split('/')[1]\r\n            }/${index + 2}/${\r\n            currentSectionGridArea.split('/')[3]\r\n            }` :\r\n            \"1/1/2/2\"\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName = \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            portalNodeId={tagName === \"Section\"? \"page-main-sections\": undefined}\r\n            isSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n            }}\r\n            resizeSides={['s', 'n']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n        />;\r\n\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstRow = index + 1;\r\n\r\n            if (x2 >= firstRow)\r\n                x2++;\r\n            if (x1 >= firstRow)\r\n                x1++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (x1 >= firstCol)\r\n                x1++;\r\n            if (x2 > firstCol)\r\n                x2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined,  this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsH.splice(index, 0, agl);\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    getMainColIndex = (insertIndex) => {\r\n        let index = this.allSectionsV.findIndex(v => {\r\n            return v === null;\r\n        });\r\n\r\n        if (insertIndex !== undefined && index >= insertIndex)\r\n            return index + 1;\r\n\r\n        return index;\r\n    };\r\n\r\n    addVerticalSection = (index, tagName, dynamicComponents, as, callback) => {\r\n        this.gridY++;\r\n\r\n        let currentSectionIndex = index !== 0? index - 1: 0;\r\n\r\n        let currentSection = this.allSectionsV[currentSectionIndex];\r\n        if (currentSection === null)\r\n            currentSection = this.allSectionsV[currentSectionIndex + 1];\r\n\r\n        let currentSectionGridArea = currentSection && currentSection.getGridArea();\r\n        let gridArea = currentSectionGridArea? `${\r\n                currentSectionGridArea.split('/')[0]\r\n            }/${index + 1}/${\r\n                currentSectionGridArea.split('/')[2]\r\n            }/${index + 2}` :\r\n            `${1}/${index + 1}/${this.gridX + 1}/${index + 2}`\r\n        ;\r\n\r\n        if (!tagName)\r\n            tagName= \"Section\";\r\n\r\n        let Tag = dynamicComponents[tagName];\r\n\r\n        let section = <Tag\r\n            as={as}\r\n            portalNodeId={tagName === \"Section\"? \"page-main-sections\": undefined}\r\n            isSection\r\n            data={{\r\n                bpData: {\r\n                    gridItemStyle: {\r\n                        gridArea: gridArea,\r\n                        marginTop: \"0px\",\r\n                        marginLeft: \"0px\",\r\n                        marginBottom: \"0px\",\r\n                        marginRight: \"0px\",\r\n                    }\r\n                },\r\n                isSection: true,\r\n                isVerticalSection: true,\r\n            }}\r\n            style={{\r\n                width: \"200px\",\r\n                height: \"auto\",\r\n                minHeight: \"auto\",\r\n            }}\r\n            resizeSides={['e','w', 'n', 's']}\r\n            onItemPreDelete={this.onItemPreDelete}\r\n            onItemPreResizeStop={this.onItemPreResizeStop}\r\n        />;\r\n\r\n        this.allSectionsH.forEach(horizontalSection => {\r\n            let gridArea = horizontalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n        this.allSectionsV.forEach(verticalSection => {\r\n            if (verticalSection === null)\r\n                return;\r\n\r\n            let gridArea = verticalSection.getGridArea();\r\n            let areas = gridArea.split('/');\r\n            let x1 = parseInt(areas[0]);\r\n            let y1 = parseInt(areas[1]);\r\n            let x2 = parseInt(areas[2]);\r\n            let y2 = parseInt(areas[3]);\r\n\r\n            let firstCol = index + 1;\r\n\r\n            if (y1 >= firstCol)\r\n                y1++;\r\n            if (y2 > firstCol)\r\n                y2++;\r\n\r\n            gridArea = `${x1}/${y1}/${x2}/${y2}`;\r\n            verticalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n        });\r\n\r\n        let mainColIndex = this.getMainColIndex(index);\r\n        console.log(\"mainColIndex\", mainColIndex);\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length + 1).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined,  this.props.breakpointmanager.getHighestBpName());\r\n        this.root.current.addChild(section, undefined, undefined, undefined, (agl) => {\r\n            this.allSectionsV.splice(index, 0, agl);\r\n            this.props.select.onScrollItem();\r\n            if (callback)\r\n                callback(agl);\r\n        }, undefined, true);\r\n    };\r\n\r\n    moveUp = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex - 1];\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 + 1}/${y1}/${x22 + 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 - 1}/${y12}/${x2 - 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex - 1);\r\n        }\r\n    };\r\n\r\n    moveDown = (id) => {\r\n        let horizontalSection = this.getHorizontalSection(id);\r\n        if (!horizontalSection)\r\n            return;\r\n\r\n        let gridArea = horizontalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = x1 - 1;\r\n        let sideSection = this.allSectionsH[currentIndex + 1];\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x12 - 1}/${y1}/${x22 - 1}/${y2}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            horizontalSection.setGridArea(\r\n                `${x1 + 1}/${y12}/${x2 + 1}/${y22}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsH, currentIndex, currentIndex + 1);\r\n        }\r\n    };\r\n\r\n    moveRight = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex + 1];\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 - 1}/${x2}/${y22 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 + 1}/${x22}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 + 1}/${x2}/${y2 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                if (x13 >= firstRow || x23 <= lastRow) {\r\n                    y13--;\r\n                    y23--;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex + 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    moveLeft = (id) => {\r\n        let verticalSection = this.getVerticalSection(id);\r\n        if (!verticalSection)\r\n            return;\r\n\r\n        let gridArea = verticalSection.getGridArea();\r\n        let areas = gridArea.split('/');\r\n        let x1 = parseInt(areas[0]);\r\n        let y1 = parseInt(areas[1]);\r\n        let x2 = parseInt(areas[2]);\r\n        let y2 = parseInt(areas[3]);\r\n        let gridArea2, areas2, x12, y12, x22, y22;\r\n\r\n        let currentIndex = y1 - 1;\r\n        let sideSection = this.allSectionsV[currentIndex - 1];\r\n        if (sideSection) {\r\n            gridArea2 = sideSection.getGridArea();\r\n            areas2 = gridArea2.split('/');\r\n            x12 = parseInt(areas2[0]);\r\n            y12 = parseInt(areas2[1]);\r\n            x22 = parseInt(areas2[2]);\r\n            y22 = parseInt(areas2[3]);\r\n\r\n            sideSection.setGridArea(\r\n                `${x1}/${y12 + 1}/${x2}/${y22 + 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            verticalSection.setGridArea(\r\n                `${x12}/${y1 - 1}/${x22}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n            return;\r\n        }\r\n\r\n        // if side section was main horizontal sections\r\n        if (sideSection === null) {\r\n            verticalSection.setGridArea(\r\n                `${x1}/${y1 - 1}/${x2}/${y2 - 1}`\r\n                , this.props.breakpointmanager.getHighestBpName());\r\n            this.allSectionsH.forEach(horizontalSection => {\r\n                let gridArea = horizontalSection.getGridArea();\r\n                let areas = gridArea.split('/');\r\n                let x13 = parseInt(areas[0]);\r\n                let y13 = parseInt(areas[1]);\r\n                let x23 = parseInt(areas[2]);\r\n                let y23 = parseInt(areas[3]);\r\n\r\n                let firstRow = x1;\r\n                let lastRow = x2;\r\n\r\n                if (x13 >= firstRow || x23 <= lastRow) {\r\n                    y13++;\r\n                    y23++;\r\n                }\r\n\r\n                gridArea = `${x13}/${y13}/${x23}/${y23}`;\r\n                horizontalSection.setGridArea(gridArea, this.props.breakpointmanager.getHighestBpName());\r\n            });\r\n\r\n            swapArrayElements(this.allSectionsV, currentIndex, currentIndex - 1);\r\n        }\r\n\r\n        let mainColIndex = this.getMainColIndex();\r\n        this.gridTemplateColumns = new Array(this.allSectionsV.length).fill(0).map((a, i) => {\r\n            if (i === mainColIndex)\r\n                return mainColTemplate;\r\n            return \"auto\";\r\n        }).join(' ');\r\n        this.root.current.setGrid({\r\n            x: this.gridX,\r\n            y: this.gridY,\r\n            gridTemplateRows: this.gridTemplateRows,\r\n            gridTemplateColumns: this.gridTemplateColumns\r\n        }, undefined, this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    hasMiniMenuOverride = () => {\r\n        return false;\r\n    };\r\n\r\n    render() {\r\n        let fullWidth = (this.getAgl() && this.getAgl().getSize(false)) ||\r\n            (1001/*0.735 * this.props.editorData.innerWidth*/);\r\n        return (\r\n            <AGLWrapper tagName=\"PageBase\"\r\n                        aglRef={!this.props.aglRef? this.root: this.root = this.props.aglRef}\r\n                        {...this.props}\r\n                        className=\"Page1Root\"\r\n                        style={{\r\n                            width: `${fullWidth}px`,\r\n                            height: \"80%\",\r\n                            boxShadow: \"0 2px 12px 0 rgba(134,138,165,.41)\"\r\n                        }}\r\n                        data={this.getData()}\r\n                        isPage\r\n                        page={this}\r\n                        hasMiniMenuOverride={this.hasMiniMenuOverride}\r\n                        getInspector={this.getInspector}\r\n            >\r\n                <main\r\n                    style={{ display: \"contents\" }}\r\n                    id={\"page-main-sections\"}\r\n                />\r\n            </AGLWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nPageBase.defaultProps = {\r\n    tagName: \"PageBase\"\r\n};\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\n\r\nexport default class VerticalSpacer extends AGLComponent{\r\n    render() {\r\n        return (\r\n            <AGLWrapper\r\n                tagName=\"VerticalSpacer\"\r\n                {...this.props}\r\n                data={this.getData()}\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"20px\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import {css, StyleSheet} from \"aphrodite\";\r\n\r\nlet FadeInAnimation = {};\r\n\r\nFadeInAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let compositeDesign = item.getCompositeFromData(\"design\") || {};\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        fadeIn: {\r\n            animationName: {\r\n                \"0%\": {\r\n                    opacity: 0\r\n                },\r\n                \"100%\": {\r\n                    opacity: `${compositeDesign.opacity || \"1\"}`\r\n                }\r\n            },\r\n            animationDuration: `${options.duration || \"1s\"}`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.fadeIn);\r\n};\r\n\r\nFadeInAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default FadeInAnimation;\r\n","import {css, StyleSheet} from \"aphrodite\";\r\n\r\nlet RotateAnimation = {};\r\n\r\nRotateAnimation.getAnimationCSS = (item, options = {}) => {\r\n    let compositeTransform = item.getCompositeFromData(\"transform\") || {};\r\n    let compositeDesign = item.getCompositeFromData(\"design\") || {};\r\n\r\n    let animationStyles = StyleSheet.create({\r\n        rotate: {\r\n            animationName: {\r\n                \"0%\": {\r\n                    opacity: 0,\r\n                    transform: `rotate(${((compositeTransform.rotateDegree || 0) - 360)}deg) scale(0)`\r\n                },\r\n                \"100%\": {\r\n                    opacity: `${compositeDesign.opacity || \"1\"}`,\r\n                    transform: `rotate(${(compositeTransform.rotateDegree || 0)}deg) scale(1)`\r\n                }\r\n            },\r\n            animationDuration: `${options.duration || \"1s\"}`,\r\n            // TODO other options here\r\n        }\r\n    });\r\n\r\n    return css(animationStyles.rotate);\r\n};\r\n\r\nRotateAnimation.onAnimationEnd = (item) => {\r\n    // TODO\r\n};\r\n\r\nexport default RotateAnimation;\r\n","import ContainerBase from \"../Components/Containers/ContainerBase\";\r\nimport Header from \"../Components/Containers/Header\";\r\nimport Footer from \"../Components/Containers/Footer\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport Section from \"../Components/Containers/Section\";\r\nimport Stack from \"../Components/Stack/Stack\";\r\nimport VerticalSpacer from \"../Components/Stack/VerticalSpacer\";\r\nimport FadeInAnimation from \"../Test/Animations/FadeInAnimation\";\r\nimport RotateAnimation from \"../Test/Animations/RotateAnimation\";\r\n\r\nlet DynamicComponents = {};\r\n\r\nexport let initDynamicComponents = () => {\r\n    DynamicComponents[\"ContainerBase\"] = ContainerBase;\r\n    DynamicComponents[\"PageBase\"] = PageBase;\r\n    DynamicComponents[\"Header\"] = Header;\r\n    DynamicComponents[\"Footer\"] = Footer;\r\n    DynamicComponents[\"Section\"] = Section;\r\n    DynamicComponents[\"Stack\"] = Stack;\r\n    DynamicComponents[\"VerticalSpacer\"] = VerticalSpacer;\r\n};\r\n\r\nexport default DynamicComponents;\r\n\r\nexport let DynamicAnimations = {};\r\n\r\nexport let initDynamicAnimations = () => {\r\n    DynamicAnimations[\"fadeIn\"] = FadeInAnimation;\r\n    DynamicAnimations[\"rotate\"] = RotateAnimation;\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport classNames from \"classnames\";\r\nimport DynamicComponents from \"../Dynamic/DynamicComponents\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport '../HelperStyle.css';\r\n\r\nexport default class AdjustmentPageControllers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            anchorEl: undefined\r\n        }\r\n\r\n        console.log(\"AdjustmentPageControllers\", \"constructor\")\r\n    }\r\n\r\n    addSection = (index, isVertical) => {\r\n        let {page} = this.props;\r\n        page.addSectionQueue(index, \"Section\", DynamicComponents, undefined, isVertical);\r\n    };\r\n\r\n    getAnchor = (index) => {\r\n        return  document.getElementById(`page_add_horizontal_${index}`)\r\n    };\r\n\r\n    needUpdate = () => {\r\n        clearTimeout(this.updateTimeout);\r\n        this.updateTimeout = setTimeout(() => {\r\n            this.forceUpdate();\r\n        }, 500);\r\n    };\r\n\r\n    render () {\r\n        return null;\r\n        let {grid} = this.props;\r\n        return (\r\n                [\r\n                    new Array(grid.y + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `1/${index}/2/${index + 1}`\r\n                        };\r\n                        index === 0 && (style.justifySelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                        >\r\n                            <div\r\n                                className={containerClasses}\r\n                                onClick={(e) => {\r\n                                    this.addSection(index, true);\r\n                                }}\r\n                            >\r\n                                <img draggable={false} width={8} height={8} src={require('./icons/plus.svg')} />\r\n                            </div>\r\n                        </div>\r\n                    }),\r\n                    new Array(grid.x + 1).fill(0).map((a, index) => {\r\n                        let style = {\r\n                            gridArea: `${index}/1/${index + 1}/2`,\r\n                            pointerEvents: \"auto\"\r\n                        };\r\n                        index === 0 && (style.alignSelf = \"start\");\r\n                        index === 0 && (style.gridArea = \"1/1/2/2\");\r\n\r\n                        let containerClasses = classNames(\r\n                            \"AdjustmentPageControllersAddHorizontalSection\",\r\n                            index === 0 && \"AdjustmentPageControllersAddHorizontalSectionFirst\"\r\n                        );\r\n                        return <div\r\n                            className=\"AdjustmentPageControllersAddHorizontalSectionContainer\"\r\n                            style={style}\r\n                            key={index}\r\n                            id={`page_add_horizontal_${index}`}\r\n                            onClick={(e) => {\r\n                                console.log(\"onClick\");\r\n                                this.setState({anchorEl: e.currentTarget})\r\n                            }}\r\n                        >\r\n                            {!this.getAnchor(index) && this.needUpdate()}\r\n                            <Popper open={Boolean(document.getElementById(`page_add_horizontal_${index}`))}\r\n                                    anchorEl={\r\n                                        () => {\r\n                                            return this.getAnchor(index);\r\n                                        }\r\n                                    }\r\n                                    modifiers={{\r\n                                        preventOverflow: {\r\n                                            enabled: false,\r\n                                            boundariesElement: 'scrollParent',\r\n                                        },\r\n                                        hide: {\r\n                                            enabled: false,\r\n                                        },\r\n                                    }}\r\n                            >\r\n                                <div\r\n                                    className={containerClasses}\r\n                                    onClick={(e) => {\r\n                                        this.addSection(index, false);\r\n                                    }}\r\n                                >\r\n                                    <img draggable={false} className=\"IconImage\" width={8} height={8} src={require('./icons/plus.svg')} />\r\n                                </div>\r\n                            </Popper>\r\n                        </div>\r\n                    })\r\n                ]\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerFixedHolder extends React.Component {\r\n    render () {\r\n        let {size, id} = this.props;\r\n        return (\r\n            <div\r\n                className=\"fixed-holder\"\r\n                style={{\r\n                    top: size? size.top: 0,\r\n                    left: size? size.left: 0,\r\n                    width: size? size.clientWidth || size.width: 0,\r\n                    height: size? size.clientHeight || size.height: 0,\r\n                }}\r\n                id={`${id}_fixed_holder`}\r\n            >\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {appendStyle, cloneObject, shallowEqual, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\nimport GridChildContainerChildren from \"./GridChildContainerChildren\";\r\nimport classNames from \"classnames\";\r\nimport AdjustmentPageControllers from \"./Adjustment/AdjustmentPageControllers\";\r\nimport GridChildContainerFixedHolder from \"./GridChildContainerFixedHolder\";\r\n\r\nexport default class GridChildContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.controllerRef = React.createRef();\r\n        this.fixedHolderRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.modifyOverflowStyle(this.props.overflowData, this.props.aglStyle);\r\n        this.modifyContainerStyle(this.props.grid, this.props.aglStyle);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(this.allChildId, Object.keys(nextProps.allChildren)) ||\r\n            !shallowEqual(this.grid, nextProps.grid) ||\r\n            !shallowEqual(this.size, nextProps.size) ||\r\n            !shallowEqual(this.allChildIndex.toString(),\r\n                Object.values(nextProps.allChildren).map(c => c.zIndex)).toString()\r\n        ) {\r\n            if (!shallowEqual(this.overflowData, nextProps.overflowData))\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n\r\n            if (!shallowEqual(this.grid, nextProps.grid))\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle);\r\n\r\n            if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n                this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n                this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!shallowEqual(this.overflowData, nextProps.overflowData)) {\r\n            this.modifyOverflowStyle();\r\n        }\r\n        if (!shallowEqual(this.aglStyle, nextProps.aglStyle)) {\r\n            this.modifyOverflowStyle(nextProps.overflowData, nextProps.aglStyle);\r\n            this.modifyContainerStyle(nextProps.grid, nextProps.aglStyle);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    saveState = () => {\r\n        let {allChildren, grid, overflowData, aglStyle, size} = this.props;\r\n        this.allChildId = Object.keys(allChildren);\r\n        this.allChildIndex = Object.values(allChildren).map(c => c.zIndex);\r\n        this.grid = cloneObject(grid);\r\n        this.overflowData = cloneObject(overflowData);\r\n        this.aglStyle = cloneObject(aglStyle);\r\n        this.size = cloneObject(size);\r\n    };\r\n\r\n    modifyContainerStyle = (grid, aglStyle) => {\r\n        if (!grid)\r\n            grid = this.props.grid;\r\n\r\n        let {modifyContainerStyleOverride, agl} = this.props;\r\n\r\n        if (modifyContainerStyleOverride){\r\n            modifyContainerStyleOverride(this, agl, grid, aglStyle);\r\n            return;\r\n        }\r\n\r\n        let style = {\r\n            width: (aglStyle && aglStyle.width === \"auto\") ? \"auto\": \"100%\",\r\n            height: (aglStyle && aglStyle.height === \"auto\") ? \"auto\":\r\n                agl.getFromData(\"containerHeight\") || \"100%\",\r\n            display: \"grid\",\r\n            position: \"relative\",\r\n            gridTemplateRows: grid.gridTemplateRows,\r\n            gridTemplateColumns: grid.gridTemplateColumns,\r\n        };\r\n\r\n        let styleNode = document.getElementById(this.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, this.getContainerStyleId(), this.getContainerStyleId(), this.props.agl);\r\n        } else {\r\n            updateStyle(styleNode, style, this.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    modifyOverflowStyle = (overflowData, aglStyle) => {\r\n        let styleNode = document.getElementById(this.getOverflowStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId()\r\n                , this.getOverflowStyleId(), this.props.agl);\r\n        } else {\r\n            updateStyle(styleNode, this.getOverflowStyle(overflowData, aglStyle), this.getOverflowStyleId());\r\n        }\r\n    };\r\n\r\n    getOverflowStyle = (overflowData, aglStyle) => {\r\n        let style = {\r\n            display: \"grid\",\r\n            gridTemplateRows: \"1fr\",\r\n            gridTemplateColumns: \"1fr\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n        };\r\n\r\n        if (aglStyle && aglStyle.width === \"auto\") {\r\n            style.position = \"relative\";\r\n            style.width = \"auto\";\r\n            delete style.left;\r\n            delete style.right;\r\n        }\r\n\r\n        if (aglStyle && aglStyle.height === \"auto\") {\r\n            style.position = \"relative\";\r\n            style.height = \"auto\";\r\n            delete style.top;\r\n            delete style.bottom;\r\n        }\r\n\r\n        if (!overflowData)\r\n            overflowData = this.props.overflowData;\r\n\r\n        if (!overflowData)\r\n            return style;\r\n\r\n        if (overflowData.state === 'show') {\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'hide') {\r\n            style.overflowX = \"hidden\";\r\n            style.overflowY = \"hidden\";\r\n            return style;\r\n        }\r\n\r\n        if (overflowData.state === 'scroll') {\r\n            switch (overflowData.scroll) {\r\n                case 'vertical':\r\n                    style.overflowX = \"hidden\";\r\n                    style.overflowY = overflowData.auto ? \"auto\" : \"scroll\";\r\n                    break;\r\n                case 'horizontal':\r\n                    style.overflowX = overflowData.auto ? \"auto\" : \"scroll\";\r\n                    style.overflowY = \"hidden\";\r\n                    break;\r\n                case 'both':\r\n                    style.overflowX = overflowData.auto ? \"auto\" : \"scroll\";\r\n                    style.overflowY = overflowData.auto ? \"auto\" : \"scroll\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            return style;\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    getOverflowStyleId = () => {\r\n        return `style_overflow_${this.props.id}`\r\n    };\r\n\r\n    getContainerStyleId = () => {\r\n        return `style_container_${this.props.id}`\r\n    };\r\n\r\n    updateAdjustments = () => {\r\n        this.controllerRef.current.forceUpdate();\r\n        this.fixedHolderRef.current.forceUpdate();\r\n    };\r\n\r\n    render () {\r\n        if (!this.props.show)\r\n            return null;\r\n        this.saveState();\r\n        let {allChildren, id, grid, isPage, page, size, getChildrenOverride, agl} = this.props;\r\n\r\n        let overflowClasses = classNames(\r\n            this.getOverflowStyleId()\r\n        );\r\n        let containerClasses = classNames(\r\n            this.getContainerStyleId()\r\n        );\r\n\r\n        return (\r\n            <div\r\n                id={`${id}_overflow`}\r\n                className={overflowClasses}\r\n                ref={this.props.overflowRef}\r\n                onScroll={this.props.onScroll}\r\n            >\r\n                <div\r\n                    id={`${id}_container`}\r\n                    className={containerClasses}\r\n                    ref={this.props.containerRef}\r\n                >\r\n                    <GridChildContainerChildren\r\n                        allChildren={allChildren}\r\n                        getChildrenOverride={getChildrenOverride}\r\n                        agl={agl}\r\n                    />\r\n\r\n                    {\r\n                        isPage &&\r\n                        <AdjustmentPageControllers\r\n                            grid={grid}\r\n                            page={page}\r\n                            ref={this.controllerRef}\r\n                            document={this.props.document}\r\n                        />\r\n                    }\r\n\r\n                    {\r\n                        isPage &&\r\n                        <GridChildContainerFixedHolder\r\n                            ref={this.fixedHolderRef}\r\n                            size={size}\r\n                            id={id}\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Portal extends React.Component {\r\n    componentWillUnmount() {\r\n        if (this.defaultNode) {\r\n            document.body.removeChild(this.defaultNode);\r\n        }\r\n        this.defaultNode = null;\r\n    }\r\n\r\n    canUseDOM = !!(\r\n        typeof window !== 'undefined' &&\r\n        window.document &&\r\n        window.document.createElement\r\n    );\r\n\r\n    render() {\r\n        if (!this.canUseDOM) {\r\n            return null;\r\n        }\r\n        let node = this.props.node;\r\n        if (this.props.disabled) {\r\n            return this.props.children;\r\n        }\r\n        if (this.props.nodeId) {\r\n            node = document && document.getElementById(this.props.nodeId);\r\n        }\r\n        if (!node && !this.defaultNode) {\r\n            this.defaultNode = document.createElement('div');\r\n            document.body.appendChild(this.defaultNode);\r\n        }\r\n        return ReactDOM.createPortal(\r\n            this.props.children,\r\n            node || this.defaultNode\r\n        );\r\n    }\r\n}\r\n\r\nPortal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    node: PropTypes.any\r\n};\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport './AwesomeGridLayout.css';\r\n\r\nexport default class AGLAnchor extends React.Component {\r\n    render () {\r\n        let {anchor} = this.props;\r\n\r\n        if (!anchor)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                className=\"AGLAnchor\"\r\n                id={anchor.id}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\nlet throttle = require('lodash.throttle');\r\n\r\nexport default class ResizePane extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane`,\r\n            {\"Adjustment-CornerCircle\": this.isCorner()},\r\n            \"Adjustment-Pane\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.onMouseDown}\r\n                className={classes}\r\n                style={{...style, ...this.props.style}}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport {stretch} from \"../AwesomwGridLayoutHelper\";\r\n\r\nexport default class AdjustmentStretch extends React.Component {\r\n    onClick = (e) => {\r\n        let {itemId, idMan} = this.props;\r\n        stretch(idMan.getItem(itemId));\r\n    };\r\n\r\n    onMouseDown = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    render () {\r\n        let {isStretch} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                className=\"AdjustmentStretchRoot\"\r\n                onPointerDown={this.onMouseDown}\r\n                onClick={this.onClick}\r\n                style={this.props.style}\r\n            >\r\n                {\r\n                    isStretch && <img draggable={false} width={16} height={16} src={require('./icons/minimize.svg')} />\r\n                }\r\n                {\r\n                    !isStretch && <img draggable={false} width={16} height={16} src={require('./icons/maximize.svg')} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css';\r\nimport classNames from 'classnames';\r\nlet throttle = require('lodash.throttle');\r\n\r\nexport default class ResizePanePage extends React.Component {\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY\r\n        };\r\n        this.delta = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.props.onResizeStart(e, this.props.side, this.delta);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResize(e, this.props.side, this.delta);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.delta.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.delta.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.props.onResizeStop(e, this.props.side, this.delta);\r\n    };\r\n\r\n    isCorner = () => {\r\n        return this.props.side.length === 2;\r\n    };\r\n    render () {\r\n        let classes = classNames(\r\n            `Adjustment-${this.props.side}-pane-page`,\r\n            \"Adjustment-Pane\"\r\n        );\r\n        let style = {};\r\n        if (this.props.draggingStart)\r\n            style.pointerEvents = \"none\";\r\n\r\n        return (\r\n            <div\r\n                id={this.props.id}\r\n                onPointerDown={this.onMouseDown}\r\n                className={classes}\r\n                style={style}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport ResizePanePage from \"./ResizePanePage\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\n\r\nexport default class AdjustmentResizePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"AdjustmentResizePage\")\r\n    }\r\n    render () {\r\n        let {top, left, width, height, itemId} = this.props;\r\n        if (top === undefined || left === undefined || width === undefined || height === undefined)\r\n            return null;\r\n\r\n        return (\r\n                <div\r\n                    id=\"AdjustmentResizePage\"\r\n                    style={{\r\n                        width: width,\r\n                        height: height,\r\n                        // left: left? left: 0,\r\n                        // top: top? top : 0,\r\n                        // bottom: top? window.innerHeight - top - height: 0,\r\n                        // right: left? window.innerWidth - left - width: 0,\r\n                    }}\r\n                    // className=\"AdjustmentResizeRootPage\"\r\n                    className=\"AdjustmentResizeRoot\"\r\n                >\r\n                    {\r\n                        this.props.sides.map((side, index) => {\r\n                            return <ResizePanePage\r\n                                key={index}\r\n                                side={side}\r\n                                onResizeStart={this.props.onResizeStart}\r\n                                onResize={this.props.onResize}\r\n                                onResizeStop={this.props.onResizeStop}\r\n                                draggingStart={this.props.draggingStart}\r\n                            />\r\n                        })\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","export default class EventTrigger {\r\n    constructor(defaultListener) {\r\n        this.listeners = [];\r\n        if (defaultListener)\r\n            this.listeners.push(defaultListener);\r\n    }\r\n\r\n    addListener = (listener) => {\r\n        if (!this.listeners.find(l => { return l === listener; })) {\r\n            this.listeners.push(listener);\r\n        }\r\n    };\r\n\r\n    trigger = (data) => {\r\n        if (!this.prevent) {\r\n            this.prevent = true;\r\n            this.listeners.forEach(l => {\r\n                l(data);\r\n            });\r\n            setTimeout(() => {\r\n                this.prevent = false;\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    removeListener = (listener) => {\r\n        let index = this.listeners.findIndex(l => { return l === listener; })\r\n        if (index >= 0)\r\n            this.listeners.splice(index, 1);\r\n    };\r\n}\r\n","let windowCache = {\r\n    boundingRects: {},\r\n    clientsWidth: {},\r\n    clientsHeight: {}\r\n};\r\n\r\nlet clearCache = () => {\r\n    windowCache.boundingRects = {};\r\n    windowCache.clientsWidth = {};\r\n    windowCache.clientsHeight = {};\r\n    delete windowCache.clearCacheTimeuot;\r\n};\r\n\r\nexport let getCachedBoundingRect = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot)\r\n        windowCache.clearCacheTimeuot = setTimeout(() => {\r\n            clearCache();\r\n        }, 0);\r\n\r\n    if (!windowCache.boundingRects[id])\r\n        windowCache.boundingRects[id] = node.getBoundingClientRect();\r\n\r\n    return windowCache.boundingRects[id];\r\n};\r\n\r\nexport let getCachedClientWidth = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot)\r\n        windowCache.clearCacheTimeuot = setTimeout(() => {\r\n            clearCache();\r\n        }, 0);\r\n\r\n    if (!windowCache.clientsWidth[id])\r\n        windowCache.clientsWidth[id] = node.clientWidth;\r\n\r\n    return windowCache.clientsWidth[id];\r\n};\r\n\r\nexport let getCachedClientHeight = (id, node) => {\r\n    if (!windowCache.clearCacheTimeuot)\r\n        windowCache.clearCacheTimeuot = setTimeout(() => {\r\n            clearCache();\r\n        }, 0);\r\n\r\n    if (!windowCache.clientsHeight[id])\r\n        windowCache.clientsHeight[id] = node.clientHeight;\r\n\r\n    return windowCache.clientsHeight[id];\r\n};\r\n\r\nexport let addToCache = (id, rect, propName) => {\r\n    windowCache[propName][id] = rect;\r\n};\r\n","import React from \"react\";\r\nexport default class AnimationHolder extends React.Component {\r\n    render () {\r\n        if (!this.props.animation)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <div\r\n                    className={this.props.className}\r\n                    id={this.props.id}\r\n                    onAnimationEnd={this.props.onAnimationEnd}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\nexport default class VisibilitySensorWrapper extends React.Component {\r\n    render () {\r\n        if (!this.props.animation)\r\n            return this.props.children;\r\n        else\r\n            return (\r\n                <VisibilitySensor\r\n                    partialVisibility onChange={(v) => {\r\n                    if (this.props.animation && this.props.animation.once && v) {\r\n                        !this.props.editor && this.props.playAnimation(true);\r\n                        return;\r\n                    }\r\n\r\n                    if (this.props.animation && v)\r\n                        !this.props.editor && this.props.playAnimation();\r\n                }}\r\n                    containment={this.props.select.getPageOverflowRef()}\r\n                    active={this.props.animation && !this.props.disableVS}\r\n                >\r\n                    {this.props.children}\r\n                </VisibilitySensor>\r\n            )\r\n    }\r\n}\r\n","import {css, StyleSheet} from \"aphrodite\";\r\n\r\nlet ResizeAnimation = {};\r\n\r\nResizeAnimation.getAnimationCSS = (w1, w2, h1, h2) => {\r\n\r\n    console.log()\r\n    let animationStyles = StyleSheet.create({\r\n        resize: {\r\n            animationName: {\r\n                \"0%\": {\r\n                    width: w2,\r\n                    height: h2\r\n                },\r\n                \"100%\": {\r\n                    width: w2,\r\n                    height: h2\r\n                }\r\n            },\r\n            animationDuration: \"99s\",\r\n            animationTimingFunction: \"steps(99, end)\"\r\n        }\r\n    });\r\n\r\n    return {css: css(animationStyles.resize), style: {\r\n        animationName: `${animationStyles.resize._name} !important`,\r\n        animationDuration: \"99s\",\r\n        animationTimingFunction: \"steps(99, end) !important\"\r\n    }};\r\n};\r\n\r\nexport default ResizeAnimation;\r\n","import React from \"react\";\r\nimport debounce from 'lodash.debounce';\r\nimport {appendStyle, cloneObject, initGriddata, updateStyle} from \"./AwesomeGridLayoutUtils\";\r\nimport './AwesomeGridLayout.css';\r\nimport GridChildContainer from \"./GridChildContainer\";\r\nimport DynamicComponents, {DynamicAnimations} from \"./Dynamic/DynamicComponents\";\r\nimport classNames from \"classnames\";\r\nimport Portal from \"./Portal\";\r\nimport {\r\n    createItem,\r\n    getCompositeDesignData,\r\n    isFixed,\r\n    isGroupSelected,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport AGLAnchor from \"./AGLAnchor\";\r\nimport AdjustmentResizePage from \"./Adjustment/AdjustmentResizePage\";\r\nimport EventTrigger from \"./Test/EventTrigger\";\r\nimport {addToCache, getCachedBoundingRect, getCachedClientHeight, getCachedClientWidth} from \"./Test/WindowCache\";\r\nimport AnimationHolder from \"./AnimationHolder\";\r\nimport VisibilitySensorWrapper from \"./Test/VisibilitySensorWrapper\";\r\nimport getStyledTag, {getTag} from \"./Test/StyledTest\";\r\nimport AGLWrapper from \"./Components/Helpers/AGLWrapper\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport ResizeAnimation from \"./Test/ResizeAnimation\";\r\n\r\nexport default class AwesomeGridLayout2 extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            childContainers: [],\r\n            grid: {x: 1, y: 1, gridTemplateRows: \"1fr\", gridTemplateColumns: \"1fr\"},\r\n            portalNodeId: props.portalNodeId,\r\n            windowWidth: props.breakpointmanager.getWindowWidth()\r\n        };\r\n\r\n        this.rootDivRef = React.createRef();\r\n        this.overflowRef = React.createRef();\r\n        this.containerRef = React.createRef();\r\n        this.backContainerRef = React.createRef();\r\n        this.allChildRefs = {};\r\n\r\n        this.children = {};\r\n\r\n        initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        this.props.idMan.setItem(this.props.id, this);\r\n\r\n        this.onPropsChange = new EventTrigger();\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n        this.init();\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (this.needRender) {\r\n            delete this.needRender;\r\n            this.updateLayout(() => {\r\n                this.onSelect(this.getFromTempData(\"selected\"), this.lateMounted);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    callOverride = (funcName, ...args) => {\r\n        let override = this.getOverrideProp(funcName);\r\n        if (override) {\r\n            return override(this, ...args);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    hasOverride = (funcName) => {\r\n        return this.getOverrideProp(funcName);\r\n    };\r\n\r\n    init = () => {\r\n        this.needRender = true;\r\n\r\n        this.children = {};\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let savedChildren = this.props.griddata.savedChildren;\r\n        if (!savedChildren) {\r\n            this.props.griddata.savedChildren = {};\r\n            savedChildren = this.props.griddata.savedChildren;\r\n\r\n            React.Children.map(this.props.children, (child, i)=> {\r\n                if (child) {\r\n                    let props = {...child.props};\r\n                    let createdChild = this.createChildByData({\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: props\r\n                    }, DynamicComponents);\r\n                    this.children[props.id] = {\r\n                        // child: this.getChildClone(child),\r\n                        child: createdChild,\r\n                        zIndex: lastZIndex + 1\r\n                    };\r\n\r\n                    savedChildren[props.id] = {\r\n                        tagName: child.type.name ? child.type.name : child.type,\r\n                        props: this.getClearProps(props),\r\n                        zIndex: this.children[props.id].zIndex\r\n                    };\r\n\r\n                    lastZIndex++;\r\n                }\r\n            });\r\n\r\n            if (this.renderChild) {\r\n                let childs = this.renderChild();\r\n                if (childs instanceof Array) {\r\n                    childs.forEach(c => {\r\n                        if (c) {\r\n                            let props = {...c.props};\r\n                            let createdChild = this.createChildByData({\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: props\r\n                            }, DynamicComponents);\r\n                            this.children[props.id] = {\r\n                                child: createdChild,\r\n                                zIndex: lastZIndex + 1\r\n                            };\r\n\r\n                            savedChildren[props.id] = {\r\n                                tagName: c.type.name? c.type.name: c.type,\r\n                                props: this.getClearProps(props),\r\n                                zIndex: this.children[props.id].zIndex\r\n                            };\r\n\r\n                            lastZIndex++;\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (childs) {\r\n                        let props = {...childs.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: childs.type.name ? childs.type.name : childs.type,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.props.childrenData) {\r\n                let childs = this.props.childrenData();\r\n                childs.forEach(c => {\r\n                    if (c) {\r\n                        let props = {...c.props};\r\n                        let createdChild = this.createChildByData({\r\n                            tagName: c.tagName,\r\n                            props: props\r\n                        }, DynamicComponents);\r\n                        this.children[props.id] = {\r\n                            child: createdChild,\r\n                            zIndex: lastZIndex + 1\r\n                        };\r\n\r\n                        savedChildren[props.id] = {\r\n                            tagName: c.tagName,\r\n                            props: this.getClearProps(props),\r\n                            zIndex: this.children[props.id].zIndex\r\n                        };\r\n\r\n                        lastZIndex++;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            let savedChildrenArray = Object.values(savedChildren);\r\n            savedChildrenArray.sort((a, b) => {\r\n                if (a.zIndex > b.zIndex) {\r\n                    return 1;\r\n                } else if (a.zIndex === b.zIndex) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    return 0;\r\n                }\r\n                return -1;\r\n            });\r\n            savedChildrenArray.forEach(childData => {\r\n                let oldId = childData.props.id;\r\n                let child = this.createChildByData(childData, DynamicComponents);\r\n                this.children[childData.props.id] = {\r\n                    child: child,\r\n                    zIndex: childData.zIndex\r\n                };\r\n\r\n                if (oldId !== childData.props.id) {\r\n                    delete savedChildren[oldId];\r\n                    savedChildren[childData.props.id] = childData;\r\n                }\r\n            })\r\n        }\r\n\r\n        this.initLayout();\r\n    };\r\n\r\n    initLayout = () => {\r\n        if (this.callOverride(\"initLayout\"))\r\n            return;\r\n\r\n        let style = this.getDefaultStyle();\r\n\r\n        let designStyle = {...this.props.designStyle};\r\n        this.setDesignStyle(this.getFromData(\"designStyle\") || designStyle, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setStyle(this.getFromData(\"style\") || style, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGridItemStyle(this.getFromData(\"gridItemStyle\") ||\r\n            this.props.defaultGridItemStyle,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n        this.setGrid(this.getFromData(\"grid\") || this.props.defaultGrid, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n    };\r\n\r\n    getDefaultStyle = () => {\r\n        let style = { ...this.props.defaultStyle, ...this.props.style};\r\n\r\n        if ((this.props.defaultGridItemStyle).justifySelf === \"stretch\" &&\r\n            (this.getFromTempData(\"resizable\") &&\r\n                (!this.props.resizeSides || (!this.props.resizeSides.includes(\"w\") &&\r\n                    !this.props.resizeSides.includes(\"e\"))))) {\r\n            style.width = \"auto\";\r\n        }\r\n\r\n        return style;\r\n    };\r\n\r\n    lateMounted = () => {\r\n        if (this.hasOverride(\"lateMounted\")) {\r\n            return this.callOverride(\"lateMounted\");\r\n        }\r\n\r\n        let size = this.getSize(false, true, true);\r\n        this.addToSnap();\r\n        // this.onSelect(this.getFromTempData(\"selected\"));\r\n\r\n        let baseDocks = this.getBaseDocks();\r\n        this.setDocks(baseDocks.top, baseDocks.left, baseDocks.bottom, baseDocks.right,\r\n            this.getFromTempData(\"autoDock\"),\r\n            this.props.breakpointmanager.getHighestBpName(), true);\r\n\r\n        console.log(this.props.id, size.height);\r\n\r\n        if (this.props.onPageResize) {\r\n            this.props.onPageResize(size.width, this, true);\r\n        }\r\n\r\n        this.props.onChildMounted && this.props.onChildMounted(this);\r\n    };\r\n\r\n    getPrimaryOptions = () => {\r\n        return this.props.getPrimaryOptions && this.props.getPrimaryOptions();\r\n    };\r\n\r\n    getShortcutOptions = () => {\r\n        return this.props.getShortcutOptions && this.props.getShortcutOptions();\r\n    };\r\n\r\n    hasMiniMenu = () => {\r\n        if (this.hasOverride(\"hasMiniMenu\")) {\r\n            return this.callOverride(\"hasMiniMenu\");\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    addToSnap = debounce(() => {\r\n        if (this.callOverride(\"addToSnap\"))\r\n            return;\r\n\r\n        let rect = this.getSize(false);\r\n        this.props.snap.addSnap(this.props.id,\r\n            [\r\n                {\r\n                    id: this.props.id,\r\n                    value: rect.top,\r\n                    p1: rect.left,\r\n                    p2: rect.left + rect.width\r\n                },\r\n                {\r\n                    id: this.props.id,\r\n                    value: rect.top + rect.height / 2,\r\n                    p1: rect.left,\r\n                    p2: rect.left + rect.width\r\n                },\r\n                {\r\n                    id: this.props.id,\r\n                    value: rect.top + rect.height,\r\n                    p1: rect.left,\r\n                    p2: rect.left + rect.width\r\n                }\r\n            ],\r\n            [\r\n                {\r\n                    id: this.props.id,\r\n                    value: rect.left,\r\n                    p1: rect.top,\r\n                    p2: rect.top + rect.height\r\n                },\r\n                {\r\n                    id: this.props.id,\r\n                    value: rect.left + rect.width / 2,\r\n                    p1: rect.top,\r\n                    p2: rect.top + rect.height\r\n                },\r\n                {\r\n                    id: this.props.id,\r\n                    value: rect.left + rect.width,\r\n                    p1: rect.top,\r\n                    p2: rect.top + rect.height\r\n                }\r\n            ],\r\n            this.getParentsId()\r\n        );\r\n\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current){\r\n                childRef.current.addToSnap();\r\n            }\r\n        });\r\n    }, 500);\r\n\r\n    getParentsId = () => {\r\n        let parentsId = [];\r\n        let parent = this.props.parent;\r\n\r\n        while (parent) {\r\n            parentsId.push(parent.props.id);\r\n            parent = parent.props.parent;\r\n        }\r\n\r\n        return parentsId;\r\n    };\r\n\r\n    getGridLineSnaps = () => {\r\n        let snaps = {\r\n            horizontals: [],\r\n            verticals: [],\r\n            id: this.props.id\r\n        };\r\n        this.prepareRects();\r\n        let xLineRef = this.props.gridLine.getXlineRef(this.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            // let current = xLineRef[i].current;\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.verticals.push({\r\n                id: this.props.id,\r\n                value: rect.left + ((i === xLineRef.length - 1)? 1: 0),\r\n                p1: rect.top,\r\n                p2: rect.top + rect.height\r\n            });\r\n        }\r\n        let yLineRef = this.props.gridLine.getYlineRef(this.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let current = yLineRef[i].current;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', this);\r\n            if (!rect)\r\n                continue;\r\n\r\n            // let rect = current.getBoundingClientRect();\r\n            // let rect = current.rect;\r\n            snaps.horizontals.push({\r\n                id: this.props.id,\r\n                value: rect.top + ((i === yLineRef.length - 1)? 1: 0),\r\n                p1: rect.left,\r\n                p2: rect.left + rect.width\r\n            });\r\n        }\r\n\r\n        return [snaps];\r\n    };\r\n\r\n    createChildByData = (childData, dynamicComponents, newId, onChildMounted, fixed) => {\r\n        if (this.callOverride(\"addToSnap\", childData, dynamicComponents, newId, onChildMounted, fixed))\r\n            return;\r\n\r\n        let tagName = childData.tagName;\r\n        let props = childData.props;\r\n\r\n        let griddata = initGriddata(props.griddata, this.props.breakpointmanager);\r\n\r\n        if (newId)\r\n            props.id = newId;\r\n        if (!props.id)\r\n            props.id = this.props.idMan.getId(tagName);\r\n        else\r\n            props.id = this.props.idMan.getId(tagName, props.id);\r\n\r\n        griddata.id = props.id;\r\n        if (!props.griddata || newId)\r\n            props.griddata = griddata;\r\n\r\n        this.allChildRefs[props.id] = React.createRef();\r\n\r\n        let AGLProps = {};\r\n        if (tagName[0] == tagName[0].toUpperCase()) {\r\n            AGLProps = {\r\n                aglRef: this.allChildRefs[props.id],\r\n                breakpointmanager: this.props.breakpointmanager,\r\n                undoredo: this.props.undoredo,\r\n                dragdrop: this.props.dragdrop,\r\n                select: this.props.select,\r\n                snap: this.props.snap,\r\n                idMan: this.props.idMan,\r\n                copyMan: this.props.copyMan,\r\n                window: this.props.window,\r\n                document: this.props.document,\r\n                editorData: this.props.editorData,\r\n                anchorMan: this.props.anchorMan,\r\n                gridLine: this.props.gridLine,\r\n                gridEditorRef: this.props.gridEditorRef,\r\n                parent: this,\r\n                editor: this.props.editor,\r\n                onChildMounted: onChildMounted,\r\n                portalNodeId: fixed && `${this.props.id}_fixed_holder`,\r\n                ...this.getAllChildOverrideProps()\r\n            };\r\n        }\r\n\r\n        return React.createElement(\r\n            tagName[0] == tagName[0].toUpperCase()? dynamicComponents[tagName]: tagName,\r\n            {\r\n                ...props,\r\n                key: props.id,\r\n                ...AGLProps,\r\n            }\r\n        );\r\n    };\r\n\r\n    getSize = (updateState = true, force, fullForce) => {\r\n        if (!this.rootDivRef.current)\r\n            return;\r\n\r\n        if (this.tempSize && !force)\r\n            return cloneObject(this.tempSize);\r\n\r\n        let rect = fullForce ? this.rootDivRef.current.getBoundingClientRect() :\r\n            getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n        let clientWidth = fullForce ? this.overflowRef.current.clientWidth :\r\n            getCachedClientWidth(this.props.id, this.overflowRef.current);\r\n        let clientHeight = fullForce ? this.overflowRef.current.clientHeight :\r\n            getCachedClientHeight(this.props.id, this.overflowRef.current);\r\n        let temp = {\r\n            x: rect.width,\r\n            y: rect.height,\r\n            clientWidth: clientWidth,\r\n            clientHeight: clientHeight,\r\n            scrollLeft: this.overflowRef.current? this.overflowRef.current.scrollLeft : 0,\r\n            scrollTop: this.overflowRef.current? this.overflowRef.current.scrollTop: 0,\r\n            top: rect.top,\r\n            left: rect.left,\r\n            bottom: rect.bottom,\r\n            right: rect.right,\r\n            width: rect.width,\r\n            height: rect.height\r\n        };\r\n\r\n        this.tempSize = temp;\r\n\r\n        if (fullForce) {\r\n            addToCache(this.props.id, this.tempSize, \"boundingRects\");\r\n            addToCache(this.props.id, clientWidth, \"clientsWidth\");\r\n            addToCache(this.props.id, clientHeight, \"clientsHeight\");\r\n        }\r\n\r\n        return temp;\r\n    };\r\n\r\n    getBoundarySize = (updateState = true, force) => {\r\n        return this.getSize(updateState, force);\r\n    };\r\n\r\n    invalidateSize = (updateParent = true, updateChildren = true) => {\r\n        delete this.tempSize;\r\n        if (updateChildren) {\r\n            Object.values(this.allChildRefs).forEach(childRef => {\r\n                if (childRef && childRef.current) {\r\n                    childRef.current.invalidateSize();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (updateParent) {\r\n            this.getParentsId().forEach(id => {\r\n                let parent = this.props.idMan.getItem(id);\r\n                if (parent && parent.mounted) {\r\n                    parent.invalidateSize(false, false);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    arrangeIndex = (child, type) => {\r\n        let childData = this.getFromTempData(\"savedChildren\")[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let indexData = this.getNextIndexData(currentIndex);\r\n        switch (type) {\r\n            case \"forward\":\r\n                childData.zIndex = indexData.nextZIndex;\r\n                if (indexData.nextChild)\r\n                    indexData.nextChild.zIndex = currentIndex;\r\n                break;\r\n            case \"backward\":\r\n                childData.zIndex = indexData.prevZIndex;\r\n                if (indexData.prevChild)\r\n                    indexData.prevChild.zIndex = currentIndex;\r\n                break;\r\n            case \"front\":\r\n                childData.zIndex = indexData.lastZIndex + 1;\r\n                break;\r\n            case \"back\":\r\n                childData.zIndex = indexData.firstZIndex - 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    changeIndex = (child, index) => {\r\n        let allChildData = this.getFromTempData(\"savedChildren\");\r\n        let childData = allChildData[child.props.id];\r\n        let currentIndex = childData.zIndex;\r\n\r\n        if (currentIndex === index)\r\n            return;\r\n\r\n        if (!currentIndex)\r\n            currentIndex = 0;\r\n\r\n        let findIndex = (zIndex) => {\r\n            return allChildData.findIndex(a => {\r\n                return a.zIndex === zIndex;\r\n            });\r\n        };\r\n\r\n        let change = currentIndex < index ? -1 : 1;\r\n\r\n        if (findIndex(index)) // if false, means index is free to set\r\n        {\r\n            let startIndex = currentIndex < index ? findIndex(currentIndex) || 0 : findIndex(index);\r\n            let lastIndex = currentIndex < index ? findIndex(index) : findIndex(currentIndex) || 0 ;\r\n\r\n            for (let i = startIndex; i < lastIndex + 1; i++) {\r\n                let testChildData = allChildData[i];\r\n                testChildData.zIndex += change;\r\n            }\r\n        }\r\n\r\n        childData.zIndex = index;\r\n\r\n        this.updateLayout();\r\n    };\r\n\r\n    getNextIndexData = (currentIndex) => {\r\n        let children = Object.values(this.getFromTempData(\"savedChildren\") || {});\r\n        children.sort((a, b) => {\r\n            if (a.zIndex > b.zIndex) {\r\n                return 1;\r\n            } else if (a.zIndex === b.zIndex) {\r\n                // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n        let result = {};\r\n        for (let i = 0; i < children.length; i++){\r\n            let child = children[i];\r\n\r\n            let childZIndex = child.zIndex;\r\n\r\n            if (i === 0) {\r\n                result.firstZIndex = childZIndex;\r\n            }\r\n\r\n            if (i === children.length - 1) {\r\n                result.lastZIndex = childZIndex;\r\n            }\r\n\r\n            if (result.nextChild === undefined && childZIndex > currentIndex){\r\n                result.nextChild = child;\r\n                result.nextZIndex = childZIndex;\r\n                continue;\r\n            }\r\n\r\n            if (childZIndex < currentIndex){\r\n                result.prevChild = child;\r\n                result.prevZIndex = childZIndex;\r\n                // continue;\r\n            }\r\n        }\r\n\r\n        if (!result.nextChild)\r\n            result.nextZIndex = result.lastZIndex + 1;\r\n        if (!result.prevChild)\r\n            result.prevZIndex = result.firstZIndex - 1;\r\n\r\n        if (result.lastZIndex === undefined)\r\n            result.lastZIndex = 0;\r\n\r\n        return result;\r\n    };\r\n\r\n    updateLayout = (callback) => {\r\n        if (this.callOverride(\"updateLayout\", callback))\r\n            return;\r\n\r\n        this.forceUpdate(callback);\r\n    };\r\n\r\n    isPointInclude = (x, y, forceCalculate) => {\r\n        let rect = this.getSize(false, forceCalculate);\r\n        return x >= rect.left && x <= rect.left + rect.width &&\r\n            y >= rect.top && y <= rect.top + rect.height;\r\n    };\r\n\r\n    addChild = (childElement, newId, newProps, callback, onChildMounted, fixed, keepChildren) => {\r\n        if (this.callOverride(\"addChild\", childElement, newId, newProps, callback, onChildMounted, fixed))\r\n            return;\r\n\r\n        if (!childElement.props.tagName && !childElement.type) {\r\n            throw new Error(\"childElement must pass tagName prop to AGL or be primitive type\");\r\n        }\r\n\r\n        let lastZIndex = this.getNextIndexData(0).lastZIndex;\r\n        let props = newId? newProps: {...childElement.props};\r\n        let createdChild = this.createChildByData({\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props, keepChildren)\r\n        }, DynamicComponents, newId, onChildMounted, fixed);\r\n        this.children[props.id] = {\r\n            child: createdChild,\r\n            zIndex: lastZIndex + 1\r\n        };\r\n\r\n        this.props.griddata.savedChildren[props.id] = {\r\n            tagName: childElement.props.tagName? childElement.props.tagName:\r\n                childElement.type.name? childElement.type.name: childElement.type,\r\n            props: this.getClearProps(props),\r\n            zIndex: this.children[props.id].zIndex\r\n        };\r\n\r\n        this.updateLayout(callback);\r\n        this.props.onChildAdd && this.props.onChildAdd();\r\n    };\r\n\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.callOverride(\"onBreakpointChange\", width, newBreakpointName, devicePixelRatio))\r\n            return;\r\n\r\n        let style = this.getCompositeFromData(\"style\");\r\n        let designStyle = this.getCompositeFromData(\"designStyle\");\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        let transform = this.getCompositeFromData(\"transform\");\r\n        this.setStyle(style, undefined, undefined, true);\r\n        this.setDesignStyle(designStyle, undefined, undefined, true);\r\n        this.setGridItemStyle(gridItemStyle, undefined, true);\r\n        this.setTransformStyle(transform, undefined, undefined, true);\r\n\r\n        // this.setState({ windowWidth: width, devicePixelRatio }, () => {\r\n            Object.values(this.allChildRefs).forEach(childRef => {\r\n                if (childRef && childRef.current) {\r\n                    childRef.current.onBreakpointChange(width, newBreakpointName);\r\n                }\r\n            });\r\n        // });\r\n    };\r\n\r\n    delete = (fromUndoRedo) => {\r\n        if (this.callOverride(\"delete\"))\r\n            return;\r\n\r\n        if (!this.props.parent)\r\n            return;\r\n\r\n        if (this.props.onItemPreDelete) {\r\n            let allow = this.props.onItemPreDelete(this);\r\n            if (!allow)\r\n                return;\r\n        }\r\n\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let childData = cloneObject(this.props.parent.getChildData(itemId));\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).delete(true);\r\n            }, (idMan) => {\r\n                createItem(idMan.getItem(parentId), childData, true);\r\n            });\r\n        }\r\n\r\n        this.clearItem();\r\n\r\n        this.props.parent.removeChildElement(this);\r\n\r\n        this.props.select.clearMiniMenu();\r\n    };\r\n\r\n    getChildData = (childId) => {\r\n        return this.props.griddata.savedChildren[childId];\r\n    };\r\n\r\n    getOverrideProp = (funcName) => {\r\n        let key = Object.keys(this.props).find(key => {\r\n            return key === `${funcName}Override`;\r\n        });\r\n\r\n        return this.props[key];\r\n    };\r\n\r\n    getAllOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"Override\")) {\r\n                result[key] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    getAllChildOverrideProps = (props) => {\r\n        let result = {};\r\n        Object.keys(props || this.props).forEach(key => {\r\n            if (key.endsWith(\"ChildOverride\")) {\r\n                result[key.replace(\"ChildOverride\", \"Override\")] = this.props[key];\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    clearItem = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        this.props.gridLine.removeGridLine(this.props.id);\r\n        this.props.snap.removeSnap(this.props.id);\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.clearItem();\r\n            }\r\n        });\r\n    };\r\n\r\n    getClearProps = (props, keepChildren) => {\r\n        delete props.breakpointmanager;\r\n        delete props.undoredo;\r\n        delete props.dragdrop;\r\n        delete props.select;\r\n        delete props.snap;\r\n        delete props.idMan;\r\n        delete props.copyMan;\r\n        delete props.anchorMan;\r\n        delete props.aglRef;\r\n        delete props.parent;\r\n        delete props.window;\r\n        delete props.document;\r\n        if (!keepChildren)\r\n            delete props.children;\r\n        delete props.allChildRefs;\r\n        delete props.gridLine;\r\n        delete props.portalNode;\r\n        delete props.gridEditorRef;\r\n        delete props.onChildMounted;\r\n\r\n        Object.keys(this.getAllOverrideProps(props)).forEach(key => {\r\n            delete props[key];\r\n        });\r\n\r\n        return props;\r\n    };\r\n\r\n    removeChildElement = (childElement, callback) => {\r\n        if (this.hasOverride(\"removeChildElement\"))\r\n            return this.callOverride(\"removeChildElement\", childElement);\r\n\r\n        delete this.children[childElement.props.id];\r\n        delete this.allChildRefs[childElement.props.id];\r\n        delete this.props.griddata.savedChildren[childElement.props.id];\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n            this.updateLayout(callback);\r\n        }, 0);\r\n    };\r\n\r\n    // Can be remove carefully\r\n    hide = () => {\r\n        this.setState({hide: true});\r\n    };\r\n\r\n    // Can be remove carefully\r\n    show = () => {\r\n        this.setState({hide: false});\r\n    };\r\n\r\n    onMouseOver = (e, fromEnter) => {\r\n        if (!this.props.dragdrop.getDragging()) {\r\n            e.stopPropagation();\r\n\r\n            // if (this.getFromTempData(\"selected\"))\r\n            //     return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            this.setMouseOverForNonDragging(this);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n        } else {\r\n            if (this.props.dragdrop.getDragging().props.id === this.props.id)\r\n                return;\r\n\r\n            e.stopPropagation();\r\n\r\n            let rect = getCachedBoundingRect(this.props.id, this.rootDivRef.current);\r\n            if (e.clientX < rect.x - 1 || e.clientX > (rect.x + rect.width) ||\r\n                e.clientY < rect.y - 1 || e.clientY > (rect.y + rect.height))\r\n                return;\r\n\r\n            this.setItemHover(true);\r\n\r\n            if (this.props.parent && this.props.parent.onMouseOut) {\r\n                setTimeout(() => {\r\n                    if (!this.mounted)\r\n                        return;\r\n                    this.props.parent.onMouseOut(e, true);\r\n                }, 10);\r\n            }\r\n\r\n            this.setMouseOver(this, {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }, (draggingItem, mouseOver) => {\r\n                // on new parent state changed\r\n                draggingItem.toggleHelpLines(this);\r\n            });\r\n        }\r\n    };\r\n\r\n    setMouseOverForNonDragging = () => {\r\n        if (this.hasOverride(\"setMouseOverForNonDragging\"))\r\n            return this.callOverride(\"setMouseOverForNonDragging\");\r\n\r\n        this.props.dragdrop.setMouseOverForNonDragging(this);\r\n    };\r\n\r\n    setItemHover = (hover) => {\r\n        if (hover)\r\n            this.props.select.updateHover(this, this.getSize(false));\r\n        else\r\n            this.props.select.updateHover(this, undefined, true);\r\n    };\r\n\r\n    onMouseEnter = (e) => {\r\n        this.onMouseOver(e, true);\r\n    };\r\n\r\n    onMouseOut = (e, outAllParent) => {\r\n        if (outAllParent && this.props.parent && this.props.parent.onMouseOut)\r\n            this.props.parent.onMouseOut(e);\r\n\r\n        this.setItemHover(false);\r\n    };\r\n\r\n    prepareRects = (forceRect, forceGridLines) => {\r\n        if (this.hasOverride(\"prepareRects\"))\r\n            return this.callOverride(\"prepareRects\", forceRect, forceGridLines);\r\n\r\n        // this.rootDivRef.current.rect = this.getSize(false, force);\r\n        let rect = this.getSize(false, forceRect);\r\n        if (forceGridLines || !this.props.gridLine.isPrepared(this.props.id)) {\r\n            this.props.gridLine.prepareRects(this.props.id);\r\n        }\r\n\r\n        return rect;\r\n    };\r\n\r\n    onChildDrop = (child, newId, fixed, onNewChildMounted) => {\r\n        if (this.callOverride(\"onChildDrop\", child, newId, fixed, onNewChildMounted))\r\n            return;\r\n\r\n        let childRect = child.getSize(false, true);\r\n        let thisRect = this.getSize(false, true);\r\n\r\n        let calcResult, gridItemStyle, coordinates, newProps;\r\n\r\n        if (!newId)\r\n            calcResult = this.calculateChildGridItem(child,\r\n                childRect.left - thisRect.left, childRect.top - thisRect.top, this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        else {\r\n            // this.prepareRects(true);\r\n            this.prepareRects();\r\n            calcResult = this.calculateChildGridItem(child,\r\n                thisRect.width / 2 - childRect.width / 2,\r\n                thisRect.height / 2 - childRect.height / 2,\r\n                this,\r\n                childRect.width,\r\n                childRect.height,\r\n                thisRect\r\n            );\r\n        }\r\n\r\n        gridItemStyle = calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n        if (!newId) {\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                child.setProps(\"width\", childRect.width, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                child.setProps(\"width\", \"auto\", undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                child.setProps(\"height\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                child.setProps(\"minHeight\", childRect.height, coordinates, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        } else {\r\n            newProps = {...child.props};\r\n            newProps.griddata = cloneObject(newProps.griddata);\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, newProps.griddata, undefined,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            this.setTempData(\"selected\", true, newProps.griddata);\r\n            if (gridItemStyle.alignSelf !== \"stretch\") {\r\n                this.setProps(\"width\", childRect.width, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            } else {\r\n                this.setProps(\"width\", \"auto\", undefined, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n            if (child.getFromData(\"style\").height === \"auto\")\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            else {\r\n                this.setProps(\"height\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n                this.setProps(\"minHeight\", childRect.height, coordinates, newProps.griddata, undefined,\r\n                    this.props.breakpointmanager.getHighestBpName());\r\n            }\r\n        }\r\n\r\n        child.clearFromAllBp(\"style\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n        child.clearFromAllBp(\"gridItemStyle\", undefined, this.props.breakpointmanager.getHighestBpName());\r\n\r\n        this.addChild(child, newId, newProps, () => {\r\n            let newChild = this.allChildRefs[newId? newProps.id: child.props.id].current;\r\n            newChild.setGridItemStyle(gridItemStyle,\r\n                this.props.breakpointmanager.getHighestBpName());\r\n            if (!newId) {\r\n                newChild.toggleHelpLines(this);\r\n            }\r\n\r\n        }, (agl) => {\r\n            // setTimeout(() => {\r\n            //     let size = agl.getSize(false);\r\n            //     agl.updateGridLines(\r\n            //         size.top,\r\n            //         size.left,\r\n            //         size.top + size.clientHeight,\r\n            //         size.left + size.clientWidth,\r\n            //         \"A\"\r\n            //     );\r\n            // }, 0);\r\n\r\n            if (onNewChildMounted)\r\n                onNewChildMounted(agl);\r\n        }, fixed, undefined);\r\n    };\r\n\r\n    onChildLeave = (child, callback) => {\r\n        if (this.hasOverride(\"onChildLeave\"))\r\n            return this.callOverride(\"onChildLeave\", child);\r\n\r\n        this.removeChildElement(child, callback);\r\n        child.removeIdAndChildrenId();\r\n    };\r\n\r\n    removeIdAndChildrenId = () => {\r\n        this.props.idMan.removeId(this.props.id);\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.removeIdAndChildrenId();\r\n            }\r\n        });\r\n    };\r\n\r\n    nonePointerEventForChildren = (parentDragging) => {\r\n        Object.values(this.allChildRefs).forEach(childRef => {\r\n            if (childRef && childRef.current) {\r\n                childRef.current.onParentDragging(parentDragging);\r\n            }\r\n        });\r\n    };\r\n\r\n    onParentDragging = (parentDragging) => {\r\n        this.nonePointerEventForChildren(parentDragging);\r\n        if (!parentDragging) {\r\n            this.setRuntimeStyle();\r\n            return;\r\n        }\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.pointerEvents = \"none\";\r\n        this.setRuntimeStyle(runtimeStyle);\r\n    };\r\n\r\n    onDragStart = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDragStart\", e, group, callGroup))\r\n            return;\r\n\r\n        if (this.getFromTempData(\"dontMove\") || this.resizing || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        if (!group)\r\n            this.props.dragdrop.setDragging(this);\r\n\r\n        this.nonePointerEventForChildren(true);\r\n\r\n        /*if (!group && this.props.dragdrop.getMouseOverForNonDragging() &&\r\n            !this.props.dragdrop.getMouseOverForNonDragging().getParentsId().includes(this.props.id))\r\n        {\r\n            this.setMouseOver(this.props.dragdrop.getMouseOverForNonDragging(), {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            }, (draggingItem, mouseOver) => {\r\n                // on new parent state changed\r\n                draggingItem.toggleHelpLines(mouseOver);\r\n            });\r\n        }*/\r\n\r\n        let thisRect = this.getSize(false);\r\n        this.dragData = {\r\n            firstPos: {\r\n                top: thisRect.top,\r\n                left: thisRect.left\r\n            },\r\n            x: thisRect.left,\r\n            y: thisRect.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        // runtimeStyle.width =\r\n        //     getRotatedRectangle(thisRect.width, thisRect.height, this.getFromData(\"rotateDegree\")).x2;\r\n        // runtimeStyle.height =\r\n        //     getRotatedRectangle(thisRect.width, thisRect.height, this.getFromData(\"rotateDegree\")).y2;\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        runtimeStyle.top = thisRect.top;\r\n        runtimeStyle.left = thisRect.left;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n        this.draggingStart = true;\r\n        // this.setState({dragging: true, draggingStart: true});\r\n        this.setDraggingState(true, true, undefined, runtimeStyle);\r\n\r\n        this.props.select.updateMenu();\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStart(e, this);\r\n    };\r\n\r\n    setMouseOver = (item, positionData, callback) => {\r\n        if (this.hasOverride(\"setMouseOver\"))\r\n            return this.callOverride(\"setMouseOver\", item, positionData, callback);\r\n\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    onDrag = (e, group, callGroup) => {\r\n        if (this.callOverride(\"onDrag\", e, group, callGroup))\r\n            return;\r\n\r\n        if (!this.props.parent.children[this.props.id]) {\r\n            return;\r\n        }\r\n        if (this.resizing || !this.state.draggingStart) {\r\n            if (this.props.dragdrop.getDragging()) {\r\n                this.props.dragdrop.setDragging();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.dragData.x += (e.clientX - this.dragData.lastMouseX);\r\n        this.dragData.y += (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.top = this.dragData.y;\r\n        runtimeStyle.left = this.dragData.x;\r\n\r\n        if (!isFixed(this) && !group)\r\n            this.checkSnapOnDrag(runtimeStyle);\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.props.select.updateResizePanes(this, runtimeStyle);\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                runtimeStyle.top,\r\n                runtimeStyle.left,\r\n                window.innerHeight - runtimeStyle.top - runtimeStyle.height,\r\n                window.innerWidth - runtimeStyle.left - runtimeStyle.width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                cloneObject(runtimeStyle), this.state.dragging);\r\n\r\n        this.props.select.updateMiniMenu();\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDrag(e, this);\r\n    };\r\n\r\n    updateGridLines = (top, left, bottom, right, gridType) => {\r\n        let grid = this.getFromData(\"grid\");\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                top,\r\n                left,\r\n                bottom,\r\n                right,\r\n            }\r\n        )\r\n    };\r\n\r\n    onDragStop = (e, group, callGroup) => {\r\n        if (this.hasOverride(\"onDragStop\"))\r\n            return this.callOverride(\"onDragStop\", e, group, callGroup);\r\n\r\n        if (this.resizing || !this.state.draggingStart || !this.props.parent.children[this.props.id])\r\n            return;\r\n\r\n        if (group && callGroup)\r\n            this.state.groupDragStop(e, this);\r\n\r\n        if (group)\r\n            // this.props.parent.prepareRects(true);\r\n            this.props.parent.prepareRects();\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n\r\n        this.props.snap.drawSnap();\r\n        this.getSize(true, true);\r\n        if (group || !this.props.dragdrop.setDraggingStop()){\r\n            let parentRect = this.props.parent.getSize(false);\r\n            this.setPosition(\r\n                group,\r\n                left - parentRect.left,\r\n                top - parentRect.top,\r\n                this.dragData.firstPos.left - parentRect.left,\r\n                this.dragData.firstPos.top - parentRect.top, width, height, parentRect);\r\n            return;\r\n        } else if (!group) {\r\n            this.dropped = true;\r\n        }\r\n\r\n        // this.setState({dragging: false, draggingStart: false});\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                top, left,\r\n                window.innerHeight - top - height,\r\n                window.innerWidth - left - width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateMiniMenu();\r\n    };\r\n\r\n    setPosition = (group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                   width, height, parentRect, fromUndoRedo) => {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let parentId = this.props.parent.props.id;\r\n            let redoData = [group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect];\r\n            let undoData = [group, firstRelativeX, firstRelativeY, undefined, undefined,\r\n                width, height, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(parentId));\r\n                idMan.getItem(itemId).setPosition(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setPosition\"))\r\n            return this.callOverride(\"setPosition\",\r\n                group, relativeX, relativeY, firstRelativeX, firstRelativeY,\r\n                width, height, parentRect, fromUndoRedo);\r\n\r\n        let {gridItemStyle, coordinates} = this.calculateGridItem(relativeX, relativeY, this.props.parent,\r\n            width, height, parentRect);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\"){\r\n            this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        } else {\r\n            this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n        }\r\n        if (this.getCompositeFromData(\"style\").height === \"auto\")\r\n            this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        else {\r\n            this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n            this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n        }\r\n\r\n        this.setGridItemStyle(gridItemStyle);\r\n\r\n        this.nonePointerEventForChildren(false);\r\n        this.setRuntimeStyle();\r\n        // this.setState({dragging: false, draggingStart: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                {top, left, width, height}, this.state.dragging);\r\n\r\n        this.dropped = false;\r\n\r\n        // this.props.select.updateSize();\r\n        this.props.select.updateResizePanes(this, {top, left, width, height});\r\n    };\r\n\r\n    setDraggingState = (dragging, draggingStart, callback, rect) => {\r\n        this.setState({dragging, draggingStart}, callback);\r\n    };\r\n\r\n    checkSnapOnDrag = (runtimeStyle) => {\r\n        if (this.callOverride(\"checkSnapOnDrag\", runtimeStyle))\r\n            return;\r\n\r\n        let snapDelta1 = this.getSnapDelta(\r\n            runtimeStyle.top, runtimeStyle.left);\r\n        let snapDelta2 = this.getSnapDelta(\r\n            runtimeStyle.top + runtimeStyle.height/2, runtimeStyle.left + runtimeStyle.width/2);\r\n        let snapDelta3 = this.getSnapDelta(\r\n            runtimeStyle.top + runtimeStyle.height, runtimeStyle.left + runtimeStyle.width);\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2.snapV? snapDelta2.deltaX:\r\n                snapDelta1.snapV? snapDelta1.deltaX:\r\n                    snapDelta3.snapV? snapDelta3.deltaX: 0,\r\n            deltaY: snapDelta2.snapH? snapDelta2.deltaY:\r\n                snapDelta1.snapH? snapDelta1.deltaY:\r\n                    snapDelta3.snapH? snapDelta3.deltaY: 0,\r\n            snapH: (snapDelta2.snapH || snapDelta1.snapH) || snapDelta3.snapH,\r\n            snapV: (snapDelta2.snapV || snapDelta1.snapV) || snapDelta3.snapV\r\n        };\r\n\r\n        runtimeStyle.left += snapDelta.deltaX;\r\n        runtimeStyle.top += snapDelta.deltaY;\r\n\r\n        let pointOfSnapH = {\r\n            p1: runtimeStyle.left,\r\n            p2: runtimeStyle.left + runtimeStyle.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: runtimeStyle.top,\r\n            p2: runtimeStyle.top + runtimeStyle.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    getSnapDelta = (top, left) => {\r\n        let parentGridLines;\r\n        if (this.props.parent) {\r\n            if (this.resizing) {\r\n                parentGridLines = this.props.parent.getGridLineSnaps();\r\n            } else {\r\n                // dragging\r\n                parentGridLines = this.props.dragdrop.mouseOver &&\r\n                    this.props.dragdrop.mouseOver.getGridLineSnaps();\r\n            }\r\n        }\r\n\r\n        let {snapH, snapV} =\r\n            this.props.snap.checkSnap(top, left, this.props.id, parentGridLines);\r\n\r\n        let deltaX = 0;\r\n        let deltaY = 0;\r\n        if (snapH) {\r\n            deltaY = snapH.value - top;\r\n        }\r\n        if (snapV) {\r\n            deltaX = snapV.value - left;\r\n        }\r\n\r\n        return {\r\n            deltaX, deltaY, snapH, snapV\r\n        }\r\n    };\r\n\r\n    setDocks = (top, left, bottom, right, auto, breakpointName, dontCalculate) => {\r\n        this.setDataInBreakpoint(\"docks\", {top, left, bottom, right}, undefined, breakpointName);\r\n        this.setTempData(\"autoDock\", auto);\r\n\r\n        if (!this.props.parent || dontCalculate)\r\n            return;\r\n\r\n        this.props.parent.prepareRects();\r\n        let thisRect = this.getSize(false);\r\n        let parentRect = this.props.parent.getSize(false);\r\n        let {gridItemStyle} =\r\n            this.calculateGridItem(\r\n                thisRect.left - parentRect.left,\r\n                thisRect.top - parentRect.top,\r\n                this.props.parent,\r\n                thisRect.width,\r\n                thisRect.height,\r\n                parentRect\r\n            );\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n    };\r\n\r\n    getDocks = () => {\r\n        return this.getFromData(\"docks\");\r\n    };\r\n\r\n    getBaseDocks = () => {\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return {\r\n            top: gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\",\r\n            bottom: gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\",\r\n            left: gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\",\r\n            right: gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\",\r\n        }\r\n    };\r\n\r\n    calculateGridItem = (relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateGridItem\", relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = this.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let {gridArea, coordinates} = this.calculateGridArea(\r\n            parentRect.left + relativeX,\r\n            parentRect.top + relativeY,\r\n            width,\r\n            height,\r\n            parent,\r\n            parentRect\r\n        );\r\n\r\n        if (isFixed(this)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.clientHeight,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.clientWidth\r\n            }\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        this.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let gridItemStyle = {...(this.state.gridItemStyle || this.props.defaultGridItemStyle)};\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(this);\r\n\r\n        let autoDock = this.getFromTempData(\"autoDock\");\r\n        let docks = this.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX >= 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / parentRect.width * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / parentRect.width * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                parentRect.height,\r\n                this.getUnit(gridItemStyle.marginTop));\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                `${(relativeY - coordinates.cy1).toString()}`,\r\n                    parentRect.height,\r\n                    this.getUnit(gridItemStyle.marginTop));\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    parentRect.width,\r\n                    this.getUnit(gridItemStyle.marginLeft));\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    parentRect.height,\r\n                    this.getUnit(gridItemStyle.marginBottom));\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    parentRect.width,\r\n                    this.getUnit(gridItemStyle.marginRight));\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        /*if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // this is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${this.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${this.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n            `${(relativeY - coordinates.cy1).toFixed(0).toString()}${this.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    getPxOrPcOrValue = (value, parentValue, unit) => {\r\n        if (unit === \"px\") {\r\n            return `${value}px`;\r\n        } else if (unit === \"%\") {\r\n            return `${parseFloat(value) / parentValue * 100}%`;\r\n        } else {\r\n            return value\r\n        }\r\n    };\r\n\r\n    calculateChildGridItem = (child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock) => {\r\n        if (this.hasOverride(\"calculateChildGridItem\"))\r\n            return this.callOverride(\r\n                \"calculateChildGridItem\",child, relativeX, relativeY, parent, width, height, parentRect, fromState, dontAutoDock);\r\n\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let {gridArea, coordinates} = child.calculateGridArea(\r\n            parentRect.left + relativeX,\r\n            parentRect.top + relativeY,\r\n            width,\r\n            height,\r\n            parent,\r\n            parentRect\r\n        );\r\n\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.clientHeight,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.clientWidth\r\n            }\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let gridItemStyle = {...(child.state.gridItemStyle || child.props.defaultGridItemStyle)};\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n        let centerY = (relativeY  - coordinates.cy1) + height / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(this);\r\n\r\n        let autoDock = this.getFromTempData(\"autoDock\");\r\n        let docks = this.getDocks() || {top: true};\r\n\r\n        if (autoDock && !dontAutoDock) {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // Center X\r\n                delete docks.left;\r\n                delete docks.right;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                delete docks.left;\r\n                docks.right = true;\r\n            } else {\r\n                docks.left = true;\r\n                delete docks.right;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                delete docks.top;\r\n                docks.bottom = true;\r\n            } else {\r\n                docks.top = true;\r\n                delete docks.bottom;\r\n            }\r\n        }\r\n\r\n        gridItemStyle.alignSelf = \"center\";\r\n        gridItemStyle.justifySelf = \"center\";\r\n\r\n        let centerDiffX = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n        let centerDiffY = (centerY - (coordinates.cy2 - coordinates.cy1) / 2);\r\n        if (centerDiffX > 0) {\r\n            gridItemStyle.marginRight = `${(-centerDiffX * 2 / parentRect.width * 100).toString()}%`;\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        } else {\r\n            gridItemStyle.marginRight = \"0%\";\r\n            gridItemStyle.marginLeft = `${(centerDiffX * 2 / parentRect.width * 100).toString()}%`;\r\n        }\r\n        gridItemStyle.marginTop =\r\n            this.getPxOrPcOrValue(\r\n                `${(centerDiffY * 2).toString()}`,\r\n                parentRect.height,\r\n                this.getUnit(gridItemStyle.marginTop));\r\n        gridItemStyle.marginBottom = \"0px\";\r\n\r\n        if (docks.top) {\r\n            gridItemStyle.alignSelf = \"start\";\r\n            gridItemStyle.marginTop =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeY - coordinates.cy1).toString()}`,\r\n                    parentRect.height,\r\n                    this.getUnit(gridItemStyle.marginTop));\r\n        } else if (docks.bottom) {\r\n            gridItemStyle.marginTop = \"0px\";\r\n        }\r\n        if (docks.left) {\r\n            gridItemStyle.justifySelf = \"start\";\r\n            gridItemStyle.marginLeft =\r\n                this.getPxOrPcOrValue(\r\n                    `${(relativeX - coordinates.cx1).toString()}`,\r\n                    parentRect.width,\r\n                    this.getUnit(gridItemStyle.marginLeft));\r\n        } else if (docks.right) {\r\n            gridItemStyle.marginLeft = \"0%\";\r\n        }\r\n        if (docks.bottom) {\r\n            gridItemStyle.alignSelf = docks.top ? \"stretch\": \"end\";\r\n            gridItemStyle.marginBottom =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cy2 - relativeY - height).toString()}`,\r\n                    parentRect.height,\r\n                    this.getUnit(gridItemStyle.marginBottom));\r\n        } else if (docks.top) {\r\n            gridItemStyle.marginBottom = \"0px\";\r\n        }\r\n        if (docks.right) {\r\n            gridItemStyle.justifySelf = docks.left? \"stretch\": \"end\";\r\n            gridItemStyle.marginRight =\r\n                this.getPxOrPcOrValue(\r\n                    `${(coordinates.cx2 - (relativeX + width)).toString()}`,\r\n                    parentRect.width,\r\n                    this.getUnit(gridItemStyle.marginRight));\r\n        } else if (docks.left) {\r\n            gridItemStyle.marginRight = \"0%\";\r\n        }\r\n\r\n        /*\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.justifySelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.justifySelf = \"end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.justifySelf = \"start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n                gridItemStyle.alignSelf = \"end\";\r\n                gridItemStyle.marginBottom =\r\n                    `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"start\";\r\n                gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n                gridItemStyle.marginTop =\r\n                    `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            gridItemStyle.marginBottom =\r\n                `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            gridItemStyle.marginTop =\r\n                `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }*/\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    coordinateToRelative = (coordinates, parentRect) => {\r\n        coordinates.cx1 -= parentRect.left;\r\n        coordinates.cx2 -= parentRect.left;\r\n        coordinates.cy1 -= parentRect.top;\r\n        coordinates.cy2 -= parentRect.top;\r\n    };\r\n\r\n    coordinateToAbsolute = (coordinates, parentRect) => {\r\n        coordinates.cx1 += parentRect.left;\r\n        coordinates.cx2 += parentRect.left;\r\n        coordinates.cy1 += parentRect.top;\r\n        coordinates.cy2 += parentRect.top;\r\n    };\r\n\r\n    getUnit = (value) => {\r\n        if (!value)\r\n            return \"px\";\r\n\r\n        if (value.includes(\"%\")) {\r\n            return \"%\";\r\n        } else {\r\n            return \"px\";\r\n        }\r\n    };\r\n\r\n    getTopLeft = (force) => {\r\n        let size = this.getSize(false, force);\r\n        return {\r\n            top: size.top,\r\n            left: size.left\r\n        }\r\n    };\r\n\r\n    pageResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n\r\n        this.onSelect(true);\r\n\r\n        this.resizing = true;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        // runtimeStyle.position = \"fixed\";\r\n        // runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        // runtimeStyle.marginBottom = \"auto\";\r\n        // runtimeStyle.marginTop = \"auto\";\r\n        // runtimeStyle.marginLeft = \"auto\";\r\n        // runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = this.getSize().x;\r\n        runtimeStyle.height = this.getSize().y;\r\n        // runtimeStyle.minWidth = \"auto\";\r\n        // runtimeStyle.minHeight = \"auto\";\r\n        // runtimeStyle.opacity = 0.7;\r\n        // runtimeStyle.zIndex = 999999;\r\n\r\n        // runtimeStyle.top = this.getSize().top;\r\n        // runtimeStyle.left = this.getSize().left;\r\n        // let right = window.innerWidth - runtimeStyle.left - runtimeStyle.width;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstLeft: this.getSize().left,\r\n            top: this.getSize().top,\r\n            left: this.getSize().left\r\n        };\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n        // this.setState({dragging: true});\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResizeStart\", e, dir, delta, group))\r\n            return;\r\n\r\n        if (this.resizing)\r\n            return;\r\n\r\n        if (this.props.parent)\r\n            this.props.parent.prepareRects();\r\n\r\n        this.resizing = true;\r\n\r\n        let thisRect = this.getSize(false);\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        runtimeStyle.position = \"fixed\";\r\n        runtimeStyle.gridArea = \"auto/auto/auto/auto\";\r\n        runtimeStyle.marginBottom = \"auto\";\r\n        runtimeStyle.marginTop = \"auto\";\r\n        runtimeStyle.marginLeft = \"auto\";\r\n        runtimeStyle.marginRight = \"auto\";\r\n        runtimeStyle.width = thisRect.width;\r\n        runtimeStyle.height = thisRect.height;\r\n        runtimeStyle.minWidth = \"auto\";\r\n        runtimeStyle.minHeight = \"auto\";\r\n        runtimeStyle.opacity = 0.7;\r\n        runtimeStyle.zIndex = 999999;\r\n        runtimeStyle.pointerEvents = \"none\";\r\n\r\n        runtimeStyle.top = thisRect.top;\r\n        runtimeStyle.left = thisRect.left;\r\n\r\n        this.resizeData = {\r\n            firstX: runtimeStyle.width,\r\n            firstY: runtimeStyle.height,\r\n            firstTop: runtimeStyle.top,\r\n            firstLeft: runtimeStyle.left,\r\n            lastWidth: runtimeStyle.width,\r\n            lastHeight: runtimeStyle.height\r\n        };\r\n\r\n        // this.setState({dragging: true});\r\n        this.setDraggingState(true, false, undefined, runtimeStyle);\r\n\r\n        // delete runtimeStyle.width;\r\n        // delete runtimeStyle.height;\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    pageResize = (e, dir, delta) => {\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n\r\n        let deltaX = delta.x;\r\n        let minWidth = this.props.breakpointmanager.getMinWidth();\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= (-deltaX* 2 + minWidth))\r\n                deltaX = -(this.resizeData.firstX - minWidth) / 2;\r\n\r\n            runtimeStyle.width = this.resizeData.firstX + deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft - deltaX;\r\n            if (this.resizeData.firstLeft - deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= (deltaX * 2 + minWidth))\r\n                deltaX = (this.resizeData.firstX - minWidth) / 2;\r\n            runtimeStyle.width = this.resizeData.firstX - deltaX * 2;\r\n            this.resizeData.left = this.resizeData.firstLeft + deltaX;\r\n            if (this.resizeData.firstLeft + deltaX < 50)\r\n                this.resizeData.left = 50;\r\n        }\r\n\r\n        this.setRuntimeStyle(runtimeStyle);\r\n\r\n        this.updateGridLines(\r\n            this.resizeData.top,\r\n            this.resizeData.left,\r\n            window.innerHeight - this.resizeData.top - runtimeStyle.height,\r\n            window.innerWidth - this.resizeData.left - runtimeStyle.width,\r\n            \"A\"\r\n        );\r\n\r\n        // this.invalidateSize();\r\n        this.backContainerRef.current.updateAdjustments();\r\n\r\n        if (this.props.onPageResize) {\r\n            this.props.onPageResize(runtimeStyle.width, this);\r\n        }\r\n    };\r\n\r\n    onResize = (e, dir, delta, group) => {\r\n        if (this.callOverride(\"onResize\", e, dir, delta, group))\r\n            return;\r\n\r\n        let runtimeStyle = {...this.state.runtimeStyle};\r\n        let previusWidth = this.resizeData.lastWidth;\r\n        let previusHeight = this.resizeData.lastHeight;\r\n\r\n        let deltaY = delta.y;\r\n        let deltaX = delta.x;\r\n        if (dir.includes('n')) {\r\n            if (this.resizeData.firstY <= deltaY)\r\n                deltaY = this.resizeData.firstY;\r\n            this.resizeData.lastHeight = this.resizeData.firstY - deltaY;\r\n            runtimeStyle.top = this.resizeData.firstTop + deltaY;\r\n        }\r\n        if (dir.includes('s')) {\r\n            if (this.resizeData.firstY <= -deltaY)\r\n                deltaY = -this.resizeData.firstY;\r\n            this.resizeData.lastHeight = this.resizeData.firstY + deltaY;\r\n        }\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= -deltaX)\r\n                deltaX = -this.resizeData.firstX;\r\n            this.resizeData.lastWidth = this.resizeData.firstX + deltaX;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= deltaX)\r\n                deltaX = this.resizeData.firstX;\r\n            this.resizeData.lastWidth = this.resizeData.firstX - deltaX;\r\n            runtimeStyle.left = this.resizeData.firstLeft + deltaX;\r\n        }\r\n\r\n        let rect = {\r\n            top: runtimeStyle.top,\r\n            left: runtimeStyle.left,\r\n            width: this.resizeData.lastWidth,\r\n            height: this.resizeData.lastHeight\r\n        };\r\n\r\n        if (!group)\r\n            this.checkSnapOnResize(rect, dir, this.resizeData);\r\n\r\n        this.props.select.updateResizePanes(this, rect);\r\n\r\n        if (!group)\r\n            this.setResizeHelpData({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                width: (dir.includes('w') || dir.includes('e')) && rect.width,\r\n                height: (dir.includes('n') || dir.includes('s')) && rect.height,\r\n            });\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                rect.top,\r\n                rect.left,\r\n                window.innerHeight - rect.top - rect.height,\r\n                window.innerWidth - rect.left - rect.width,\r\n                \"A\"\r\n            );\r\n\r\n        this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n            rect, this.state.dragging);\r\n\r\n        // runtimeStyle.width = this.resizeData.firstX;\r\n        // runtimeStyle.height = this.resizeData.firstY;\r\n\r\n        let animationData = ResizeAnimation.getAnimationCSS(\r\n            previusWidth, this.resizeData.lastWidth,\r\n            previusHeight, this.resizeData.lastHeight\r\n        );\r\n\r\n        // runtimeStyle.width = this.resizeData.lastWidth;\r\n        // runtimeStyle.height = this.resizeData.lastHeight;\r\n\r\n        this.props.select.updateMiniMenu();\r\n\r\n        this.resizeData.onResizeData = {\r\n            runtimeStyle: runtimeStyle,\r\n            animationCss: animationData.css\r\n        };\r\n    };\r\n\r\n    onResizeCalculate = () => {\r\n        if (this.callOverride(\"onResizeCalculate\"))\r\n            return;\r\n\r\n        if (!this.resizing)\r\n            return;\r\n\r\n        if (!this.resizeData.onResizeData) {\r\n            window.requestAnimationFrame(this.onResizeCalculate);\r\n            return;\r\n        }\r\n\r\n        let {runtimeStyle, animationCss} = this.resizeData.onResizeData;\r\n        runtimeStyle.width = this.resizeData.lastWidth;\r\n        runtimeStyle.height = this.resizeData.lastHeight;\r\n        this.setRuntimeStyle(runtimeStyle/*, animationCss*/);\r\n\r\n        window.requestAnimationFrame(this.onResizeCalculate);\r\n    };\r\n\r\n    setResizeHelpData = (resizeHelpData) => {\r\n        this.setState({resizeHelpData})\r\n    };\r\n\r\n    pageResizeStop = (e, dir, delta) => {\r\n        let {width, height} = this.state.runtimeStyle;\r\n        this.setPageSize(this.resizeData.top, this.resizeData.left, width, height);\r\n    };\r\n\r\n    setPageSize = (top, left, width, height) => {\r\n        this.setProps(\"width\", width, undefined, undefined,\r\n            this.props.breakpointmanager.getHighestBpName());\r\n\r\n       /* if (this.resizeData.left === 50) {\r\n            let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n            gridItemStyle.marginLeft = \"50px\";\r\n            this.setGridItemStyle(gridItemStyle, this.props.breakpointmanager.getHighestBpName());\r\n        } else {\r\n            let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n            gridItemStyle.marginLeft = 0;\r\n            this.setGridItemStyle(gridItemStyle, this.props.breakpointmanager.getHighestBpName());\r\n        }*/\r\n\r\n        this.setRuntimeStyle();\r\n        this.invalidateSize();\r\n        // this.setState({dragging: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.resizing = false;\r\n\r\n        this.updateGridLines(\r\n            top, left,\r\n            window.innerHeight - top - height,\r\n            window.innerWidth - left - width,\r\n            \"A\"\r\n        );\r\n\r\n        this.props.select.onScrollItem(this);\r\n        // this.prepareRects(true);\r\n        this.prepareRects();\r\n\r\n        if (this.props.onPageResizeStop)\r\n            this.props.onPageResizeStop(width, this);\r\n\r\n        this.resizeData = undefined;\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta, group) => {\r\n        if (this.hasOverride(\"onResizeStop\"))\r\n            return this.callOverride(\"onResizeStop\", e, dir, delta, group);\r\n        this.resizing = false;\r\n\r\n        if (this.props.onItemPreResizeStop) {\r\n            this.props.onItemPreResizeStop(this, e, dir, delta, this.state.runtimeStyle);\r\n        }\r\n        this.getSize(true, true);\r\n\r\n        if (group)\r\n            this.props.parent.prepareRects();\r\n        // this.props.parent.prepareRects(true);\r\n\r\n        let parentRect = this.props.parent.getSize(false);\r\n\r\n        let {top, left, width, height} = this.state.runtimeStyle;\r\n        width = this.resizeData.lastWidth;\r\n        height = this.resizeData.lastHeight;\r\n        this.setSize(\r\n            dir, delta, group,\r\n            left - parentRect.left,\r\n            top - parentRect.top, width, height,\r\n            this.resizeData.firstLeft - parentRect.left,\r\n            this.resizeData.firstTop - parentRect.top,\r\n            this.resizeData.firstX,\r\n            this.resizeData.firstY, parentRect\r\n        );\r\n        this.props.select.updateMiniMenu();\r\n    };\r\n\r\n    setSize = (dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n               firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo) =>\r\n    {\r\n        if (!fromUndoRedo) {\r\n            let itemId = this.props.id;\r\n            let redoData = [dir, delta, group, relativeX, relativeY, width, height, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect];\r\n            let undoData = [dir, delta, group, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, undefined,\r\n                undefined, undefined, undefined, parentRect];\r\n            this.props.undoredo.add((idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...redoData, true);\r\n            }, (idMan) => {\r\n                idMan.getItem(itemId).onSelect(true);\r\n                idMan.getItem(itemId).props.dragdrop.setMouseOver(idMan.getItem(itemId).props.parent);\r\n                idMan.getItem(itemId).setSize(...undoData, true);\r\n            });\r\n        }\r\n\r\n        if (this.hasOverride(\"setSize\"))\r\n            return this.callOverride(\"setSize\",\r\n                dir, delta, group, relativeX, relativeY, height, width, firstRelativeX,\r\n                firstRelativeY, firstWidth, firstHeight, parentRect, fromUndoRedo);\r\n\r\n        let gridItemStyle, coordinates;\r\n        let calcResult = this.calculateGridItem(relativeX, relativeY, this.props.parent, width, height);\r\n\r\n        gridItemStyle = this.props.autoConstraintsOff?  this.getCompositeFromData(\"gridItemStyle\"):\r\n            calcResult.gridItemStyle;\r\n        coordinates = calcResult.coordinates;\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\" && this.getCompositeFromData(\"style\").width !== \"auto\")\r\n            this.setProps(\"width\", width, coordinates, undefined, undefined, true);\r\n        else\r\n            this.setProps(\"width\", \"auto\", undefined, undefined, undefined, true);\r\n        if (this.getCompositeFromData(\"style\").height === \"auto\")\r\n            if (this.getCompositeFromData(\"style\").minHeight !== \"auto\")\r\n                this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n            else\r\n                this.setProps(\"minHeight\", \"auto\", coordinates, undefined, undefined, true);\r\n        else {\r\n            this.setProps(\"height\", height, coordinates, undefined, undefined, true);\r\n            if (this.getCompositeFromData(\"style\").minHeight !== \"auto\")\r\n                this.setProps(\"minHeight\", height, coordinates, undefined, undefined, true);\r\n            else\r\n                this.setProps(\"minHeight\", \"auto\", coordinates, undefined, undefined, true);\r\n        }\r\n\r\n        this.setGridItemStyle(gridItemStyle);\r\n        this.setRuntimeStyle();\r\n        this.setResizeHelpData();\r\n        // this.invalidateSize();\r\n        // this.setState({dragging: false}, () => {\r\n        //     this.addToSnap();\r\n        // });\r\n        let top = relativeY + parentRect.top;\r\n        let left = relativeX + parentRect.left;\r\n        this.setDraggingState(false, false, () => {\r\n            this.addToSnap();\r\n        }, {top, left, width, height});\r\n        this.props.snap.drawSnap();\r\n\r\n        if (!group)\r\n            this.updateGridLines(\r\n                this.getSize(false).top, this.getSize(false).left,\r\n                window.innerHeight - this.getSize(false).top - height,\r\n                window.innerWidth - this.getSize(false).left - width,\r\n                \"A\"\r\n            );\r\n\r\n        if (!group)\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                this.getSize(false), this.state.dragging);\r\n\r\n        setTimeout(() => {\r\n            if (!this.mounted)\r\n                return;\r\n\r\n            // for fixing helpline\r\n            this.props.select.onScrollItem();\r\n        }, 100);\r\n\r\n        this.resizeData = undefined;\r\n    };\r\n\r\n    checkSnapOnResize = (runtimeStyle, dir, resizeData) => {\r\n        if (this.callOverride(\"checkSnapOnResize\", runtimeStyle, dir, resizeData))\r\n            return;\r\n\r\n        let snapDelta1, snapDelta2;\r\n        if (dir.includes(\"n\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"s\")) {\r\n            snapDelta1 = this.getSnapDelta(\r\n                runtimeStyle.top + runtimeStyle.height, runtimeStyle.left);\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left);\r\n        } else if (dir.includes(\"e\")) {\r\n            snapDelta2 = this.getSnapDelta(\r\n                runtimeStyle.top, runtimeStyle.left + runtimeStyle.width);\r\n        }\r\n\r\n        let snapDelta = {\r\n            deltaX: snapDelta2? snapDelta2.deltaX: 0,\r\n            deltaY: snapDelta1? snapDelta1.deltaY: 0,\r\n            snapH: snapDelta1 && snapDelta1.snapH,\r\n            snapV: snapDelta2 && snapDelta2.snapV\r\n        };\r\n\r\n        if (dir.includes(\"n\")) {\r\n            runtimeStyle.height -= snapDelta.deltaY;\r\n            runtimeStyle.top += snapDelta.deltaY;\r\n        } else if (dir.includes(\"s\")) {\r\n            runtimeStyle.height += snapDelta.deltaY;\r\n        }\r\n        if (dir.includes(\"w\")) {\r\n            runtimeStyle.width -= snapDelta.deltaX;\r\n            runtimeStyle.left += snapDelta.deltaX;\r\n        } else if (dir.includes(\"e\")) {\r\n            runtimeStyle.width += snapDelta.deltaX;\r\n        }\r\n\r\n        let pointOfSnapH = {\r\n            p1: runtimeStyle.left,\r\n            p2: runtimeStyle.left + runtimeStyle.width\r\n        };\r\n        let pointOfSnapV = {\r\n            p1: runtimeStyle.top,\r\n            p2: runtimeStyle.top + runtimeStyle.height\r\n        };\r\n\r\n        this.props.snap.drawSnap(snapDelta.snapH, snapDelta.snapV, pointOfSnapH, pointOfSnapV);\r\n    };\r\n\r\n    setProps = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setProps\"))\r\n            return this.callOverride(\"setProps\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        if (prop === \"width\" || prop === \"height\" ||\r\n            prop === \"minWidth\" || prop === \"minHeight\" ||\r\n            prop === \"maxWidth\" || prop === \"maxHeight\")\r\n        {\r\n            this.setNewSize(prop, value, gridCoordinates, data, breakpointName, dontAddToSnap);\r\n        } else {\r\n            this.setDataInBreakpoint(prop, value, data, breakpointName);\r\n        }\r\n    };\r\n\r\n    setDataInBreakpoint = (prop, value, data, breakpointName) => {\r\n        this.props.breakpointmanager.setData(data || this.props.griddata, prop, value, breakpointName);\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setTempData = (prop, value, data) => {\r\n        let dataToWrite = data || this.props.griddata;\r\n        dataToWrite[prop] = value;\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getFromTempData = (prop, data) => {\r\n        let dataToRead = data || this.props.griddata;\r\n        return dataToRead[prop];\r\n    };\r\n\r\n    hasDataInBreakPoint = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .hasDataInBreakPoint(data || this.props.griddata, prop, breakpointName);\r\n    };\r\n\r\n    getFromData = (prop, data, breakpointName) => {\r\n        return this.props.breakpointmanager\r\n            .getFromData(data || this.props.griddata, prop, breakpointName)\r\n    };\r\n\r\n    getCompositeFromData = (prop, data) => {\r\n        return this.props.breakpointmanager\r\n            .getCompositeFromData(data || this.props.griddata, prop, undefined)\r\n    };\r\n\r\n    setNewSize = (prop, value, gridCoordinates, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setNewSize\"))\r\n            return this.callOverride(\"setNewSize\", prop, value, gridCoordinates, data, breakpointName);\r\n\r\n        let oldStyle = this.getCompositeFromData(\"style\", data, breakpointName);\r\n        let oldValue = oldStyle && oldStyle[prop];\r\n\r\n        if (!oldValue || !this.isPercent(oldValue) || value === \"auto\" || isNaN(value)) {\r\n            if (!isNaN(value)) {\r\n                value+=\"px\";\r\n            }\r\n            this.setStyleParam(prop, value, data, breakpointName, dontAddToSnap);\r\n            return;\r\n        }\r\n\r\n        let parentRect = {\r\n            width: gridCoordinates? (gridCoordinates.cx2 - gridCoordinates.cx1): window.innerWidth,\r\n            height: gridCoordinates?(gridCoordinates.cy2 - gridCoordinates.cy1): window.innerHeight\r\n        };\r\n        let newValue = (value / parentRect[this.getParentProps(prop)] * 100).toString() + \"%\";\r\n        this.setStyleParam(prop, newValue, data, breakpointName, dontAddToSnap);\r\n    };\r\n\r\n    getParentProps = (prop) => {\r\n        if (prop === \"width\" ||\r\n            prop === \"minWidth\" ||\r\n            prop === \"maxWidth\")\r\n        {\r\n            return \"width\";\r\n        }\r\n\r\n        return \"height\";\r\n    };\r\n\r\n    isPercent = (value) => {\r\n        if (isNaN(value)) {\r\n            if (value.includes(\"%\"))\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setRuntimeStyle = (newRuntimeStyle, animationCss) => {\r\n        if (this.callOverride(\"setRuntimeStyle\", newRuntimeStyle))\r\n            return;\r\n\r\n        let runtimeStyle = newRuntimeStyle && {...newRuntimeStyle};\r\n        this.setState({runtimeStyle, animationCss});\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getGridItemStyleId = () => {\r\n        return `style_grid_item_${this.props.id}`;\r\n    };\r\n\r\n    setGridItemStyle = (newGridItemStyle, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setGridItemStyle\", newGridItemStyle, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let gridItemStyle = {...newGridItemStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle, undefined, breakpointName);\r\n\r\n        let styleNode = document.getElementById(this.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(this.getCompositeFromData(\"gridItemStyle\"),\r\n                this.getGridItemStyleId(), this.getGridItemStyleId(), this);\r\n        } else {\r\n            updateStyle(styleNode, this.getCompositeFromData(\"gridItemStyle\"), this.getGridItemStyleId());\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    setGridArea = (gridArea, breakpointName) => {\r\n        if (this.callOverride(\"setGridArea\", gridArea))\r\n            return;\r\n\r\n        let gridItemStyle = this.getFromData(\"gridItemStyle\");\r\n        gridItemStyle.gridArea = gridArea;\r\n\r\n        this.setGridItemStyle(gridItemStyle, breakpointName);\r\n    };\r\n\r\n    getGridArea = () => {\r\n        if (this.callOverride(\"getGridArea\"))\r\n            return;\r\n\r\n        let gridItemStyle = this.getCompositeFromData(\"gridItemStyle\");\r\n        return gridItemStyle.gridArea;\r\n    };\r\n\r\n    setStyleParam = (param, value, data, breakpointName, dontAddToSnap) => {\r\n        if (this.hasOverride(\"setStyleParam\"))\r\n            return this.callOverride(\"setStyleParam\", param, value, data, breakpointName);\r\n\r\n        let style = this.hasDataInBreakPoint(\"style\", data, breakpointName) || {};\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        this.setStyle(style, data, breakpointName, undefined, dontAddToSnap);\r\n    };\r\n\r\n    getStyleId = () => {\r\n        return `style_${this.props.id}`;\r\n    };\r\n\r\n    getDesignStyleId = () => {\r\n        return `style_design_${this.props.id}`;\r\n    };\r\n\r\n    setDesignStyle = (newDesignStyle, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setDesignStyle\", newDesignStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let designStyle = {...newDesignStyle};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"designStyle\", designStyle, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let designStyleNode = document.getElementById(this.getDesignStyleId());\r\n\r\n            if (!designStyleNode) {\r\n                appendStyle(this.getCompositeFromData(\"designStyle\"),\r\n                    this.getDesignStyleId(), this.getDesignStyleId(), this);\r\n            } else {\r\n                updateStyle(designStyleNode, this.getCompositeFromData(\"designStyle\"), this.getDesignStyleId());\r\n            }\r\n\r\n            this.invalidateSize();\r\n            this.addToSnap();\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyleId = () => {\r\n        return `style-transform-${this.props.id}`;\r\n    };\r\n\r\n    setTransformStyle = (newTransform, data, breakpointName, dontOverride) => {\r\n        if (this.callOverride(\"setTransformStyle\", newTransform, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let transform = {...newTransform};\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"transform\", transform, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let transformStyleNode = document.getElementById(this.getTransformStyleId());\r\n\r\n            if (!transformStyleNode) {\r\n                appendStyle(this.getTransformStyle(),\r\n                    this.getTransformStyleId(), this.getTransformStyleId(), this);\r\n            } else {\r\n                updateStyle(transformStyleNode, this.getTransformStyle(), this.getTransformStyleId());\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    getTransformStyle = (compositeTransform) => {\r\n        if (!compositeTransform)\r\n            compositeTransform = this.getCompositeFromData(\"transform\") || {};\r\n\r\n        let rules = [];\r\n\r\n        // TODO add more rules\r\n        compositeTransform.rotateDegree && rules.push(`rotate(${compositeTransform.rotateDegree}deg)`);\r\n\r\n        return {transform: rules.join(' ')};\r\n    };\r\n\r\n    setStyle = (newStyle, data, breakpointName, dontOverride, dontAddToSnap) => {\r\n        if (this.callOverride(\"setStyle\", newStyle, data, breakpointName, dontOverride))\r\n            return;\r\n\r\n        let style = {...newStyle};\r\n\r\n        if (!dontOverride)\r\n            this.setDataInBreakpoint(\"style\", style, data, breakpointName);\r\n\r\n        if (!data) {\r\n            let styleNode = document.getElementById(this.getStyleId());\r\n\r\n            if (!styleNode) {\r\n                appendStyle(this.getCompositeFromData(\"style\"), this.getStyleId(), this.getStyleId(), this);\r\n            } else {\r\n                updateStyle(styleNode, this.getCompositeFromData(\"style\"), this.getStyleId());\r\n            }\r\n\r\n            if (!dontAddToSnap) {\r\n                this.invalidateSize();\r\n                this.addToSnap();\r\n            }\r\n        }\r\n\r\n        this.onPropsChange.trigger();\r\n    };\r\n\r\n    clearFromAllBp = (props, data, excludeBp) => {\r\n        let sortedBp = this.props.breakpointmanager.getSortedBreakPoints();\r\n        sortedBp.forEach( bp => {\r\n            if (excludeBp !== bp.name || !excludeBp.includes(bp.name))\r\n                this.setDataInBreakpoint(props, undefined, data, bp.name);\r\n        });\r\n    };\r\n\r\n    setGrid = (grid, callback, breakpointName) => {\r\n        if (this.callOverride(\"setGrid\", grid, callback, breakpointName))\r\n            return;\r\n\r\n        this.setDataInBreakpoint(\"grid\", grid, undefined, breakpointName);\r\n        this.setState({grid: grid}, () => {\r\n            if (this.props.gridLine.hasGridLine(this.props.id)) {\r\n                let size = this.getSize(false);\r\n                this.updateGridLines(\r\n                    size.top,\r\n                    size.left,\r\n                    size.top + size.clientHeight,\r\n                    size.left + size.clientWidth,\r\n                    this.props.gridLine.hasGridLine(this.props.id)\r\n                );\r\n            }\r\n\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    getGridLineRect = (ref, index, dir, item) => {\r\n        if (ref.current) {\r\n            return ref.current.rect;\r\n        }\r\n\r\n        let thisRect = item.getSize(false);\r\n        if (dir === 'x') {\r\n            if (index === 0) {\r\n                return {\r\n                    left: thisRect.left\r\n                }\r\n            } else {\r\n                return {\r\n                    left: thisRect.left + thisRect.width - 1\r\n                }\r\n            }\r\n        } else {\r\n            if (index === 0) {\r\n                return {\r\n                    top: thisRect.top\r\n                }\r\n            } else {\r\n                return {\r\n                    top: thisRect.top + thisRect.height - 1\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getGridLineOfPoint = (left, top, parent, after = false, parentRect) => {\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false);\r\n        let x;\r\n        let cx;\r\n        let xLineRef = this.props.gridLine.getXlineRef(parent.props.id);\r\n        for(let i = 0; i < xLineRef.length; i++) {\r\n            let rect = this.getGridLineRect(xLineRef[i], i, 'x', parent);\r\n            if (left < rect.left || (after && left <= rect.left)) {\r\n                x = i;\r\n                if (!after) {\r\n                    if (xLineRef[i - 1]) {\r\n                        // rect = xLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = xLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(xLineRef[i - 1], i - 1, 'x', parent);\r\n                        cx = rect.left;\r\n                    } else {\r\n                        cx = parentRect.left - parentRect.scrollLeft;\r\n                    }\r\n                } else {\r\n                    cx = rect.left;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (x === undefined) {\r\n            x = xLineRef.length;\r\n            // let rect = xLineRef[xLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = xLineRef[xLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(xLineRef[xLineRef.length - 1], xLineRef.length - 1, 'x', parent);\r\n            cx = rect.left;\r\n        }\r\n\r\n        let y;\r\n        let cy;\r\n        let yLineRef = this.props.gridLine.getYlineRef(parent.props.id);\r\n        for(let i = 0; i < yLineRef.length; i++) {\r\n            // let rect = yLineRef[i].current.getBoundingClientRect();\r\n            // let rect = yLineRef[i].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[i], i, 'y', parent);\r\n            if (top < rect.top || (after && top <= rect.top)) {\r\n                y = i;\r\n                if (!after) {\r\n                    if (yLineRef[i - 1]) {\r\n                        // rect = yLineRef[i - 1].current.getBoundingClientRect();\r\n                        // rect = yLineRef[i - 1].current.rect;\r\n                        rect = this.getGridLineRect(yLineRef[i - 1], i - 1, 'y', parent);\r\n                        cy = rect.top;\r\n                    } else {\r\n                        cy = parentRect.top - parentRect.scrollTop;\r\n                    }\r\n                } else {\r\n                    cy = rect.top;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if (y === undefined) {\r\n            y = yLineRef.length;\r\n            // let rect = yLineRef[yLineRef.length - 1].current.getBoundingClientRect();\r\n            // let rect = yLineRef[yLineRef.length - 1].current.rect;\r\n            let rect = this.getGridLineRect(yLineRef[yLineRef.length - 1], yLineRef.length - 1, 'y', parent);\r\n            cy = rect.top;\r\n        }\r\n\r\n        if (after) {\r\n            x++;\r\n            y++;\r\n        }\r\n\r\n        x = Math.max(1, x);\r\n        x = Math.min(xLineRef.length, x);\r\n        y = Math.max(1, y);\r\n        y = Math.min(yLineRef.length, y);\r\n\r\n        if (x === xLineRef.length)\r\n            cx++;\r\n        if (y === yLineRef.length)\r\n            cy++;\r\n\r\n        return {x, y, cx, cy};\r\n    };\r\n\r\n    calculateGridArea = (left, top, width, height, parent, parentRect) => {\r\n        let gridLine1 = this.getGridLineOfPoint(left, top, parent, false, parentRect);\r\n        let gridLine2 = this.getGridLineOfPoint(left + width, top + height, parent, true, parentRect);\r\n        return {\r\n            gridArea: {x1: gridLine1.x, y1: gridLine1.y, x2: gridLine2.x, y2: gridLine2.y},\r\n            coordinates: {cx1: gridLine1.cx, cy1: gridLine1.cy, cx2: gridLine2.cx, cy2: gridLine2.cy}\r\n        };\r\n    };\r\n\r\n    onMouseDown = (e) => {\r\n        if (this.isLeftClick(e)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this.mouseDown = true;\r\n            this.mouseMoved = {\r\n                deltaX: 0,\r\n                deltaY: 0,\r\n                lastClientX: e.clientX,\r\n                lastClientY: e.clientY,\r\n                startMillis: (new Date()).getTime()\r\n            };\r\n            window.addEventListener(\"mousemove\", this.onMouseMove);\r\n            window.addEventListener(\"mouseup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseMoved.deltaX += (e.clientX - this.mouseMoved.lastClientX);\r\n        this.mouseMoved.deltaY += (e.clientY - this.mouseMoved.lastClientY);\r\n        this.mouseMoved.lastClientX = e.clientX;\r\n        this.mouseMoved.lastClientY = e.clientY;\r\n\r\n        if (!this.moving) {\r\n            let currentMillis = new Date().getTime();\r\n            if (Math.abs(this.mouseMoved.deltaX) > 10 ||\r\n                Math.abs(this.mouseMoved.deltaY) > 10 ||\r\n                currentMillis - this.mouseMoved.startMillis > 500)\r\n            {\r\n                if (!this.state.groupSelected && this.getFromTempData(\"draggable\") && !this.state.selected) {\r\n                    this.onSelect(true);\r\n                }\r\n                this.moving = true;\r\n                this.canMove() && this.onDragStart(e, isGroupSelected(this), true);\r\n            }\r\n        } else {\r\n            this.canMove() && this.onDrag(e, isGroupSelected(this), true);\r\n        }\r\n    };\r\n\r\n    canMove = () => {\r\n        return (this.state.selected || this.state.groupSelected) && this.getFromTempData(\"draggable\");\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        let currentMillis = new Date().getTime();\r\n        if (!this.moving && currentMillis - this.mouseMoved.startMillis < 500) {\r\n            if (!this.dropped) {\r\n                e.stopPropagation();\r\n                this.onSelect(true, undefined, undefined, true);\r\n            } else {\r\n                this.dropped = false;\r\n            }\r\n        }\r\n\r\n        if (this.moving) {\r\n            this.canMove() && this.onDragStop(e, isGroupSelected(this), true);\r\n        }\r\n\r\n        this.moving = false;\r\n        this.mouseDown = false;\r\n\r\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    };\r\n\r\n    onSelect = (selected, callback, deselectParent, clicked) => {\r\n        if (this.callOverride(\"onSelect\", selected, callback, deselectParent))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n        if (!this.props.isSelectable)\r\n            return;\r\n\r\n        if (selected) {\r\n            // this.getSize(true, true);\r\n            // this.getSize(false);\r\n            this.props.select.selectItem(this, clicked);\r\n            this.toggleGridLines(selected, undefined, \"A\");\r\n            this.props.select.updateHelpLines(this, this.state.helpLinesParent,\r\n                this.getSize(false), this.state.dragging);\r\n        }\r\n        if (this.props.parent) {\r\n            if (selected || deselectParent)\r\n                this.props.parent.toggleGridLines(selected, () => {\r\n                    this.toggleHelpLines(selected && this.props.parent);\r\n                }, \"B\");\r\n        } else {\r\n            selected && this.props.gridLine.removeGridLineByType(\"B\");\r\n        }\r\n\r\n        this.setTempData(\"selected\", selected);\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        this.setState({selected, groupSelected: false}, () => {\r\n            selected && this.setItemHover(true);\r\n            if (callback)\r\n                callback();\r\n        });\r\n    };\r\n\r\n    toggleGridLines = (showGridLines, callback, gridType) => {\r\n        if (this.callOverride(\"toggleGridLines\", showGridLines, callback, gridType))\r\n            return;\r\n\r\n        if (!this.mounted)\r\n            return;\r\n\r\n        if (!showGridLines) {\r\n            this.props.gridLine.removeGridLine(this.props.id);\r\n            return;\r\n        }\r\n\r\n        if (this.props.gridLine.hasGridLine(this.props.id, gridType)) {\r\n            if (callback)\r\n                callback();\r\n            return;\r\n        }\r\n\r\n        let grid = this.getCompositeFromData(\"grid\");\r\n        // let rect = this.getSize(false, true);\r\n        // let rect = this.getSize(false);\r\n        this.props.gridLine.addGrid(\r\n            this.props.id,\r\n            grid.x,\r\n            grid.y,\r\n            gridType,\r\n            grid.gridTemplateRows,\r\n            grid.gridTemplateColumns,\r\n            {\r\n                // top: rect.top,\r\n                // left: rect.left,\r\n                // bottom: window.innerHeight - rect.top - rect.height,\r\n                // right: window.innerWidth - rect.left - rect.width,\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n            },\r\n            callback\r\n        )\r\n    };\r\n\r\n    toggleHelpLines = (helpLinesParent, callback) => {\r\n        if (this.callOverride(\"toggleHelpLines\", helpLinesParent, callback))\r\n            return;\r\n\r\n        if (this.mounted) {\r\n            this.setState({\r\n                helpLinesParent: helpLinesParent !== this && helpLinesParent\r\n            }, callback);\r\n        }\r\n    };\r\n\r\n    onScroll = (e) => {\r\n        if (this.callOverride(\"onScroll\", e))\r\n            return;\r\n\r\n        // this.invalidateSize(false, true);\r\n        this.props.select.updateParentsRect();\r\n        this.props.select.onScrollItem();\r\n        this.onScrollEnd(e);\r\n    };\r\n\r\n    onScrollEnd = debounce((e) => {\r\n        if (this.callOverride(\"onScrollEnd\", e))\r\n            return;\r\n\r\n        this.invalidateSize();\r\n        this.addToSnap();\r\n    }, 500);\r\n\r\n    editGrid = () => {\r\n        this.props.gridEditorRef.current.editing(this);\r\n    };\r\n\r\n    updateGridEditor = () => {\r\n        this.props.gridEditorRef.current.update(this);\r\n    };\r\n\r\n    setAnchor = (anchor) => {\r\n        if (this.callOverride(\"setAnchor\", anchor))\r\n            return;\r\n\r\n        this.setTempData(\"anchor\", anchor);\r\n        this.updateLayout();\r\n    };\r\n\r\n    playAnimation = (disable) => {\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        if (!compositeDesign.animation)\r\n            return;\r\n\r\n        // Component going to show animation, so add end listener for more action\r\n        let onAnimationEnd = DynamicAnimations[compositeDesign.animation.name].onAnimationEnd;\r\n\r\n        let stateChange = {\r\n            forceKey: \"animationReplay\",\r\n            showAnimation: true,\r\n            onAnimationEnd\r\n        };\r\n        if (disable) stateChange.disableVS = true;\r\n\r\n        this.setState(stateChange);\r\n    };\r\n\r\n    onAnimationEnd = () => {\r\n        this.setState({forceKey: undefined, showAnimation: undefined});\r\n    };\r\n\r\n    getCompositeAnimationCss = (compositeAnimation) => {\r\n        if (!(compositeAnimation && this.state.forceKey && this.state.showAnimation))\r\n            return;\r\n\r\n        return DynamicAnimations[compositeAnimation.name]\r\n            .getAnimationCSS(this, compositeAnimation.options);\r\n    };\r\n\r\n    render () {\r\n        let compositeDesign = getCompositeDesignData(this);\r\n        let classes = classNames(\r\n            // !this.state.hover? \"AwesomeGridLayoutRoot\": \"AwesomeGridLayoutRootHover\",\r\n            \"AwesomeGridLayoutRoot\",\r\n            \"AwesomeGridLayoutGrid\",\r\n            this.props.className,\r\n            this.getDesignStyleId(),\r\n            this.getGridItemStyleId(),\r\n            this.getStyleId(),\r\n            this.state.animationCss,\r\n        );\r\n\r\n        let fakeClasses = classNames(\r\n            this.getGridItemStyleId(),\r\n            this.getStyleId(),\r\n        );\r\n\r\n        let holderClasses = classNames(\r\n            \"AwesomeGridLayoutHolder\",\r\n            this.getTransformStyleId(),\r\n            this.getCompositeAnimationCss(compositeDesign.animation)\r\n        );\r\n\r\n        let size = this.state.runtimeStyle || this.getSize(false);\r\n\r\n        // this.state.selected &&\r\n        // this.props.select.updateHelpLines(this, this.state.helpLinesParent, size, this.state.dragging);\r\n\r\n        let TagAs = this.props.as || \"div\";\r\n        return (\r\n            <Portal nodeId={this.state.portalNodeId} disabled={!this.state.portalNodeId}>\r\n                <VisibilitySensorWrapper\r\n                    animation={compositeDesign.animation}\r\n                    editor={this.props.editor}\r\n                    playAnimation={this.playAnimation}\r\n                    select={this.props.select}\r\n                    disableVS={this.state.disableVS}\r\n                >\r\n                        <TagAs\r\n                            onMouseDown={!this.state.showAnimation ? this.onMouseDown : undefined}\r\n                            onMouseOver={this.onMouseOver}\r\n                            onMouseEnter={this.onMouseEnter}\r\n                            onMouseOut={this.onMouseOut}\r\n                            id={this.props.id}\r\n                            className={classes}\r\n                            style={{\r\n                                ...this.state.runtimeStyle,\r\n                                ...(this.canMove() && {cursor: \"move\"})\r\n                            }}\r\n                            ref={this.rootDivRef}\r\n                            key={this.props.id}\r\n                        >\r\n                            {/*{\r\n                                this.state.selected && this.getFromTempData(\"resizable\") &&\r\n                                !this.state.showAnimation &&\r\n                                !isGroupSelected(this) &&\r\n                                <AdjustmentResize\r\n                                    id={this.props.id}\r\n                                    key={`${this.props.id}_resize`}\r\n                                    sides={this.props.resizeSides || ['n','s','e','w','ne','nw','se','sw']}\r\n                                    onResizeStart={this.onResizeStart}\r\n                                    onResize={this.onResize}\r\n                                    onResizeStop={this.onResizeStop}\r\n                                    draggingStart={this.state.draggingStart}\r\n                                    isStretch={isStretch(this)}\r\n                                    allowStretch={allowStretch(this)}\r\n                                    itemId={this.props.id}\r\n                                    idMan={this.props.idMan}\r\n                                    transform={this.getCompositeFromData(\"style\").transform}\r\n                                    data={this.state.runtimeStyle || size}\r\n                                />\r\n                            }*/}\r\n\r\n                            {\r\n                                this.getFromTempData(\"pageResize\") &&\r\n                                !this.state.showAnimation &&\r\n                                <AdjustmentResizePage\r\n                                    id={this.props.id}\r\n                                    key={`${this.props.id}_resize`}\r\n                                    sides={['e','w']}\r\n                                    onResizeStart={this.pageResizeStart}\r\n                                    onResize={this.pageResize}\r\n                                    onResizeStop={this.pageResizeStop}\r\n                                    data={this.state.runtimeStyle || size}\r\n                                    top={(this.resizeData && this.resizeData.top) || (size && size.top)}\r\n                                    left={(this.resizeData && this.resizeData.left) || (size && size.left)}\r\n                                    width={(this.state.runtimeStyle && this.state.runtimeStyle.width) || (size && size.width)}\r\n                                    height={(this.state.runtimeStyle && this.state.runtimeStyle.height) || (size && size.height)}\r\n                                    draggingStart={this.state.draggingStart}\r\n                                    itemId={this.props.id}\r\n                                    document={this.props.document}\r\n                                />\r\n                            }\r\n\r\n                            {/*{\r\n                                !this.state.showAnimation &&\r\n                                <AdjustmentHelpLines\r\n                                    show={!this.props.helplineOff && this.state.selected &&\r\n                                    this.state.helpLinesParent && !this.getFromTempData(\"pageResize\") &&\r\n                                    !isGroupSelected(this)}\r\n                                    helpLinesParent={this.state.helpLinesParent}\r\n                                    item={this}\r\n                                    dragging={this.state.dragging}\r\n                                    itemRect={this.state.dragging? this.getSize(false, true): size}\r\n                                    width={this.state.runtimeStyle? this.state.runtimeStyle.width : undefined}\r\n                                    height={this.state.runtimeStyle? this.state.runtimeStyle.height : undefined}\r\n                                    document={this.props.document}\r\n                                />\r\n                            }*/}\r\n\r\n                            {/*{\r\n                                this.state.selected && this.state.resizeHelpData &&\r\n                                !this.getFromTempData(\"pageResize\") &&\r\n                                !this.state.showAnimation &&\r\n                                !isGroupSelected(this) &&\r\n                                <AdjustmentHelpSize\r\n                                    resizeHelpData={this.state.resizeHelpData}\r\n                                />\r\n                            }*/}\r\n\r\n                            <AnimationHolder\r\n                                className={holderClasses}\r\n                                key={this.state.forceKey || `${this.props.id}_container`}\r\n                                id={`${this.props.id}_child_holder`}\r\n                                onAnimationEnd={this.onAnimationEnd}\r\n                            >\r\n                                {\r\n                                    this.props.getStaticChildren && this.props.getStaticChildren()\r\n                                }\r\n\r\n                                <GridChildContainer\r\n                                    id={this.props.id}\r\n                                    key={`${this.props.id}_container`}\r\n                                    allChildren={this.children}\r\n                                    grid={this.state.grid}\r\n                                    overflowData={this.getCompositeFromData(\"overflowData\")}\r\n                                    showGridLines={this.state.showGridLines}\r\n                                    aglStyle={this.getCompositeFromData(\"style\")}\r\n                                    overflowRef={this.overflowRef}\r\n                                    containerRef={this.containerRef}\r\n                                    show={this.props.griddata.isContainer}\r\n                                    onScroll={this.onScroll}\r\n                                    isPage={this.props.isPage}\r\n                                    page={this.props.page}\r\n                                    ref={this.backContainerRef}\r\n                                    size={this.state.runtimeStyle || size}\r\n                                    getChildrenOverride={this.props.getChildrenOverride}\r\n                                    agl={this}\r\n                                    modifyContainerStyleOverride={this.props.modifyContainerStyleOverride}\r\n                                    document={this.props.document}\r\n                                />\r\n                            </AnimationHolder>\r\n\r\n                            <AGLAnchor\r\n                                anchor={this.getFromTempData(\"anchor\")}\r\n                            />\r\n\r\n                            {\r\n                                /*/!*this.state.dragging &&*!/ this.props.parent &&\r\n                                <Portal nodeId={this.state.portalNodeId ||\r\n                                    `${this.props.parent.props.id}_container`}\r\n                                >\r\n                                    <div\r\n                                        className={fakeClasses}\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            pointerEvents: \"none\"\r\n                                        }}\r\n                                    />\r\n                                </Portal>*/\r\n                            }\r\n\r\n                            {\r\n                                this.state.hover &&\r\n                                <Portal nodeId=\"root\">\r\n                                        <div\r\n                                            className=\"AwesomeGridLayoutRootHover\"\r\n                                            key={`hover_${this.props.id}`}\r\n                                            style={{\r\n                                                width: size ? size.width : 0,\r\n                                                height: size ? size.height : 0,\r\n                                                top: size ? size.top : 0,\r\n                                                left: size ? size.left : 0,\r\n                                            }}\r\n                                        />\r\n                                </Portal>\r\n                            }\r\n                        </TagAs>\r\n                </VisibilitySensorWrapper>\r\n            </Portal>\r\n        )\r\n    }\r\n}\r\n\r\nAwesomeGridLayout2.defaultProps = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    childSize: {w: \"100%\", h: \"100%\"},\r\n    showSideResize: false,\r\n    isSelectable: true,\r\n    layoutType: \"free\", // free, grid\r\n    snap: {x: 1, y: 1},\r\n    dir: \"rtl\", // rtl, ltr,\r\n    compactType: \"vertical\", // none, vertical, horizontal\r\n    defaultGrid: {\r\n        x: 1,\r\n        y: 1,\r\n        gridTemplateRows: \"1fr\",\r\n        gridTemplateColumns: \"1fr\"\r\n    },\r\n    defaultStyle: {\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n    },\r\n    defaultGridItemStyle: {\r\n        alignSelf: \"center\",\r\n        justifySelf: \"center\",\r\n        position: \"relative\",\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        gridArea: \"1/1/2/2\",\r\n    }\r\n};\r\n","import AwesomeGridLayout2 from \"../../AwesomeGridLayout2\";\r\nimport React from \"react\";\r\nimport {assignData, cloneObject, initGriddata} from \"../../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AGLWrapper extends React.Component{\r\n    render() {\r\n        let griddata = this.props.aglRef.current && this.props.aglRef.current.props.griddata;\r\n        if (!griddata) griddata = this.props.griddata;\r\n        if (griddata && griddata.initialized) {\r\n            let bpData = this.props.data.bpData;\r\n            Object.keys(this.props.data).forEach(key => {\r\n                if (key !== \"bpData\") {\r\n                    griddata[key] = this.props.data[key];\r\n                }\r\n            });\r\n            assignData(griddata.bpData[\"laptop\"], bpData);\r\n        } else {\r\n            griddata = assignData(this.props.griddata, this.props.data);\r\n            initGriddata(griddata, this.props.breakpointmanager);\r\n        }\r\n        return (\r\n            <AwesomeGridLayout2\r\n                className={this.props.className}\r\n                {...this.props}\r\n                ref={this.props.aglRef}\r\n                griddata={griddata}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class StackSpacerContainer extends React.PureComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n    }\r\n\r\n    updateSpacers = (spacers) => {\r\n        setTimeout(() => {\r\n            this.setState({spacers});\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.state.spacers.map((spacer, index) => {\r\n                return <Portal nodeId={`${this.props.aglRef.current.props.id}_container`}\r\n                               key={index}\r\n                               document={this.props.document}\r\n                >\r\n                    {spacer}\r\n                </Portal>\r\n            })\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentMove extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootDivRef = React.createRef();\r\n    }\r\n\r\n    onMouseDown = (e) => {\r\n        let rect = this.rootDivRef.current.getBoundingClientRect();\r\n        if (this.isLeftClick(e) && e.clientX >= rect.left && e.clientX <= rect.left + rect.width &&\r\n            e.clientY >= rect.top && e.clientY <= rect.top + rect.height) {\r\n            e.stopPropagation();\r\n            this.mouseDown = true;\r\n            window.addEventListener(\"pointermove\", this.onMouseMove);\r\n            window.addEventListener(\"pointerup\", this.onMouseUp);\r\n        }\r\n    };\r\n\r\n    isLeftClick = (e) => {\r\n        if (e.pointerType === \"mouse\" && e.button === 0)\r\n            return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    onMouseMove = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n        e.stopPropagation();\r\n\r\n        if (!this.moving) {\r\n            this.moving = true;\r\n            this.onDragStart(e);\r\n        } else {\r\n            this.onDrag(e);\r\n        }\r\n    };\r\n\r\n    onMouseUp = (e) => {\r\n        if (!this.mouseDown)\r\n            return;\r\n\r\n        this.mouseDown = false;\r\n\r\n        if (this.moving) {\r\n            e.stopPropagation();\r\n            this.onDragStop(e);\r\n        } else {\r\n            if (this.props.onClick)\r\n                this.props.onClick(e);\r\n        }\r\n\r\n        this.moving = false;\r\n\r\n        window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n        window.removeEventListener(\"pointerup\", this.onMouseUp);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.props.onDragStart(e);\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.props.onDrag(e);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentMove\"\r\n                className=\"AdjustmentMoveRoot\"\r\n                ref={this.rootDivRef}\r\n                onPointerDown={this.onMouseDown}\r\n                style={{\r\n                    cursor: this.props.cursor || \"move\"\r\n                }}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\n\r\nexport default class StackSpacerResizer extends React.PureComponent{\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerResizerRoot\"\r\n            >\r\n                <AdjustmentMove\r\n                    onDragStart={this.props.onDragStart}\r\n                    onDrag={this.props.onDrag}\r\n                    onDragStop={this.props.onDragStop}\r\n                    cursor={this.props.cursor}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./StackSpacer.css\";\r\nimport AdjustmentMove from \"../../Adjustment/AdjustmentMove\";\r\nimport StackSpacerResizer from \"./StackSpacerResizer\";\r\n\r\nexport default class StackSpacer extends React.PureComponent{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            pointerEvents: \"auto\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.mounted = false;\r\n    }\r\n\r\n    setPointerEvents = (pointerEvents) => {\r\n        this.mounted && this.setState({pointerEvents});\r\n    };\r\n\r\n    updateSpacerData = (newHeight) => {\r\n        this.props.spacerData.height = newHeight;\r\n        this.props.stack.props.select.updateSize();\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClick = (e) => {\r\n        this.props.aglRef.current.onSelect(true);\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        if (this.props.onDragStart)\r\n            this.props.onDragStart(e);\r\n\r\n        this.dragData = {\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n            firstHeight: this.props.spacerData.height\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        e.preventDefault();\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        let newHeight = this.dragData.firstHeight + deltaY;\r\n\r\n        newHeight = Math.max(0, newHeight);\r\n        this.updateSpacerData(newHeight);\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        if (this.props.onDragStop)\r\n            this.props.onDragStop(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"StackSpacerRoot\"\r\n                style={{\r\n                    height: `${this.props.spacerData.height}px`,\r\n                    order: this.props.order,\r\n                    pointerEvents: this.state.pointerEvents\r\n                }}\r\n                onClick={this.onClick}\r\n                onMouseOver={this.props.onMouseOver}\r\n                onMouseEnter={this.props.onMouseEnter}\r\n                onMouseOut={this.props.onMouseOut}\r\n            >\r\n\r\n                <StackSpacerResizer\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n\r\n                {\r\n                    this.props.aglRef.current.getSize(false).width > 150 &&\r\n                    <p\r\n                        className=\"StackSpacerText\"\r\n                    >\r\n                        Spacer\r\n                    </p>\r\n                }\r\n\r\n                <p\r\n                    className=\"StackSpacerSizeText\"\r\n                >\r\n                    {`${this.props.spacerData.height.toFixed(0)}px`}\r\n                </p>\r\n\r\n                <AdjustmentMove\r\n                    onDragStart={this.onDragStart}\r\n                    onDrag={this.onDrag}\r\n                    onDragStop={this.onDragStop}\r\n                    onClick={this.onClick}\r\n                    cursor={\"ns-resize\"}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AGLWrapper from \"../Helpers/AGLWrapper\";\r\nimport AGLComponent from \"../Helpers/AGLComponent\";\r\nimport {isFixed, isStretch} from \"../../AwesomwGridLayoutHelper\";\r\nimport {appendStyle, cloneObject, updateStyle} from \"../../AwesomeGridLayoutUtils\";\r\nimport StackSpacerContainer from \"./StackSpacerContainer\";\r\nimport StackSpacer from \"./StackSpacer\";\r\nimport Portal from \"../../Portal\";\r\n\r\nexport default class Stack extends AGLComponent{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            spacers: []\r\n        };\r\n        this.aglRef = React.createRef();\r\n        this.spacerContainerRef = React.createRef();\r\n\r\n        if (props.allSpacerData)\r\n            this.allSpacerData = props.allSpacerData;\r\n    }\r\n\r\n    getDefaultData = () => {\r\n        return {\r\n            isContainer: true,\r\n        };\r\n    };\r\n\r\n    getChildrenOverride = (sortedChildrenArray, agl) => { // [{child: child, zIndex: zIndex}], agl\r\n        return sortedChildrenArray.map((child, index) => {\r\n            return child.child;\r\n        });\r\n    };\r\n\r\n    lateMountedOverride = (agl) => {\r\n        agl.invalidateSize();\r\n        agl.addToSnap();\r\n        agl.onSelect(agl.getFromTempData(\"selected\"));\r\n\r\n        if (agl.props.onPageResize) {\r\n            let rect = agl.getSize(false, true);\r\n            agl.props.onPageResize(rect.width, agl, true);\r\n        }\r\n\r\n        agl.props.onChildMounted && agl.props.onChildMounted(agl);\r\n        if (this.props.lateMountedComplete)\r\n            this.props.lateMountedComplete(this);\r\n\r\n        this.setOrder();\r\n    };\r\n\r\n    calculateGridItemChildOverride = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateChildGridItemOverride =\r\n        (child1, child, relativeX, relativeY, parent, width, height, parentRect, fromState) =>\r\n    {\r\n        return this.calculateWrapper(child, relativeX, relativeY, parent, width, height, parentRect, fromState);\r\n    };\r\n\r\n    calculateWrapper = (child, relativeX, relativeY, parent, width, height, parentRect, fromState) => {\r\n        if (!width) {\r\n            let rect = child.getSize(false, true);\r\n            width = rect.width;\r\n            height = rect.height;\r\n        }\r\n\r\n        if (!parentRect)\r\n            parentRect = parent.getSize(false, true);\r\n\r\n        let {gridArea, coordinates} = child.calculateGridArea(\r\n            parentRect.left + relativeX,\r\n            parentRect.top + relativeY,\r\n            width,\r\n            height,\r\n            parent,\r\n            parentRect\r\n        );\r\n\r\n        if (isFixed(child)) {\r\n            gridArea = {x1: 1, x2: 2, y1: 1, y2: 2};\r\n            coordinates = {\r\n                cy1: parentRect.top,\r\n                cy2: parentRect.top + parentRect.clientHeight,\r\n                cx1: parentRect.left,\r\n                cx2: parentRect.left + parentRect.clientWidth\r\n            }\r\n        }\r\n\r\n        let coordinatesAbs = cloneObject(coordinates);\r\n\r\n        child.coordinateToRelative(coordinates, parentRect);\r\n\r\n        let gridItemStyle = {...(child.state.gridItemStyle || child.props.defaultGridItemStyle)};\r\n        delete gridItemStyle.marginLeft;\r\n        delete gridItemStyle.marginRight;\r\n\r\n        gridItemStyle.gridArea = `${gridArea.y1}/${gridArea.x1}/${gridArea.y2}/${gridArea.x2}`;\r\n\r\n        let centerX = (relativeX  - coordinates.cx1) + width / 2;\r\n\r\n        let parentCenterMinusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 - 0.1);\r\n        let parentCenterPlusX = (coordinates.cx2 - coordinates.cx1) / 2 * (1 + 0.1);\r\n\r\n        let yLineRef = child.props.gridLine.getYlineRef(parent.props.id);\r\n        let cy2IsLastLine = gridArea.y2 === yLineRef.length || isFixed(child);\r\n\r\n        if (gridItemStyle.justifySelf !== \"stretch\") {\r\n            if (centerX < parentCenterPlusX && centerX > parentCenterMinusX) {\r\n                // child is center\r\n                let centerDiff = (centerX - (coordinates.cx2 - coordinates.cx1) / 2);\r\n                gridItemStyle.alignSelf = \"center\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(centerDiff * 2).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else if (centerX > parentCenterPlusX) {\r\n                gridItemStyle.alignSelf = \"flex-end\";\r\n                gridItemStyle.marginRight =\r\n                    `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft = `0${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            } else {\r\n                gridItemStyle.alignSelf = \"flex-start\";\r\n                gridItemStyle.marginRight = `0${child.getUnit(gridItemStyle.marginRight)}`;\r\n                gridItemStyle.marginLeft =\r\n                    `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n            }\r\n\r\n            // if (cy2IsLastLine && (relativeY + height >= coordinates.cy2)) {\r\n            // gridItemStyle.alignSelf = \"end\";\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =`0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // } else {\r\n            // gridItemStyle.alignSelf = \"start\";\r\n            // gridItemStyle.marginBottom = `0${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n            // }\r\n        } else {\r\n            gridItemStyle.marginRight =\r\n                `${(coordinates.cx2 - (relativeX + width)).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginRight)}`;\r\n            gridItemStyle.marginLeft =\r\n                `${(relativeX - coordinates.cx1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginLeft)}`;\r\n\r\n            // gridItemStyle.marginBottom =\r\n            //     `${(coordinates.cy2 - relativeY - height).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginBottom)}`;\r\n            // gridItemStyle.marginTop =\r\n            //     `${(relativeY - coordinates.cy1).toFixed(0).toString()}${child.getUnit(gridItemStyle.marginTop)}`;\r\n        }\r\n\r\n        delete gridItemStyle.justifySelf;\r\n        delete gridItemStyle.marginTop;\r\n        delete gridItemStyle.marginBottom;\r\n        delete gridItemStyle.gridArea;\r\n\r\n        child.setDataInBreakpoint(\"relativeY\", relativeY);\r\n\r\n        this.setOrder(child.props.id, child, relativeY, height, fromState);\r\n\r\n        child.setStyleParam(\"height\", \"auto\");\r\n\r\n        return {gridItemStyle, gridArea, coordinates, coordinatesAbs};\r\n    };\r\n\r\n    setOrder = (childId, child, childRelativeY, childHeight, fromState) => {\r\n        console.log(\"setOrder2\");\r\n        let childFound = false;\r\n        let childOrderSet = false;\r\n        let sorted = Object.values(this.aglRef.current.allChildRefs).sort((a,b) => {\r\n            if (a && a.current && b && b.current){\r\n                if (a.current.props.id === childId || b.current.props.id === childId)\r\n                    childFound = true;\r\n\r\n                let relativeYA = a.current.getFromData(\"relativeY\");\r\n                let relativeYB = b.current.getFromData(\"relativeY\");\r\n                if (relativeYA < relativeYB) {\r\n                    return -1;\r\n                } else if (relativeYA === relativeYB) {\r\n                    // Without this, we can get different sort results in IE vs. Chrome/FF\r\n                    if (childId === a.current.props.id)\r\n                        return -1;\r\n                    else if (childId === b.current.props.id)\r\n                        return 1;\r\n                    else\r\n                        return 0;\r\n                }\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        let order = 1;\r\n        let relativeY = 0;\r\n        let spacers = [];\r\n        let length = sorted.filter(childRef => {\r\n            return (childRef && childRef.current);\r\n        }).length;\r\n\r\n        sorted.forEach((childRef, index) => {\r\n            if (childRef && childRef.current) {\r\n                if (childRelativeY && !childFound) {\r\n                    let relativeY2 = childRef.current.getFromData(\"relativeY\");\r\n                    if (!childOrderSet && relativeY2 > childRelativeY) {\r\n                        childOrderSet = true;\r\n                        child.setStyleParam(\"order\", order);\r\n                        child.setDataInBreakpoint(\"order\", order);\r\n                        order++;\r\n                    }\r\n                }\r\n                childRef.current.setStyleParam(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"order\", order);\r\n                childRef.current.setDataInBreakpoint(\"relativeY\", relativeY);\r\n                let size = childRef.current.getSize(false);\r\n                relativeY += size.height;\r\n\r\n                if (childId === childRef.current.props.id) {\r\n                    childOrderSet = true;\r\n                }\r\n                order++;\r\n\r\n                if (length > index + 1) {\r\n                    spacers[index] = this.getSpacer(index, order);\r\n                    relativeY+= this.getSpacerData(index).height;\r\n                    order++;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (child && !childOrderSet) {\r\n            childOrderSet = true;\r\n            child.setStyleParam(\"order\", order);\r\n            child.setDataInBreakpoint(\"order\", order);\r\n            order++;\r\n        }\r\n\r\n        this.spacerContainerRef.current.updateSpacers(spacers);\r\n        setTimeout(() => {\r\n            this.props.select.updateSize();\r\n        }, 0);\r\n    };\r\n\r\n    getSpacer = (index, order) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        if (!this.allSpacerRef[index]) {\r\n            this.allSpacerRef[index] = React.createRef();\r\n        }\r\n\r\n        return <StackSpacer\r\n            key={index}\r\n            order={order}\r\n            spacerData={this.allSpacerData[index]}\r\n            ref={this.allSpacerRef[index]}\r\n            aglRef={this.aglRef}\r\n            onDragStart={this.onStackDragStart}\r\n            onDragStop={this.onStackDragStop}\r\n            stack={this}\r\n            onMouseOver={this.onMouseOverSpacer}\r\n            onMouseEnter={this.onMouseEnterSpacer}\r\n            onMouseOut={this.onMouseOutSpacer}\r\n        />;\r\n    };\r\n\r\n    onStackDragStart = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", true);\r\n    };\r\n\r\n    onStackDragStop = (e) => {\r\n        this.aglRef.current.setTempData(\"dontMove\", false);\r\n    };\r\n\r\n    getSpacerData = (index) => {\r\n        if (!this.allSpacerData) {\r\n            this.allSpacerData = [];\r\n        }\r\n        if (!this.allSpacerRef) {\r\n            this.allSpacerRef = [];\r\n        }\r\n\r\n        if (!this.allSpacerData[index]) {\r\n            this.allSpacerData[index] = {\r\n                height: 20\r\n            };\r\n        }\r\n\r\n        return this.allSpacerData[index];\r\n    };\r\n\r\n    setMouseOverOverride = (agl, item, positionData, callback) => {\r\n        this.setPointerEventOfSpacers(\"none\");\r\n        return this.props.dragdrop.setMouseOver(item, positionData, callback);\r\n    };\r\n\r\n    setMouseOverForNonDraggingOverride = (agl) => {\r\n        this.setPointerEventOfSpacers(\"auto\");\r\n        agl.props.dragdrop.setMouseOverForNonDragging(agl);\r\n    };\r\n\r\n    setPointerEventOfSpacers = (pointerEvents) => {\r\n        if (!this.allSpacerRef)\r\n            this.allSpacerRef = [];\r\n\r\n        console.log(\"setPointerEventOfSpacers\", pointerEvents, this.allSpacerRef);\r\n        this.allSpacerRef.forEach((spacerRef) => {\r\n            console.log(\"setPointerEventOfSpacers\", spacerRef);\r\n            if (spacerRef && spacerRef.current)\r\n                spacerRef.current.setPointerEvents(pointerEvents);\r\n        })\r\n    };\r\n\r\n    setGridItemStyleChildOverride = (child, newGridItemStyle) => {\r\n        let gridItemStyle = {...newGridItemStyle};\r\n        delete gridItemStyle.gridArea;\r\n        child.setDataInBreakpoint(\"gridItemStyle\", gridItemStyle);\r\n        let styleNode = document.getElementById(child.getGridItemStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(gridItemStyle, child.getGridItemStyleId(), child.getGridItemStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, gridItemStyle, child.getGridItemStyleId());\r\n        }\r\n    };\r\n\r\n    modifyContainerStyleOverride = (container, agl, grid, aglStyle) => {\r\n        let style;\r\n\r\n        style = {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            position: \"relative\"\r\n        };\r\n\r\n        let styleNode = document.getElementById(container.getContainerStyleId());\r\n\r\n        if (!styleNode) {\r\n            appendStyle(style, container.getContainerStyleId(), container.getContainerStyleId(), this.getAgl());\r\n        } else {\r\n            updateStyle(styleNode, style, container.getContainerStyleId());\r\n        }\r\n    };\r\n\r\n    onChildLeaveOverride = (agl, child) => {\r\n        agl.removeChildElement(child);\r\n        child.removeIdAndChildrenId();\r\n\r\n        this.setOrder();\r\n\r\n        if (!agl.removing && Object.values(agl.allChildRefs).length === 1) {\r\n            agl.removing = true;\r\n            setTimeout(() => {\r\n                Object.values(agl.allChildRefs)[0] &&\r\n                this.props.dragdrop.dropItem(\r\n                    Object.values(agl.allChildRefs)[0].current,\r\n                    Object.values(agl.allChildRefs)[0].current.props.parent,\r\n                    this.props.parent, undefined, false, 2);\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    stretchChildOverride = (child, item) => {\r\n        if (!item.props.parent)\r\n            return;\r\n\r\n        let stretch = false;\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n\r\n        if (!isStretch(item, true)) {\r\n            console.log(\"here\");\r\n            stretch = true;\r\n        }\r\n\r\n        gridItemStyle.alignSelf = stretch? \"stretch\": \"center\";\r\n        gridItemStyle.marginLeft = \"0px\";\r\n        gridItemStyle.marginRight = \"0px\";\r\n        item.setStyleParam(\"width\", \"100%\");\r\n\r\n        if (!stretch) {\r\n            item.setStyleParam(\"width\", \"80%\");\r\n        }\r\n\r\n        item.setGridItemStyle(gridItemStyle);\r\n        item.props.select.onScrollItem();\r\n    };\r\n\r\n    isStretchChildOverride = (child, item, log) => {\r\n        if (!item.props.parent)\r\n            return false;\r\n\r\n        let gridItemStyle = item.getFromData(\"gridItemStyle\");\r\n\r\n        if (log) {\r\n            console.log(!(gridItemStyle.alignSelf !== \"stretch\" ||\r\n                gridItemStyle.marginLeft !== \"0px\" ||\r\n                gridItemStyle.marginRight !== \"0px\"), gridItemStyle)\r\n        }\r\n        return !(gridItemStyle.alignSelf !== \"stretch\" ||\r\n            gridItemStyle.marginLeft !== \"0px\" ||\r\n            gridItemStyle.marginRight !== \"0px\");\r\n    };\r\n\r\n    setStyleParamOverride = (agl, param, value, data) => {\r\n        if (param === \"height\" || param === \"minHeight\")\r\n            return;\r\n\r\n        let style = !data? agl.getFromData(\"style\"): agl.getFromData(\"style\", data);\r\n        style[param] = value;\r\n        if (value === undefined)\r\n            delete style[param];\r\n        agl.setStyle(style, data);\r\n    };\r\n\r\n    onMouseOverSpacer = (e) => {\r\n        this.aglRef.current.onMouseOver(e);\r\n    };\r\n\r\n    onMouseEnterSpacer = (e) => {\r\n        this.aglRef.current.onMouseEnter(e);\r\n    };\r\n\r\n    onMouseOutSpacer = (e) => {\r\n        this.aglRef.current.onMouseOut(e);\r\n    };\r\n\r\n    onChildAdd = () => {\r\n        this.getAgl().removing = false;\r\n    };\r\n\r\n    render() {\r\n        return [\r\n            <AGLWrapper tagName=\"Stack\"\r\n                        key=\"Stack\"\r\n                        aglRef={!this.props.aglRef? this.aglRef: this.aglRef = this.props.aglRef}\r\n                        {...this.props}\r\n                        data={this.getData()}\r\n                        style={{...{\r\n                            height: \"auto\"\r\n                        }, ...this.props.style}}\r\n                        getChildrenOverride={this.getChildrenOverride}\r\n                        isStack={true}\r\n                        resizeSides={['e','w']}\r\n                        onDragStartChildOverride={this.onDragStartChildOverride}\r\n                        onDragChildOverride={this.onDragChildOverride}\r\n                        onDragStopChildOverride={this.onDragStopChildOverride}\r\n                        setGridItemStyleChildOverride={this.setGridItemStyleChildOverride}\r\n                        calculateGridItemChildOverride={this.calculateGridItemChildOverride}\r\n                        calculateChildGridItemOverride={this.calculateChildGridItemOverride}\r\n                        modifyContainerStyleOverride={this.modifyContainerStyleOverride}\r\n                        setMouseOverOverride={this.setMouseOverOverride}\r\n                        setMouseOverForNonDraggingOverride={this.setMouseOverForNonDraggingOverride}\r\n                        stretchChildOverride={this.stretchChildOverride}\r\n                        isStretchChildOverride={this.isStretchChildOverride}\r\n                        lateMountedOverride={this.lateMountedOverride}\r\n                        setStyleParamOverride={this.setStyleParamOverride}\r\n                        onChildLeaveOverride={this.onChildLeaveOverride}\r\n                        onChildAdd={this.onChildAdd}\r\n\r\n            >\r\n            </AGLWrapper>,\r\n            <StackSpacerContainer ref={this.spacerContainerRef} key=\"spacers\"\r\n                                  aglRef={this.aglRef}\r\n                                  document={this.props.document}\r\n            />\r\n        ]\r\n    }\r\n}\r\n","import {throttleDebounce} from \"./AwesomeGridLayoutUtils\";\r\nimport {\r\n    createStack,\r\n    getSectionId, rotate,\r\n} from \"./AwesomwGridLayoutHelper\";\r\nimport ContainerBase from \"./Components/Containers/ContainerBase\";\r\nimport React from \"react\";\r\nimport './AwesomwGridLayoutHelper.css';\r\nimport {StyleSheet, css} from \"aphrodite\";\r\nimport { bounce } from 'react-animations';\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class SelectManager {\r\n    constructor(inputManager, groupSelectRef, pageAglRef, miniMenuHolderRef,\r\n                inspectorRef, resizeRef, helpLinesRef, hoverRef) {\r\n        this.inputManager = inputManager;\r\n        this.groupSelectRef = groupSelectRef;\r\n        this.pageAglRef = pageAglRef;\r\n        this.miniMenuHolderRef = miniMenuHolderRef;\r\n        this.inspectorRef = inspectorRef;\r\n        this.resizeRef = resizeRef;\r\n        this.helpLinesRef = helpLinesRef;\r\n        this.hoverRef = hoverRef;\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 71 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + G\");\r\n                this.editGrid();\r\n            }\r\n            if ( key === 49 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 1\");\r\n                this.test1();\r\n            }\r\n            if ( key === 50 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 2\");\r\n                this.test2();\r\n            }\r\n            if ( key === 51 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + 3\");\r\n                this.test3();\r\n            }\r\n        });\r\n    }\r\n\r\n    getPageOverflowRef = () => {\r\n        if (this.pageAglRef.current)\r\n            return this.pageAglRef.current.overflowRef.current;\r\n    };\r\n\r\n    editGrid = (item) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        } else if (!item){\r\n            item = this.getSelected();\r\n        }\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.editGrid();\r\n    };\r\n\r\n    selectItem = (item, clicked) => {\r\n        if (!this.getSelected()) {\r\n            this.selectedItem = item;\r\n        }\r\n\r\n        if (this.inputManager.ctrl && clicked && getSectionId(this.selectedItem) === getSectionId(item)) {\r\n            this.createGroup(item);\r\n            return;\r\n        } else if (this.inputManager.ctrl){\r\n            // TODO can notify to user that can't select multiple item from different section\r\n            this.clearGroup();\r\n        } else {\r\n            this.clearGroup();\r\n        }\r\n\r\n        if (this.selectedItem.props.id !== item.props.id){\r\n            this.selectedItem.onSelect(false, undefined, true);\r\n            this.updateMenu();\r\n        }\r\n\r\n        this.updateMiniMenu(item);\r\n        this.setInspector(\r\n            item.props.getInspector()\r\n        );\r\n\r\n        this.updateResizePanes(item, item.getSize(false));\r\n\r\n        this.selectedItem = item;\r\n    };\r\n\r\n    clearMiniMenu = () => {\r\n        this.miniMenuHolderRef.current.clear();\r\n    };\r\n\r\n    updateMiniMenu = (item) => {\r\n        if(!item)\r\n            item = this.getSelected();\r\n\r\n        if (item && item.hasMiniMenu())\r\n            this.miniMenuHolderRef.current.addMiniMenu(item);\r\n        else\r\n            this.clearMiniMenu();\r\n    };\r\n\r\n    updateMenu = (menu) => {\r\n        this.miniMenuHolderRef.current.addMenu(menu);\r\n    };\r\n\r\n    setInspector = (inspectorMenu) => {\r\n        this.inspectorRef.current.setMenu(inspectorMenu);\r\n    };\r\n\r\n    clearGroup = () => {\r\n        if (!this.group)\r\n            return;\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: false,\r\n                groupDragStart: undefined,\r\n                groupDrag: undefined,\r\n                groupDragStop: undefined,\r\n            });\r\n            item.onSelect(false, undefined, true);\r\n        });\r\n\r\n        this.group = undefined;\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    createGroup = (item) => {\r\n        let selectedItem = this.selectedItem;\r\n        this.selectedItem = undefined;\r\n\r\n        if (!this.group) {\r\n            this.group = [];\r\n            selectedItem && this.group.push(selectedItem);\r\n        }\r\n\r\n        item && this.group.push(item);\r\n\r\n        this.group.forEach(item => {\r\n            item.setState({groupSelected: true,\r\n                groupDragStart: this.groupDragStart,\r\n                groupDrag: this.groupDrag,\r\n                groupDragStop: this.groupDragStop,\r\n            });\r\n        });\r\n\r\n        this.updateGroupRect();\r\n        this.clearMiniMenu();\r\n        this.updateMenu();\r\n    };\r\n\r\n    groupDragStart = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStart(e, true);\r\n        });\r\n    };\r\n\r\n    groupDrag = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDrag(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    groupDragStop = (e, mainItem) => {\r\n        this.group.forEach(item => {\r\n            if (mainItem !== item)\r\n                item.onDragStop(e, true);\r\n        });\r\n\r\n        this.updateGroupRect();\r\n    };\r\n\r\n    deleteGroup = () => {\r\n        if (!this.group) {\r\n            return;\r\n        }\r\n\r\n        this.group.forEach(item => {\r\n            item.delete();\r\n        });\r\n\r\n        this.clearGroup();\r\n    };\r\n\r\n    updateGroupRect = () => {\r\n        if (!this.group) {\r\n            this.groupSelectRef.current.updateRect();\r\n            return;\r\n        }\r\n\r\n        let firstRect = this.group[0].getSize(false, true);\r\n        let top = firstRect.top;\r\n        let left = firstRect.left;\r\n        let bottom = window.innerHeight - firstRect.top - firstRect.height;\r\n        let right =  window.innerWidth - firstRect.left - firstRect.width;\r\n\r\n        this.group.slice(1, this.group.length).forEach(item => {\r\n            let rect = item.getSize(false, true);\r\n            top = Math.min(top, rect.top);\r\n            left = Math.min(left, rect.left);\r\n            bottom = Math.min(bottom, window.innerHeight - rect.top - rect.height);\r\n            right = Math.min(right, window.innerWidth - rect.left - rect.width);\r\n        });\r\n\r\n        this.groupSelectRef.current.updateRect({\r\n            top, left, bottom, right\r\n        }, this.group);\r\n    };\r\n\r\n    getSelected = () => {\r\n        return this.selectedItem;\r\n    };\r\n\r\n    updateParentsRect = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects(true, true);\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects(true, true);\r\n    }, 40);\r\n\r\n    // change grid line positions and resize panes\r\n    onScrollItem = throttleDebounce(() => {\r\n        this.updateGroupRect();\r\n\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        if (item.props.parent)\r\n            item.props.parent.prepareRects();\r\n        if (item.state.helpLinesParent && item.state.helpLinesParent !== item.props.parent)\r\n            item.state.helpLinesParent.prepareRects();\r\n\r\n        let size = item.getSize(false, true);\r\n        item.updateGridLines(\r\n            size.top, size.left,\r\n            window.innerHeight - size.top - size.height,\r\n            window.innerWidth - size.left - size.width,\r\n            \"A\"\r\n        );\r\n        item.updateGridEditor();\r\n        this.updateMiniMenu();\r\n        this.updateResizePanes(item, size);\r\n        this.updateHelpSizeLines(item, item.state.helpLinesParent, size, item.state.dragging);\r\n    }, 40);\r\n\r\n    // updateSize\r\n    updateSize = throttleDebounce(() => {\r\n        if (!this.getSelected() || !this.getSelected().mounted)\r\n            return;\r\n\r\n        let item = this.getSelected();\r\n\r\n        let size = item.getSize(true, true);\r\n\r\n        this.updateResizePanes(item, size);\r\n    }, 100);\r\n\r\n    updateResizePanes = (item, data) => {\r\n        this.resizeRef.current.update(item, data);\r\n    };\r\n\r\n    updateHelpLines = throttle((item, helpLineParent, itemRect, dragging) => {\r\n       this.updateHelpSizeLines(item, helpLineParent, itemRect, dragging);\r\n    }, 50);\r\n\r\n    updateHover = (item, size, clear) => {\r\n        this.hoverRef.current.update(item, size, clear);\r\n    };\r\n\r\n    updateHelpSizeLines = (item, helpLineParent, itemRect, dragging) => {\r\n        if (this.helpLinesRef.current)\r\n            this.helpLinesRef.current.update(item, helpLineParent, itemRect, dragging);\r\n    };\r\n\r\n    test1 = () => {\r\n        createStack(this.group);\r\n    };\r\n\r\n    test2 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        const animationStyles = StyleSheet.create({\r\n            bounce: {\r\n                animationName: bounce,\r\n                animationDuration: '1s',\r\n            }\r\n        });\r\n\r\n        let child =\r\n            <ContainerBase\r\n                style={{\r\n                    width: \"50%\",\r\n                    height: \"auto\",\r\n                    minHeight: \"75px\"\r\n                }}\r\n                data={{\r\n                    bpData: {\r\n                        design:{\r\n                            fillColor: `#5cff${Math.floor(Math.random() * 89) + 10  }`,\r\n                            // animation: {\r\n                            //     name: \"rotate\"\r\n                            // }\r\n                        },\r\n                    }\r\n                }}\r\n            />;\r\n\r\n        item.addChild(child, undefined, undefined, undefined, (agl) => {\r\n        }, undefined, true);\r\n    };\r\n\r\n    test3 = () => {\r\n        let item = this.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        item.playAnimation();\r\n    };\r\n}\r\n","export default class SnapManager {\r\n    constructor (snapThreshold, snapSvgRef) {\r\n        this.snaps = {};\r\n        this.snapThreshold = snapThreshold || 10;\r\n        this.snapSvgRef = snapSvgRef;\r\n    }\r\n\r\n    addSnap = (id, horizontals = [], verticals = [], parentsId) => {\r\n        this.snaps[id] = {\r\n            horizontals, verticals, id, parentsId\r\n        };\r\n    };\r\n\r\n    removeSnap = (id) => {\r\n        delete this.snaps[id];\r\n    };\r\n\r\n    checkSnap = (top, left, ignoreId, additionalSnaps) => {\r\n        let snapH, snapV;\r\n        let topUp = top + this.snapThreshold;\r\n        let topDown = top - this.snapThreshold;\r\n        let leftUp = left + this.snapThreshold;\r\n        let leftDown = left - this.snapThreshold;\r\n\r\n        let snaps = Object.values(this.snaps);\r\n        snaps = snaps.concat(additionalSnaps);\r\n\r\n        for (let i = 0; i < snaps.length; i++) {\r\n            let snap = snaps[i];\r\n            if (!snap)\r\n                continue;\r\n\r\n            if (snap.id === ignoreId)\r\n                continue;\r\n            if (snap.parentsId && snap.parentsId.includes(ignoreId))\r\n                continue;\r\n\r\n            if (!snapH){\r\n                for (let h = 0; h < snap.horizontals.length; h++) {\r\n                    let horizontal = snap.horizontals[h];\r\n                    if (horizontal.value <= topUp && horizontal.value >= topDown) {\r\n                        snapH = horizontal;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!snapV) {\r\n                for (let v = 0; v < snap.verticals.length; v++) {\r\n                    let vertical = snap.verticals[v];\r\n                    if (vertical.value <= leftUp && vertical.value >= leftDown) {\r\n                        snapV = vertical;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (snapH && snapV)\r\n                break;\r\n        }\r\n\r\n        return {snapH, snapV};\r\n    }\r\n\r\n    drawSnap = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.snapSvgRef.current.update(snapH, snapV, pointOfSnapH, pointOfSnapV)\r\n    }\r\n}\r\n","import {createItem} from \"./AwesomwGridLayoutHelper\";\r\nimport {cloneObject} from \"./AwesomeGridLayoutUtils\";\r\nimport throttle from \"lodash.throttle\";\r\n\r\nexport default class CopyManager {\r\n    constructor(selectManager, pageRef, dragdrop) {\r\n        this.selectManager = selectManager;\r\n        this.pageRef = pageRef;\r\n        this.dragdrop = dragdrop;\r\n\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 86 && ctrl ) {\r\n                console.log(\"ctrl + V\");\r\n                this.paste();\r\n            } else if ( key === 67 && ctrl ) {\r\n                console.log(\"ctrl + C\");\r\n                this.copy();\r\n            } else if ( key === 68 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + D\");\r\n                this.duplicate();\r\n            } else if ( key === 46 ) {\r\n                console.log(\"delete\");\r\n                this.delete();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    copy = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copyItem = item;\r\n    };\r\n\r\n    getCopyItem = () => {\r\n        return this.copyItem;\r\n    };\r\n\r\n    paste = throttle((selectedItem) => {\r\n        if (!this.copyItem)\r\n            return;\r\n        let destinationItem;\r\n        if (!selectedItem)\r\n            selectedItem = this.selectManager.getSelected() || this.pageRef.current;\r\n\r\n        while (!destinationItem)  {\r\n            if (selectedItem.getFromTempData(\"isContainer\")) {\r\n                destinationItem = selectedItem;\r\n            } else {\r\n                selectedItem = selectedItem.props.parent;\r\n            }\r\n        }\r\n\r\n        let style = cloneObject(this.getCopyItem().getFromData(\"style\"));\r\n        let gridItemStyle = cloneObject(this.getCopyItem().getFromData(\"gridItemStyle\"));\r\n        let copyRect = this.getCopyItem().getSize(false);\r\n        let parentRect = destinationItem.getSize(false);\r\n        if (destinationItem === this.getCopyItem().props.parent) {\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginLeft =\r\n                    (parseFloat(gridItemStyle.marginLeft.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginLeft)\r\n                gridItemStyle.marginTop =\r\n                    (parseFloat(gridItemStyle.marginTop.replace(\"px\", \"\").replace(\"%\", \"\")) + 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginRight)\r\n                gridItemStyle.marginRight =\r\n                    (parseFloat(gridItemStyle.marginRight.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n            if (gridItemStyle.marginBottom)\r\n                gridItemStyle.marginBottom =\r\n                    (parseFloat(gridItemStyle.marginBottom.replace(\"px\", \"\").replace(\"%\", \"\")) - 20).toString()\r\n                    + \"px\";\r\n\r\n            if (!gridItemStyle.marginLeft && !gridItemStyle.marginRight)\r\n                gridItemStyle.marginLeft = \"20px\";\r\n            if (!gridItemStyle.marginTop && !gridItemStyle.marginBottom)\r\n                gridItemStyle.marginTop = \"20px\";\r\n        } else {\r\n            delete gridItemStyle.marginLeft;\r\n            delete gridItemStyle.marginTop;\r\n            delete gridItemStyle.marginRight;\r\n            delete gridItemStyle.marginBottom;\r\n\r\n            gridItemStyle.justifySelf = \"center\";\r\n            gridItemStyle.alignSelf = \"center\";\r\n\r\n            if (style.width.toString().includes(\"%\")) {\r\n                style.width = (copyRect.width / parentRect.width * 100).toString() + \"%\";\r\n            }\r\n            if (style.height.toString().includes(\"%\")) {\r\n                style.height = (copyRect.height / parentRect.height * 100).toString() + \"%\";\r\n            }\r\n        }\r\n\r\n        createItem(destinationItem, {\r\n            props: this.getCopyItem().props,\r\n            tagName: this.getCopyItem().props.tagName\r\n        }, undefined, gridItemStyle, style);\r\n    }, 200);\r\n\r\n    duplicate = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item)\r\n            return;\r\n\r\n        this.copy(item);\r\n        this.paste(item.props.parent);\r\n        this.copyItem = false;\r\n    };\r\n\r\n    delete = (item) => {\r\n        if (!item)\r\n            item = this.selectManager.getSelected();\r\n        if (!item && !this.selectManager.group)\r\n            return;\r\n\r\n        this.selectManager.deleteGroup();\r\n\r\n        if (!item)\r\n            return;\r\n\r\n        item.delete();\r\n    };\r\n}\r\n","export default class IdManager {\r\n    constructor(prefix) {\r\n        this.prefix = prefix + '_';\r\n        this.allId = {};\r\n    }\r\n\r\n    getId = (preferName, fixName) => {\r\n        let result;\r\n        let baseId = !fixName? this.prefix + preferName: fixName;\r\n        let id = baseId;\r\n        let postNo = 1;\r\n        while (!result) {\r\n            if (this.allId[id]) {\r\n                id = baseId + \"_\" + postNo;\r\n                postNo++;\r\n            } else {\r\n                result = id;\r\n            }\r\n        }\r\n\r\n        this.allId[id] = true;\r\n\r\n        return result;\r\n    };\r\n\r\n    setItem = (id, item) => {\r\n        this.allId[id] = item;\r\n    };\r\n\r\n    // return agl reference\r\n    getItem = (id) => {\r\n        return this.allId[id];\r\n    };\r\n\r\n    removeId = (id) => {\r\n        delete this.allId[id];\r\n    };\r\n}\r\n","import throttle from 'lodash.throttle';\r\n\r\nexport default class UndoRedo {\r\n    constructor(max, document, idMan) {\r\n        this.undoQueue = [];\r\n        this.redoQueue = [];\r\n        this.max = max || 20;\r\n        this.idMan = idMan;\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'z') {\r\n                this.undo();\r\n            }\r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            if (event.ctrlKey && event.key === 'Z') {\r\n                this.redo();\r\n            }\r\n        });\r\n    }\r\n\r\n    getQueueObject = (func, undo, power) => {\r\n        return {\r\n            redo: func,\r\n            undo: undo,\r\n            power: power\r\n        }\r\n    };\r\n\r\n    add = (func, undo, power) => {\r\n        this.undoQueue.unshift(this.getQueueObject(func, undo, power));\r\n        if (this.undoQueue.length > this.max)\r\n            this.undoQueue.pop();\r\n        this.redoQueue = [];\r\n    };\r\n\r\n    undo = throttle(() => {\r\n        this.undoFunc();\r\n    }, 200);\r\n\r\n    undoFunc = () => {\r\n        if (this.undoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.undoQueue.shift();\r\n        let power = object.power || 1;\r\n\r\n        console.log(\"undoFunc\", power);\r\n        power--;\r\n        object.undo(this.idMan);\r\n        this.redoQueue.unshift(object);\r\n\r\n        while (power > 0) {\r\n            power--;\r\n            this.undoFunc();\r\n        }\r\n    };\r\n\r\n    hasUndo = () => {\r\n        return this.undoQueue.length > 0;\r\n    };\r\n\r\n    redo = throttle(() => {\r\n        if (this.redoQueue.length === 0)\r\n            return;\r\n\r\n        let object = this.redoQueue.shift();\r\n        object.redo(this.idMan);\r\n        this.undoQueue.unshift(object);\r\n    }, 100);\r\n\r\n    hasRedo = () => {\r\n        return this.redoQueue.length > 0;\r\n    };\r\n};\r\n","export default class GridLineManager {\r\n    constructor(gridContainerRef) {\r\n        this.gridContainerRef = gridContainerRef;\r\n    }\r\n\r\n    addGrid = (id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.gridContainerRef.current.addGrid(id, x, y, gridType, gridTemplateRows, gridTemplateColumns, positions, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.gridContainerRef.current.getIdCache(gridType);\r\n    };\r\n\r\n    getXlineRef = (id) => {\r\n        return this.gridContainerRef.current.getXlineRef(id);\r\n    };\r\n\r\n    getYlineRef = (id) => {\r\n        return this.gridContainerRef.current.getYlineRef(id);\r\n    };\r\n\r\n    removeGridLine = (id) => {\r\n        this.gridContainerRef.current.removeGridLine(id);\r\n    };\r\n\r\n    removeGridLineByType = (type) => {\r\n        this.gridContainerRef.current.removeGridLineByType(type);\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        this.gridContainerRef.current.prepareRects(id);\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        return this.gridContainerRef.current.hasGridLine(id, gridType);\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        return this.gridContainerRef.current.isPrepared(id);\r\n    };\r\n}\r\n","import {v4 as uuidv4} from 'uuid';\r\nimport { goToAnchor } from 'react-scrollable-anchor'\r\n\r\nexport default class AnchorManager {\r\n    constructor() {\r\n        this.allAnchors = {};\r\n    }\r\n\r\n    addAnchor = (name, item) => {\r\n        this.allAnchors[name] = {name: name, id: uuidv4()};\r\n        item.setAnchor(this.allAnchors[name]);\r\n    };\r\n\r\n    goToAnchor = (name, saveToHistory) => {\r\n        goToAnchor(this.allAnchors[name].id, saveToHistory);\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n\r\nexport default class AdjustmentSnapLines extends React.Component {\r\n    render () {\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.props;\r\n        if (!snapH && !snapV)\r\n            return null;\r\n\r\n        if (snapH) {\r\n            return (\r\n                <line\r\n                    x1={Math.min(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    x2={Math.max(snapH.p1, snapH.p2, pointOfSnapH.p1, pointOfSnapH.p2)}\r\n                    y1={snapH.value}\r\n                    y2={snapH.value}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <line\r\n                    x1={snapV.value}\r\n                    x2={snapV.value}\r\n                    y1={Math.min(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    y2={Math.max(snapV.p1, snapV.p2, pointOfSnapV.p1, pointOfSnapV.p2)}\r\n                    style={{\r\n                        stroke: \"#ff00a4\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {cloneObject, shallowEqual} from \"./AwesomeGridLayoutUtils\";\r\nimport './GridChildDraggable.css';\r\n\r\nexport default class GridChildContainerGridLine extends React.PureComponent {\r\n    render () {\r\n        let {showGridLines, yNo, xNo, yLineRef, xLineRef} = this.props;\r\n        if (yNo && showGridLines) {\r\n            return (\r\n                new Array(yNo + 1).fill(0).map((y, index) => {\r\n                    return <div\r\n                        key={`y_${index}`}\r\n                        ref={yLineRef[index]}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            width: \"100%\",\r\n                            height: 1,\r\n                            top: index === yNo? \"unset\": 0,\r\n                            bottom: index === yNo? 0: \"unset\",\r\n                            gridArea: `${index + 1}/1/${index + 1}/${xLineRef.length + 1}`,\r\n                            backgroundImage: \"linear-gradient(90deg,rgba(89,93,112,.6) 37.5%,rgba(207,209,220,.6) 0,rgba(207,209,220,.6) 50%,transparent 0)\",\r\n                            backgroundSize: \"8px 6px\",\r\n                            backgroundRepeat: \"repeat-x\",\r\n                            pointerEvents: \"none\"\r\n                        }}\r\n                    />\r\n                })\r\n            );\r\n        } else if (xNo && showGridLines){\r\n            return (\r\n                new Array(xNo + 1).fill(0).map((x, index) => {\r\n                    return <div\r\n                        key={`x_${index}`}\r\n                        ref={xLineRef[index]}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            width: 1,\r\n                            height: \"100%\",\r\n                            left: index === xNo? \"unset\": 0,\r\n                            right: index === xNo? 0: \"unset\",\r\n                            gridArea: `1/${index + 1}/${yLineRef.length + 1}/${index + 1}`,\r\n                            backgroundImage: \"linear-gradient(rgba(89,93,112,.6) 37.5%,rgba(207,209,220,.6) 0,rgba(207,209,220,.6) 50%,transparent 0)\",\r\n                            backgroundSize: \"6px 8px\",\r\n                            backgroundRepeat: \"repeat-y\",\r\n                            pointerEvents: \"none\"\r\n                        }}\r\n                    />\r\n                })\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\nimport GridChildContainerChildren from \"../GridChildContainerChildren\";\r\nimport GridChildContainerGridLine from \"../GridChildContainerGridLine\";\r\nimport AdjustmentGridLinesWrapper from \"./AdjustmentGridLinesWrapper\";\r\nimport Portal from \"../Portal\";\r\nimport {getCachedBoundingRect} from \"../Test/WindowCache\";\r\n\r\nexport default class GridLine extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render () {\r\n        let {id, lineRef, style} = this.props;\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                id={id}\r\n                ref={lineRef}\r\n                style={style}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\nimport GridChildContainerChildren from \"../GridChildContainerChildren\";\r\nimport GridChildContainerGridLine from \"../GridChildContainerGridLine\";\r\nimport AdjustmentGridLinesWrapper from \"./AdjustmentGridLinesWrapper\";\r\n\r\nexport default class AdjustmentGridRoot extends React.PureComponent {\r\n    render () {\r\n        let {top, left, bottom, right} = this.props;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridRoot\"\r\n                className=\"AdjustmentGridRoot\"\r\n                style={{top, left, bottom, right}}\r\n            >\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n// import Portal from \"../Portal\";\r\nimport {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\nimport Portal from \"@material-ui/core/Portal/Portal\";\r\nimport GridLine from \"./GridLine\";\r\n\r\nexport default class AdjustmentGridLinesWrapper extends React.PureComponent {\r\n    needUpdate = throttleDebounce(() => {\r\n        this.forceUpdate();\r\n    }, 100);\r\n\r\n    render () {\r\n        let {yNo, xNo, yLineRef, xLineRef, refId} = this.props;\r\n\r\n        if (yNo >= 0 && xNo >= 0 && !document.getElementById(`${refId}_container`))\r\n            this.needUpdate();\r\n        return (\r\n            <>\r\n                {\r\n                    new Array(yNo + 1).fill(0).map((y, index) => {\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesY\"\r\n                                id={`y_${index}_${refId}`}\r\n                                lineRef={yLineRef[index]}\r\n                                style={{\r\n                                    top: index === yNo ? \"unset\" : 0,\r\n                                    bottom: index === yNo ? 0 : \"unset\",\r\n                                    gridArea: `${index + 1}/1/${index + 1}/${xNo + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n                {\r\n                    new Array(xNo + 1).fill(0).map((x, index) => {\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesX\"\r\n                                id={`x_${index}_${refId}`}\r\n                                lineRef={xLineRef[index]}\r\n                                style={{\r\n                                    left: index === xNo? \"unset\": 0,\r\n                                    right: index === xNo? 0: \"unset\",\r\n                                    gridArea: `1/${index + 1}/${yNo + 1}/${index + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\nimport GridChildContainerChildren from \"../GridChildContainerChildren\";\r\nimport GridChildContainerGridLine from \"../GridChildContainerGridLine\";\r\nimport AdjustmentGridLinesWrapper from \"./AdjustmentGridLinesWrapper\";\r\nimport AdjustmentGridRoot from \"./AdjustmentGridRoot\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class AdjustmentGridRow extends React.Component {\r\n    // TODO BUG: first and last grid line is not provided, fix the bug\r\n    render () {\r\n        let {gridLineManager, itemId, grid} = this.props;\r\n        let rowLines = gridLineManager.getYlineRef(itemId);\r\n        return (\r\n            <div\r\n                className=\"AdjustmentGridRowEditor\"\r\n            >\r\n                {\r\n                    new Array(grid.x).fill(0).map((x, index) => {\r\n                        let rowLine = rowLines[index];\r\n                        let rowLineRect = rowLine.current.rect;\r\n                        let nextRowLineRect = rowLines[index + 1].current.rect;\r\n                        let rowHeight = grid.gridTemplateRows.split(' ')[index];\r\n                        let classes = classNames(\r\n                            \"AdjustmentGridRowEditorItem\",\r\n                            index === 0 && \"AdjustmentGridRowEditorItemTop\",\r\n                            index === grid.x - 1 && \"AdjustmentGridRowEditorItemBottom\",\r\n                        );\r\n                        return(\r\n                                <div\r\n                                    key={`row_${index}`}\r\n                                    className={classes}\r\n                                    style={{\r\n                                        height: nextRowLineRect.top - rowLineRect.top,\r\n                                    }}\r\n                                >\r\n                                    <p style={{\r\n                                        margin: 0,\r\n                                        fontWeight: \"bold\"\r\n                                    }}>\r\n                                        {rowHeight}\r\n                                    </p>\r\n                                </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\nimport GridChildContainerChildren from \"../GridChildContainerChildren\";\r\nimport GridChildContainerGridLine from \"../GridChildContainerGridLine\";\r\nimport AdjustmentGridLinesWrapper from \"./AdjustmentGridLinesWrapper\";\r\nimport AdjustmentGridRoot from \"./AdjustmentGridRoot\";\r\nimport AdjustmentGridRow from \"./AdjustmentGridRow\";\r\n\r\nexport default class AdjustmentGrid extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: undefined,\r\n            grid: undefined,\r\n            gridLineManager: undefined\r\n        };\r\n    }\r\n\r\n    editing = (item) => {\r\n        let grid = item.getFromData(\"grid\");\r\n        let gridLineManager = item.props.gridLine;\r\n        this.setState({item, grid, gridLineManager});\r\n    };\r\n\r\n    update = (item) => {\r\n        if (item === item)\r\n            this.forceUpdate();\r\n    };\r\n\r\n    addRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        if (grid.x === 100)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        grid.x++;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 0, \"minmax(100px,max-content)\");\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    addColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 100)\r\n            return;\r\n\r\n        grid.y++;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 0, \"1fr\");\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeColumnWidth = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1, newValue);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    changeRowHeight = (index, newValue) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1, newValue);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteRow = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.x === 1)\r\n            return;\r\n\r\n        grid.x--;\r\n        let rowsHeight = grid.gridTemplateRows.split(' ');\r\n\r\n        rowsHeight.splice(index, 1);\r\n        grid.gridTemplateRows = rowsHeight.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    deleteColumn = (index) => {\r\n        if (!this.state.item)\r\n            return;\r\n\r\n        let {grid, item} = this.state;\r\n\r\n        if (grid.y === 1)\r\n            return;\r\n\r\n        grid.y--;\r\n        let columnsWidth = grid.gridTemplateColumns.split(' ');\r\n\r\n        columnsWidth.splice(index, 1);\r\n        grid.gridTemplateColumns = columnsWidth.join(' ');\r\n\r\n        item.setGrid(grid);\r\n        this.setState({grid});\r\n    };\r\n\r\n    render () {\r\n        let {gridLineManager, item, grid} = this.state;\r\n        if (!item)\r\n            return null;\r\n\r\n        let positions = gridLineManager.getIdCache(\"A\").positions;\r\n        return (\r\n            <AdjustmentGridRoot\r\n                top={positions.top}\r\n                left={positions.left}\r\n                bottom={positions.bottom}\r\n                right={positions.right}\r\n            >\r\n                <AdjustmentGridRow\r\n                    gridLineManager={gridLineManager}\r\n                    itemId={item.props.id}\r\n                    grid={grid}\r\n                />\r\n            </AdjustmentGridRoot>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\n\r\nexport default class AdjustmentSnap extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    update = (snapH, snapV, pointOfSnapH, pointOfSnapV) => {\r\n        this.setState({\r\n            snapH, snapV, pointOfSnapH, pointOfSnapV\r\n        });\r\n    };\r\n\r\n    render () {\r\n        return null;\r\n        let {snapH, snapV, pointOfSnapH, pointOfSnapV} = this.state;\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentSnapLinesRoot\"\r\n            >\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    <AdjustmentSnapLines\r\n                        snapH={snapH}\r\n                        pointOfSnapH={pointOfSnapH}\r\n                    />\r\n                    <AdjustmentSnapLines\r\n                        snapV={snapV}\r\n                        pointOfSnapV={pointOfSnapV}\r\n                    />\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\n// import Portal from \"../Portal\";\r\nimport {throttleDebounce} from \"../AwesomeGridLayoutUtils\";\r\nimport Portal from \"@material-ui/core/Portal/Portal\";\r\nimport GridLine from \"./GridLine\";\r\n\r\nexport default class AdjustmentGridLinesWrapper2 extends React.PureComponent {\r\n    needUpdate = throttleDebounce(() => {\r\n        this.forceUpdate();\r\n    }, 100);\r\n\r\n    render () {\r\n        let {yNo, xNo, yLineRef, xLineRef, refId} = this.props;\r\n\r\n        if (yNo >= 0 && xNo >= 0 && !document.getElementById(`${refId}_container`))\r\n            this.needUpdate();\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    new Array(yNo + 1).fill(0).map((y, index) => {\r\n                        if (index === 0 || index === yNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesY\"\r\n                                id={`y_${index}_${refId}`}\r\n                                lineRef={yLineRef[index]}\r\n                                style={{\r\n                                    top: index === yNo ? \"unset\" : 0,\r\n                                    bottom: index === yNo ? 0 : \"unset\",\r\n                                    gridArea: `${index + 1}/1/${index + 1}/${xNo + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n                {\r\n                    new Array(xNo + 1).fill(0).map((x, index) => {\r\n                        if (index === 0 || index === xNo)\r\n                            return null;\r\n                        return <Portal\r\n                            key={index}\r\n                            container={document.getElementById(`${refId}_container`)}\r\n                        >\r\n                            <GridLine\r\n                                className=\"AdjustmentGridLinesX\"\r\n                                id={`x_${index}_${refId}`}\r\n                                lineRef={xLineRef[index]}\r\n                                style={{\r\n                                    left: index === xNo? \"unset\": 0,\r\n                                    right: index === xNo? 0: \"unset\",\r\n                                    gridArea: `1/${index + 1}/${yNo + 1}/${index + 1}`,\r\n                                }}\r\n                            />\r\n                        </Portal>\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport AdjustmentSnapLines from \"./AdjustmentSnapLines\";\r\nimport GridChildContainerChildren from \"../GridChildContainerChildren\";\r\nimport GridChildContainerGridLine from \"../GridChildContainerGridLine\";\r\nimport AdjustmentGridLinesWrapper from \"./AdjustmentGridLinesWrapper\";\r\nimport Portal from \"../Portal\";\r\nimport {getCachedBoundingRect} from \"../Test/WindowCache\";\r\nimport AdjustmentGridLinesWrapper2 from \"./AdjustmentGridLinesWrapper2\";\r\n\r\nexport default class AdjustmentGridLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xNoA: -1,\r\n            yNoA: -1,\r\n            xNoB: -1,\r\n            yNoB: -1,\r\n        };\r\n\r\n        this.xLineRefA = new Array(100);\r\n        this.yLineRefA = new Array(100);\r\n        this.xLineRefB = new Array(100);\r\n        this.yLineRefB = new Array(100);\r\n\r\n        this.idCache = {};\r\n    }\r\n\r\n    fixLineRef = (x, y, gridType) => {\r\n        for (let i = 0; i <= x; i++) {\r\n            if (!this[`xLineRef${gridType}`][i])\r\n                this[`xLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n        for (let i = 0; i <= y; i++) {\r\n            if (!this[`yLineRef${gridType}`][i])\r\n                this[`yLineRef${gridType}`][i] = React.createRef();\r\n        }\r\n    };\r\n\r\n    addGrid = (id, y, x, gridType, gridTemplateRows, gridTemplateColumns, positions, callback) => {\r\n        this.fixLineRef(x, y, gridType);\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id && gridType === \"A\") {\r\n            this.updateGridLine(id, \"A\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id && gridType === \"B\") {\r\n            this.updateGridLine(id, \"B\", {\r\n                gridTemplateRows, gridTemplateColumns, positions, x, y\r\n            }, callback)\r\n        }\r\n        else {\r\n            this.idCache[gridType] = {id, gridTemplateRows, gridTemplateColumns, positions, x, y};\r\n\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, () => {\r\n                // this.prepareRects(id);\r\n                if (callback)\r\n                    callback();\r\n            })\r\n        }\r\n    };\r\n\r\n    updateGridLine = (id, gridType, {gridTemplateRows, gridTemplateColumns, positions, x, y} = {}, callback) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else return;\r\n        }\r\n\r\n        gridTemplateRows && (this.idCache[gridType].gridTemplateRows = gridTemplateRows);\r\n        gridTemplateColumns && (this.idCache[gridType].gridTemplateColumns = gridTemplateColumns);\r\n        positions && (this.idCache[gridType].positions = positions);\r\n        x && (this.idCache[gridType].x = x);\r\n        y && (this.idCache[gridType].y = y);\r\n\r\n        if (!x && !y) {\r\n            this.setState({reload: true}, callback);\r\n            return;\r\n        }\r\n\r\n        if (x || y)\r\n            this.setState({\r\n                [`xNo${gridType}`]: x,\r\n                [`yNo${gridType}`]: y\r\n            }, callback);\r\n    };\r\n\r\n    getIdCache = (gridType) => {\r\n        return this.idCache[gridType];\r\n    };\r\n\r\n    getXlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else return;\r\n        }\r\n\r\n        return this[`xLineRef${gridType}`].slice(0, this.idCache[gridType].x + 1);\r\n    };\r\n\r\n    getYlineRef = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else return;\r\n        }\r\n\r\n        return this[`yLineRef${gridType}`].slice(0, this.idCache[gridType].y + 1);\r\n    };\r\n\r\n    removeGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                gridType = \"A\";\r\n            else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                gridType = \"B\";\r\n            else return;\r\n        }\r\n\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    hasGridLine = (id, gridType) => {\r\n        if (!gridType) {\r\n            if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n                return \"A\";\r\n\r\n            if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n                return \"B\";\r\n        } else {\r\n            if (this.idCache[gridType] && this.idCache[gridType].id === id)\r\n                return gridType;\r\n        }\r\n    };\r\n\r\n    isPrepared = (id) => {\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].prepared)\r\n            return true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].prepared) {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    prepareRects = (id) => {\r\n        let xLineRef = this.getXlineRef(id);\r\n        if (xLineRef)\r\n            for(let i = 0; i < xLineRef.length; i++) {\r\n                let current = xLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`xLineRef_${i}_${id}`, current);\r\n            }\r\n        let yLineRef = this.getYlineRef(id);\r\n        if (yLineRef)\r\n            for(let i = 0; i < yLineRef.length; i++) {\r\n                let current = yLineRef[i].current;\r\n                if (!current)\r\n                    continue;\r\n\r\n                current.rect = getCachedBoundingRect(`yLineRef_${i}_${id}`, current);\r\n            }\r\n\r\n        if (this.idCache[\"A\"] && this.idCache[\"A\"].id === id)\r\n            this.idCache[\"A\"].prepared = true;\r\n        else if (this.idCache[\"B\"] && this.idCache[\"B\"].id === id)\r\n            this.idCache[\"B\"].prepared = true;\r\n    };\r\n\r\n    removeGridLineByType = (gridType) => {\r\n        delete this.idCache[gridType];\r\n\r\n        this.setState({\r\n            [`xNo${gridType}`]: -1,\r\n            [`yNo${gridType}`]: -1\r\n        })\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGridLinesRoot\"\r\n                className=\"AdjustmentGridLinesRoot\"\r\n            >\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_A\"}\r\n                    refId={this.idCache[\"A\"] && this.idCache[\"A\"].id}\r\n                    xNo={this.state.xNoA}\r\n                    yNo={this.state.yNoA}\r\n                    xLineRef={this.xLineRefA}\r\n                    yLineRef={this.yLineRefA}\r\n                    gridTemplateRows={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"A\"] && this.idCache[\"A\"].gridTemplateColumns}\r\n                    top={this.idCache[\"A\"] && this.idCache[\"A\"].positions.top}\r\n                    bottom={this.idCache[\"A\"] && this.idCache[\"A\"].positions.bottom}\r\n                    left={this.idCache[\"A\"] && this.idCache[\"A\"].positions.left}\r\n                    right={this.idCache[\"A\"] && this.idCache[\"A\"].positions.right}\r\n                    document={this.props.document}\r\n                />\r\n\r\n                <AdjustmentGridLinesWrapper2\r\n                    id={\"GridLinesContainer_B\"}\r\n                    refId={this.idCache[\"B\"] && this.idCache[\"B\"].id}\r\n                    xNo={this.state.xNoB}\r\n                    yNo={this.state.yNoB}\r\n                    xLineRef={this.xLineRefB}\r\n                    yLineRef={this.yLineRefB}\r\n                    gridTemplateRows={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateRows}\r\n                    gridTemplateColumns={this.idCache[\"B\"] && this.idCache[\"B\"].gridTemplateColumns}\r\n                    top={this.idCache[\"B\"] && this.idCache[\"B\"].positions.top}\r\n                    bottom={this.idCache[\"B\"] && this.idCache[\"B\"].positions.bottom}\r\n                    left={this.idCache[\"B\"] && this.idCache[\"B\"].positions.left}\r\n                    right={this.idCache[\"B\"] && this.idCache[\"B\"].positions.right}\r\n                    document={this.props.document}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport AdjustmentMove from \"./AdjustmentMove\";\r\nimport {cloneObject} from \"../AwesomeGridLayoutUtils\";\r\n\r\nexport default class AdjustmentGroupRect extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rect: undefined,\r\n            group: undefined,\r\n            draggingStart: false\r\n        }\r\n    }\r\n\r\n    updateRect = (rect, group) => {\r\n        this.setState({rect, group});\r\n    };\r\n\r\n    onResizeStart = (e, dir, delta) => {\r\n        if (this.resizing)\r\n            return;\r\n        this.resizing = true;\r\n\r\n        this.setState({draggingStart: true});\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStart(e, dir, delta, true);\r\n        });\r\n\r\n        let {rect} = this.state;\r\n        this.resizeData = {\r\n            firstX: window.innerWidth - rect.left - rect.right,\r\n            firstY: window.innerHeight - rect.top - rect.bottom,\r\n            firstTop: rect.top,\r\n            firstLeft: rect.left,\r\n        };\r\n    };\r\n\r\n    onResize = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResize(e, dir, delta, true);\r\n        });\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n        delete rect.height;\r\n        delete rect.width;\r\n\r\n        let deltaY = delta.y;\r\n        let deltaX = delta.x;\r\n        if (dir.includes('n')) {\r\n            if (this.resizeData.firstY <= deltaY)\r\n                deltaY = this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY - deltaY;\r\n            rect.top = this.resizeData.firstTop + deltaY;\r\n        }\r\n        if (dir.includes('s')) {\r\n            if (this.resizeData.firstY <= -deltaY)\r\n                deltaY = -this.resizeData.firstY;\r\n            rect.height = this.resizeData.firstY + deltaY;\r\n        }\r\n        if (dir.includes('e')) {\r\n            if (this.resizeData.firstX <= -deltaX)\r\n                deltaX = -this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX + deltaX;\r\n        }\r\n        if (dir.includes('w')) {\r\n            if (this.resizeData.firstX <= deltaX)\r\n                deltaX = this.resizeData.firstX;\r\n            rect.width = this.resizeData.firstX - deltaX;\r\n            rect.left = this.resizeData.firstLeft + deltaX;\r\n        }\r\n\r\n        if (rect.height)\r\n            rect.bottom = window.innerWidth - rect.top - rect.height;\r\n        if (rect.width)\r\n        rect.right = window.innerWidth - rect.left - rect.width;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onResizeStop = (e, dir, delta) => {\r\n        this.state.group.forEach(item => {\r\n            item.onResizeStop(e, dir, delta, true);\r\n        });\r\n\r\n        this.resizing = false;\r\n\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    onDragStart = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStart(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let {rect} = this.state;\r\n\r\n        this.dragData = {\r\n            x: rect.left,\r\n            y: rect.top,\r\n            lastMouseX: e.clientX,\r\n            lastMouseY: e.clientY,\r\n        };\r\n    };\r\n\r\n    onDrag = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDrag(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n\r\n        let deltaX = (e.clientX - this.dragData.lastMouseX);\r\n        let deltaY = (e.clientY - this.dragData.lastMouseY);\r\n        this.dragData.x += deltaX;\r\n        this.dragData.y += deltaY;\r\n        this.dragData.lastMouseX = e.clientX;\r\n        this.dragData.lastMouseY = e.clientY;\r\n\r\n        let rect = cloneObject(this.state.rect);\r\n\r\n        rect.top = this.dragData.y;\r\n        rect.left = this.dragData.x;\r\n        rect.right -= deltaX;\r\n        rect.bottom -= deltaY;\r\n\r\n        this.setState({rect});\r\n    };\r\n\r\n    onDragStop = (e) => {\r\n        this.state.group.forEach(item => {\r\n            item.onDragStop(e, true);\r\n        });\r\n        this.setState({draggingStart: false});\r\n    };\r\n\r\n    render () {\r\n        let {rect} = this.state;\r\n        if (!rect)\r\n            return null;\r\n\r\n        return (\r\n            <div\r\n                id=\"AdjustmentGroupRect\"\r\n                style={rect}\r\n                className=\"AdjustmentResizeRoot\"\r\n            >\r\n                {\r\n                    ['n','s','e','w','ne','nw','se','sw'].map((side, index) => {\r\n                        return <ResizePane\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.onResizeStart}\r\n                            onResize={this.onResize}\r\n                            onResizeStop={this.onResizeStop}\r\n                            draggingStart={this.state.draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n\r\n                {/*<AdjustmentMove*/}\r\n                    {/*key={`${this.props.id}_move`}*/}\r\n                    {/*onDragStart={this.onDragStart}*/}\r\n                    {/*onDrag={this.onDrag}*/}\r\n                    {/*onDragStop={this.onDragStop}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\nimport RightClick from \"./Components/RightClick\";\r\nimport MiniMenuVerticalDivider from \"./MiniMenuVerticalDivider\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Help from \"./Components/Help\";\r\n\r\nconst miniMenuId = \"wl_mini_menu\";\r\nexport default class MiniMenu extends React.PureComponent {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {};\r\n\r\n        console.log(\"MiniMenu constructor\");\r\n    }\r\n\r\n    update = (itemId, shortcut, primary) => {\r\n        this.setState({itemId, shortcut, primary})\r\n    };\r\n\r\n    render () {\r\n        return null;\r\n        if (this.state.itemId)\r\n            this.cachedItemId = this.state.itemId;\r\n        return (\r\n            <Popper\r\n                open={true}\r\n                anchorEl={document.getElementById(this.state.itemId || this.cachedItemId || \"root\")}\r\n                placement=\"bottom-start\"\r\n                style={{\r\n                    zIndex: 9999999\r\n                }}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'scrollParent',\r\n                    },\r\n                }}\r\n            >\r\n                {\r\n                    this.state.itemId ?\r\n                        <div className=\"MiniMenuRoot\"\r\n                             id={miniMenuId}\r\n                        >\r\n                            <div className=\"MiniMenuContainer\"\r\n                            >\r\n                                {\r\n                                    this.state.shortcut.map(option => {\r\n                                        return option;\r\n                                    })\r\n                                }\r\n\r\n                                {\r\n                                    this.state.shortcut.length > 0 && <MiniMenuVerticalDivider/>\r\n                                }\r\n\r\n                                {\r\n                                    this.state.primary.map(option => {\r\n                                        return option;\r\n                                    })\r\n                                }\r\n\r\n                                {\r\n                                    this.state.primary.length > 0 && <MiniMenuVerticalDivider/>\r\n                                }\r\n\r\n                                <Help/>\r\n                                <RightClick/>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div></div>\r\n                }\r\n\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase/ButtonBase\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\n\r\nexport default class RightClick extends React.Component {\r\n    onClick = (e) => {\r\n        console.log(\"RightClick Clicked !!!\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/more.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './MiniMenu.css';\r\n\r\nexport default class MiniMenuVerticalDivider extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"MiniMenuVerticalDivider\"/>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport IconButton from \"../../../HelperComponents/IconButton\";\r\nimport '../../../HelperStyle.css';\r\n\r\nexport default class Help extends React.Component {\r\n    onClick = (e) => {\r\n        console.log(\"Help Clicked !!!\");\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <IconButton\r\n                onClick={this.onClick}\r\n            >\r\n                <img\r\n                    draggable={false}\r\n                    width={16}\r\n                    height={16}\r\n                    src={require('../../../icons/question.svg')}\r\n                />\r\n            </IconButton>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Menu.css';\r\nimport MiniMenu from \"./MiniMenu/MiniMenu\";\r\n\r\nconst miniMenuHolderId = \"wl_menu_holder\";\r\nexport default class MenuHolder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n\r\n        this.miniMenuRef = React.createRef();\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({miniMenuItem: undefined});\r\n    };\r\n\r\n    addMiniMenu = (item) => {\r\n        // if (item && this.state.miniMenuItem && item.props.id === this.state.miniMenuItem.props.id)\r\n        //     return;\r\n\r\n        if (item)\r\n            this.miniMenuRef.current.update(\r\n                item.props.id,\r\n                item.getShortcutOptions() || [],\r\n                item.getPrimaryOptions() || []\r\n            );\r\n        else\r\n            this.miniMenuRef.current.update();\r\n\r\n        // this.setState({\r\n        //     miniMenuItem: item\r\n        // });\r\n    };\r\n\r\n    addMenu = (menu) => {\r\n        this.setState({\r\n            menu: undefined,\r\n        });\r\n        if (menu) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    menu,\r\n                });\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <div\r\n                id={miniMenuHolderId}\r\n                key={miniMenuHolderId}\r\n                className=\"MenuHolderRoot\"\r\n            >\r\n                <MiniMenu\r\n                    key={\"miniMenu\"}\r\n                    ref={this.miniMenuRef}\r\n                    // primary={miniMenuItem && miniMenuItem.getPrimaryOptions() || []}\r\n                    // shortcut={miniMenuItem && miniMenuItem.getShortcutOptions() || []}\r\n                    // itemId={miniMenuItem && miniMenuItem.props.id}\r\n                />\r\n                {\r\n                    this.state.menu\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default class IFrameCommunicator {\r\n    constructor(origin, otherWindow, onMessage) {\r\n        this.onMessage = onMessage;\r\n        this.origin = origin;\r\n        this.otherWindow = otherWindow;\r\n        this.counter = 0;\r\n        this.callbacks = {};\r\n        this.responses = {};\r\n\r\n        window.addEventListener(\"message\", (event) => {\r\n            if (event.origin !== this.origin) {\r\n                return;\r\n            }\r\n\r\n            this.processIncomingMessage(event);\r\n        });\r\n    }\r\n\r\n    processIncomingMessage = (event) => {\r\n        let data;\r\n        try {\r\n            data = JSON.parse(event.data);\r\n        } catch (e) {\r\n            console.error(\"IFrameCommunicator: must receive json data\");\r\n            return;\r\n        }\r\n\r\n        if (data && data.r) {\r\n            let r = data.r;\r\n            this.callbacks[r](data);\r\n            delete this.callbacks[r];\r\n        }\r\n        else\r\n        {\r\n            let responseFunc = () => {};\r\n            if (data && data.c) {\r\n                let c = data.c;\r\n                responseFunc = this.responses[c] = (data) => {\r\n                    data.r = c;\r\n                    this.post(data);\r\n                }\r\n            }\r\n\r\n            this.onMessage(event, responseFunc);\r\n        }\r\n    };\r\n\r\n    post = (data, callback) => {\r\n        if (callback) {\r\n            this.counter++;\r\n            data.c = this.counter;\r\n            this.callbacks[data.c] = callback;\r\n        }\r\n\r\n        this.otherWindow.postMessage(JSON.stringify(data), this.origin || \"*\");\r\n    };\r\n}\r\n","export default class BreakpointController {\r\n    constructor(breakpointmanager, editorData, pageRef) {\r\n        this.breakpointmanager = breakpointmanager;\r\n        this.editorData = editorData;\r\n        this.pageRef = pageRef;\r\n    }\r\n\r\n    changeBreakpoint = (bpName) => {\r\n        if (this.breakpointmanager.current() === bpName)\r\n            return;\r\n\r\n        let bpData = this.breakpointmanager.getBpData(bpName);\r\n\r\n        if (!bpData)\r\n            return;\r\n\r\n        let width = Math.min(parseInt((bpData.start * (1.1)).toFixed(0)), bpData.end);\r\n        let left = (this.editorData.innerWidth - width) / 2;\r\n        if (left < 50)\r\n            left = 50;\r\n        let top = this.pageRef.current.getSize(false).top;\r\n        let height = this.pageRef.current.getSize(false).height;\r\n\r\n        this.pageRef.current.setSize(top, left, width, height);\r\n    };\r\n\r\n    changeWidth = (width) => {\r\n        let left = (this.editorData.innerWidth - width) / 2;\r\n        if (left < 50)\r\n            left = 50;\r\n        let top = this.pageRef.current.getSize(false).top;\r\n        let height = this.pageRef.current.getSize(false).height;\r\n\r\n        this.pageRef.current.setSize(top, left, width, height);\r\n    };\r\n\r\n    updateBreakpoint = (name, start, end) => {\r\n        this.breakpointmanager.updateBreakpoint(name, start, end);\r\n    };\r\n\r\n    deleteBreakpoint = (name) => {\r\n        this.breakpointmanager.deleteBreakpoint(name);\r\n    };\r\n}\r\n","import {createItem, setDataInBreakpoint} from \"../AwesomwGridLayoutHelper\";\r\nimport BreakpointController from \"./BreakpointController\";\r\n\r\nlet EditorController = {};\r\nlet AllowFunctions = {};\r\n\r\nEditorController.onMessage = (data, res, editor) => {\r\n    if (AllowFunctions[data.func]) {\r\n        res(AllowFunctions[data.func](...data.inputs, editor));\r\n    }\r\n};\r\n\r\n// TODO GET functions\r\nAllowFunctions.getItemGridData = (itemId, editor) => {\r\n    return editor.idMan.getItem(itemId).props.griddata;\r\n};\r\nAllowFunctions.getLayout = (editor) => {\r\n    let layout = {\r\n        id: editor.rootLayoutRef.current.props.id,\r\n        griddata: editor.rootLayoutRef.current.props.griddata,\r\n        children: []\r\n    };\r\n    let fillData = (item, parent) => {\r\n        parent[item.props.id] = {\r\n            id: item.props.id,\r\n            griddata: item.props.griddata,\r\n            children: []\r\n        };\r\n\r\n        Object.values(item.allChildRefs).forEach(child => {\r\n            if (child && child.current)\r\n                fillData(child.current, parent[item.props.id].children);\r\n        });\r\n    };\r\n\r\n    fillData(editor.rootLayoutRef.current, layout.children);\r\n\r\n    return layout;\r\n};\r\nAllowFunctions.getBreakpointsData = (itemId, editor) => {\r\n    let item = editor.idMan.getItem(itemId);\r\n    return {\r\n        breakpoints: item.props.breakpointmanager.breakpoints,\r\n        currentWidth: item.props.breakpointmanager.lastWidth\r\n    }\r\n};\r\n\r\n// TODO POST functions\r\nAllowFunctions.changePage = (pageId, editor) => {\r\n    editor.onPageChange(pageId);\r\n    return true;\r\n};\r\nAllowFunctions.addItem = (parentId, childData, gridItemStyle, style, editor) => {\r\n    createItem(editor.idMan.getItem(parentId), childData, false, gridItemStyle, style);\r\n    return true;\r\n};\r\nAllowFunctions.breakpointManagerMethod = (method, inputs, editor) => {\r\n    let bpController = new BreakpointController(editor.breakpointmanager, editor.editorData, editor.rootLayoutRef);\r\n    bpController[method](inputs);\r\n\r\n    return editor.breakpointmanager.breakpoints;\r\n};\r\nAllowFunctions.undoRedoMethod = (method, inputs, editor) => {\r\n    editor.undoredo[method](inputs);\r\n    return true;\r\n};\r\nAllowFunctions.togglePreview = (preview, editor) => {\r\n    editor.togglePreview(preview);\r\n    return true;\r\n};\r\nAllowFunctions.setZoomLevel = (zoomLevel, editor) => {\r\n    editor.setZoomLevel(zoomLevel);\r\n    return true;\r\n};\r\n\r\n// TODO Edit functions\r\nAllowFunctions.setDataInBackground = (itemId, prop, value, editor) => {\r\n    let item = editor.idMan.getItem(itemId);\r\n    setDataInBreakpoint(prop, value, item, true);\r\n    return item.props.griddata;\r\n};\r\n\r\nexport default EditorController;\r\n","import React from \"react\";\r\nimport './Inspector.css';\r\n\r\nexport default class Inspector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            percent: props.open? 100: 0,\r\n            inspectorMenu: undefined\r\n        };\r\n\r\n        this.opening = false;\r\n        this.closing = false;\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.mounted = false;\r\n    }\r\n\r\n    open = () => {\r\n        this.opening = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.openInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.openInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent += (this.props.speed * this.props.interval / 1000);\r\n            if (percent > 100) {\r\n                this.opening = false;\r\n                clearInterval(this.openInterval);\r\n            }\r\n            percent = Math.min(100, percent);\r\n            this.setState({percent, open: (percent === 100)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    close = () => {\r\n        this.closing = true;\r\n        clearInterval(this.closeInterval);\r\n        clearInterval(this.openInterval);\r\n        this.closeInterval = setInterval(() => {\r\n            if (!this.mounted) {\r\n                clearInterval(this.closeInterval);\r\n                return;\r\n            }\r\n            let percent = this.state.percent -= (this.props.speed * this.props.interval / 1000);\r\n            if (percent < 0) {\r\n                this.closing = false;\r\n                clearInterval(this.closeInterval);\r\n            }\r\n            percent = Math.max(0, percent);\r\n            this.setState({percent, open: (percent !== 0)});\r\n        }, this.props.interval);\r\n    };\r\n\r\n    setMenu = (inspectorMenu) => {\r\n        this.setState({inspectorMenu});\r\n    };\r\n\r\n    getDefaultMenu = () => {\r\n        return <div\r\n            className=\"InspectorDefaultMenuRoot\"\r\n        >\r\n            <span>\r\n                Select a component to show options\r\n            </span>\r\n        </div>\r\n    };\r\n\r\n    render () {\r\n        return null;\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"InspectorRoot\"\r\n                    style={\r\n                        !this.props.inspectorPinned ? {\r\n                            right: `${this.state.percent - 100}%`,\r\n                            opacity: this.state.percent / 100\r\n                        } : {right: \"0%\", opacity: 1}\r\n                    }\r\n                >\r\n                    {\r\n                        this.state.inspectorMenu || this.getDefaultMenu()\r\n                    }\r\n                </div>\r\n                {\r\n                    this.props.inspectorPinned &&\r\n\r\n                    <div\r\n                        className=\"InspectorPinRoot\"\r\n                    >\r\n                    </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nInspector.defaultProps = {\r\n    open: false,\r\n    speed: 400,\r\n    interval: 5\r\n};\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Portal from \"../Portal\";\r\n\r\nexport default class AdjustmentResize extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        console.log(\"AdjustmentResize constructor\");\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (!shallowEqual(nextProps.data, this.data))\r\n            return true;\r\n\r\n        if (!shallowEqual(nextProps, this.props))\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    render () {\r\n        let {data, allowStretch, idMan, itemId, isStretch, draggingStart, transform} = this.props;\r\n        this.data = cloneObject(data);\r\n        let stretchStyle = {};\r\n        if (!allowStretch) stretchStyle.display = \"none\";\r\n        return (\r\n            <div\r\n                id=\"AdjustmentResize\"\r\n                style={{\r\n                    width: data.width,\r\n                    height: data.height,\r\n                    top: data.top,\r\n                    left: data.left,\r\n                    // transform: transform\r\n                }}\r\n                className=\"AdjustmentResizeRoot\"\r\n            >\r\n                {\r\n                    !isStretch &&\r\n                    ['s','n','e','w','se','ne','sw','nw'].map((side, index) => {\r\n                        console.log(JSON.stringify(this.props.sides));\r\n                        return <ResizePane\r\n                            style={{\r\n                                display: (this.props.sides.includes(side) ? \"unset\" : \"none\")\r\n                            }}\r\n                            key={index}\r\n                            side={side}\r\n                            onResizeStart={this.props.onResizeStart}\r\n                            onResize={this.props.onResize}\r\n                            onResizeStop={this.props.onResizeStop}\r\n                            draggingStart={draggingStart}\r\n                        />\r\n                    })\r\n                }\r\n                {\r\n                    <AdjustmentStretch\r\n                        style={stretchStyle}\r\n                        isStretch={isStretch}\r\n                        idMan={idMan}\r\n                        itemId={itemId}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Portal from \"../Portal\";\r\nimport AdjustmentResizePage from \"./AdjustmentResizePage\";\r\nimport {allowStretch, isGroupSelected, isStretch} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentResize from \"./AdjustmentResize\";\r\n\r\nexport default class AdjustmentResizeWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n    }\r\n\r\n    update = (item, data) => {\r\n        this.setState({item, data});\r\n    };\r\n\r\n    render () {\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, data} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    item.getFromTempData(\"resizable\") &&\r\n                    !item.state.showAnimation &&\r\n                    !isGroupSelected(item) &&\r\n                    <AdjustmentResize\r\n                        id={item.props.id}\r\n                        key={`resize`}\r\n                        sides={item.props.resizeSides || ['n','s','e','w','ne','nw','se','sw']}\r\n                        onResizeStart={item.onResizeStart}\r\n                        onResize={item.onResize}\r\n                        onResizeStop={item.onResizeStop}\r\n                        draggingStart={item.state.draggingStart}\r\n                        isStretch={isStretch(item)}\r\n                        allowStretch={allowStretch(item)}\r\n                        itemId={item.props.id}\r\n                        idMan={item.props.idMan}\r\n                        transform={item.getCompositeFromData(\"style\").transform}\r\n                        data={data}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {isGroupSelected} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentHelpLines from \"./AdjustmentHelpLines\";\r\n\r\nexport default class AdjustmentHelpLinesWrapper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    update = (item, helpLineParent, itemRect, dragging) => {\r\n        // setTimeout(() => {\r\n            this.setState({item, itemRect, dragging});\r\n        // }, 0);\r\n    };\r\n\r\n    render () {\r\n        return null;\r\n        if (!this.state.item)\r\n            return null;\r\n\r\n        let {item, itemRect, dragging} = this.state;\r\n\r\n        return (\r\n            <>\r\n                {\r\n                !item.state.showAnimation &&\r\n                    <AdjustmentHelpLines\r\n                        show={!item.props.helplineOff && item.state.selected &&\r\n                        item.state.helpLinesParent && !item.getFromTempData(\"pageResize\") &&\r\n                        !isGroupSelected(item)}\r\n                        helpLinesParent={item.state.helpLinesParent}\r\n                        item={item}\r\n                        dragging={dragging}\r\n                        itemRect={itemRect}\r\n                        width={itemRect.width}\r\n                        height={itemRect.height}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\n\r\nexport default class AdjustmentHelpLines extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"AdjustmentHelpLines constructor\");\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.helpLinesParent) {\r\n            let newParentRect = nextProps.helpLinesParent.getSize(false);\r\n\r\n            if (!shallowEqual(this.parentRect, cloneObject(newParentRect))) {\r\n                this.parentRect = newParentRect;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.props.width !== nextProps.width ||\r\n            this.props.height !== nextProps.height ||\r\n            this.props.show !== nextProps.show ||\r\n            this.props.dragging !== nextProps.dragging)\r\n            return true;\r\n\r\n        if (!shallowEqual(this.props.itemRect, nextProps.itemRect)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getValue = (value) => {\r\n        if (value.includes(\"px\")) {\r\n            return `${parseFloat(value.replace(\"px\", \"\")).toFixed(1)}px`;\r\n        }\r\n        if (value.includes(\"%\")) {\r\n            return `${parseFloat(value.replace(\"%\", \"\")).toFixed(1)}%`;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n    calculate = () => {\r\n        let {helpLinesParent, item, itemRect, width, height, dragging} = this.props;\r\n        // this.parentRect = this.parentRect || helpLinesParent.getSize(false);\r\n        this.parentRect = helpLinesParent.prepareRects();\r\n\r\n        return {\r\n            ...item.calculateGridItem(itemRect.left - this.parentRect.left,\r\n                itemRect.top - this.parentRect.top, helpLinesParent,\r\n                width || itemRect.width, height || itemRect.height, this.parentRect, true, !dragging),\r\n            itemRect, parentRect: this.parentRect\r\n        };\r\n    };\r\n\r\n    render () {\r\n        let {show, transform} = this.props;\r\n        if (!show)\r\n            return null;\r\n        let {gridItemStyle, coordinates, itemRect, parentRect, coordinatesAbs} = this.calculate();\r\n        // this.props.item.coordinateToAbsolute(coordinates, parentRect);\r\n        return (\r\n            <div\r\n                id=\"AdjustmentHelpLines\"\r\n                className=\"AdjustmentHelpLinesRoot\"\r\n                style={{\r\n                    width: coordinatesAbs.cx2 - coordinatesAbs.cx1,\r\n                    height: coordinatesAbs.cy2 - coordinatesAbs.cy1,\r\n                    top: coordinatesAbs.cy1,\r\n                    left: coordinatesAbs.cx1,\r\n                    // transform: transform\r\n                }}\r\n            >\r\n                <svg className=\"AdjustmentHelpLinesSVG\">\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&*/\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\")? \"visible\": \"hidden\"}\r\n                            x1={0}\r\n                            x2={itemRect.left - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        /*(gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                            gridItemStyle.alignSelf === \"flex-start\") &&\r\n                        !this.props.dragging &&*/\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                !this.props.dragging)? \"visible\" : \"hidden\"}\r\n                            cx={0}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width}\r\n                            x2={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            y2={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                        //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={coordinatesAbs.cx2 - coordinatesAbs.cx1}\r\n                            cy={itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={0}\r\n                            y2={itemRect.top - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={0}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        <line\r\n                            visibility={(gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\")\r\n                            ? \"visible\" : \"hidden\"}\r\n                            x1={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            x2={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            y1={itemRect.top - coordinatesAbs.cy1 + itemRect.height}\r\n                            y2={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            style={{\r\n                                stroke: \"#116dff\",\r\n                                strokeDasharray: \"3px 3px\"\r\n                            }}\r\n                        />\r\n                    }\r\n                    {\r\n                        // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                        // !this.props.dragging &&\r\n                        <circle\r\n                            visibility={((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                !this.props.dragging) ? \"visible\" : \"hidden\"}\r\n                            cx={itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2}\r\n                            cy={coordinatesAbs.cy2 - coordinatesAbs.cy1}\r\n                            r={5}\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                fill: \"#116dff\"\r\n                            }}\r\n                        />\r\n                    }\r\n                </svg>\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-start\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"start\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-start\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                        left: (itemRect.left - coordinatesAbs.cx1) / 2,\r\n                        transform: \"translateY(-125%) translateX(-50%)\",\r\n                        margin: 0,\r\n                        fontSize: \"0.65em\",\r\n                        color: \"#0013ff\",\r\n                        fontWeight: \"bold\"\r\n                    }}\r\n                    >\r\n                            {this.getValue(gridItemStyle.marginLeft)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                    //     gridItemStyle.alignSelf === \"flex-end\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.justifySelf === \"end\" || gridItemStyle.justifySelf === \"stretch\" ||\r\n                                gridItemStyle.alignSelf === \"flex-end\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: itemRect.top - coordinatesAbs.cy1 + itemRect.height / 2,\r\n                            right: (coordinatesAbs.cx2 - itemRect.left - itemRect.width) / 2,\r\n                            transform: \"translateY(-125%) translateX(50%)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginRight)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"start\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            top: (itemRect.top - coordinatesAbs.cy1) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(-50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginTop)}\r\n                    </p>\r\n                }\r\n\r\n                {\r\n                    // (gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                    // this.props.dragging &&\r\n                    <p\r\n                        style={{\r\n                            display: ((gridItemStyle.alignSelf === \"end\" || gridItemStyle.alignSelf === \"stretch\") &&\r\n                                this.props.dragging) ? \"unset\" : \"none\",\r\n                            position: \"absolute\",\r\n                            bottom: (coordinatesAbs.cy2 - itemRect.top - itemRect.height) / 2,\r\n                            left: itemRect.left - coordinatesAbs.cx1 + itemRect.width / 2,\r\n                            transform: \"translateY(50%) translateX(5px)\",\r\n                            margin: 0,\r\n                            fontSize: \"0.65em\",\r\n                            color: \"#0013ff\",\r\n                            fontWeight: \"bold\"\r\n                        }}\r\n                    >\r\n                        {this.getValue(gridItemStyle.marginBottom)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './Adjustment.css'\r\nimport ResizePane from \"./ResizePane\";\r\nimport AdjustmentStretch from \"./AdjustmentStretch\";\r\nimport {cloneObject, shallowEqual} from \"../AwesomeGridLayoutUtils\";\r\nimport Popper from \"@material-ui/core/Popper/Popper\";\r\nimport Portal from \"../Portal\";\r\nimport AdjustmentResizePage from \"./AdjustmentResizePage\";\r\nimport {allowStretch, isGroupSelected, isStretch} from \"../AwesomwGridLayoutHelper\";\r\nimport AdjustmentResize from \"./AdjustmentResize\";\r\n\r\nexport default class AdjustmentHover extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    update = (item, size, clear) => {\r\n        if (!clear)\r\n            if (!item.state.selected)\r\n                this.setState({item, size, itemId: item.props.id});\r\n            else\r\n                this.setState({item, size, itemId: undefined});\r\n        else {\r\n            if (this.state.itemId === item.props.id) {\r\n                this.setState({item, size, itemId: undefined});\r\n            }\r\n        }\r\n    };\r\n\r\n    render () {\r\n        return null;\r\n        if (this.state.itemId)\r\n            this.cachedItemId = this.state.itemId;\r\n        return (\r\n            <Popper\r\n                open={true}\r\n                anchorEl={document.getElementById(this.state.itemId || this.cachedItemId || \"root\")}\r\n                placement=\"top-start\"\r\n                style={{\r\n                    zIndex: 9999999,\r\n                    pointerEvents: \"none\"\r\n                }}\r\n                disablePortal={false}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: false\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: false,\r\n                    },\r\n                    hide: {\r\n                        enabled: false,\r\n                    },\r\n                }}\r\n            >\r\n                {\r\n                    this.state.itemId ?\r\n                        <div\r\n                            className=\"AwesomeGridLayoutRootHover\"\r\n                            key={`hover`}\r\n                            style={{\r\n                                width: this.state.size ? this.state.size.width : 0,\r\n                                height: this.state.size ? this.state.size.height : 0,\r\n                            }}\r\n                        />\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </Popper>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport BreakPointManager from \"../BreakPointManager\";\r\nimport DragDropManager from \"../DragDropManager\";\r\nimport InputManager from \"../InputManager\";\r\nimport SelectManager from \"../SelectManager\";\r\nimport SnapManager from \"../SnapManager\";\r\nimport CopyManager from \"../CopyManager\";\r\nimport IdManager from \"../IdManager\";\r\nimport UndoRedo from \"../UndoRedo\";\r\nimport GridLineManager from \"../GridLineManager\";\r\nimport AnchorManager from \"../AnchorManager\";\r\nimport {initDynamicAnimations, initDynamicComponents} from \"../Dynamic/DynamicComponents\";\r\nimport AdjustmentGrid from \"../Adjustment/AdjustmentGrid\";\r\nimport AdjustmentSnap from \"../Adjustment/AdjustmentSnap\";\r\nimport AdjustmentGridLines from \"../Adjustment/AdjustmentGridLines\";\r\nimport AdjustmentGroupRect from \"../Adjustment/AdjustmentGroupRect\";\r\nimport MenuHolder from \"../Menus/MenuHolder\";\r\nimport PageBase from \"../Components/Pages/PageBase\";\r\nimport './EditorBoundary.css';\r\nimport IFrameCommunicator from \"../Test/IFrameCommunicator\";\r\nimport EditorController from \"../Test/EditorController\";\r\nimport Inspector from \"../Test/Inspector/Inspector\";\r\nimport AdjustmentResizeWrapper from \"../Adjustment/AdjustmentResizeWrapper\";\r\nimport AdjustmentHelpLinesWrapper from \"../Adjustment/AdjustmentHelpLinesWrapper\";\r\nimport AdjustmentHover from \"../Adjustment/AdjustmentHover\";\r\n\r\nexport default class EditorBoundary extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editorScale: 1,\r\n            inspectorPinned: false\r\n        };\r\n\r\n        this.init(props);\r\n    }\r\n\r\n    // Declare all managers & refs\r\n    init = (props) => {\r\n        this.rootLayoutRef = React.createRef();\r\n        this.snapSvgRef = React.createRef();\r\n        this.gridContainerRef = React.createRef();\r\n        this.gridEditorRef = React.createRef();\r\n        this.groupSelectRef = React.createRef();\r\n        this.miniMenuHolderRef = React.createRef();\r\n        this.resizeRef = React.createRef();\r\n        this.helpLinesRef = React.createRef();\r\n        this.inspectorRef = React.createRef();\r\n        this.hoverRef = React.createRef();\r\n        this.editorData = {\r\n            innerWidth: window.innerWidth,\r\n            innerHeight: window.innerHeight,\r\n            inspectorWidth: 300,\r\n            inspectorPinned: false\r\n        };\r\n        this.breakpointmanager =\r\n            new BreakPointManager(undefined, this.editorData, undefined, this.onZoomLevelChange);\r\n        this.dragdrop = new DragDropManager();\r\n        this.inputManager = new InputManager();\r\n        this.select = new SelectManager(this.inputManager, this.groupSelectRef,\r\n            this.rootLayoutRef, this.miniMenuHolderRef, this.inspectorRef, this.resizeRef,\r\n            this.helpLinesRef, this.hoverRef);\r\n        this.snap = new SnapManager(5, this.snapSvgRef);\r\n        this.copyMan = new CopyManager(this.select, this.rootLayoutRef);\r\n        this.idMan = new IdManager('comp');\r\n        this.undoredo = new UndoRedo(100, document, this.idMan);\r\n        this.gridLine = new GridLineManager(this.gridContainerRef);\r\n        this.anchorMan = new AnchorManager();\r\n\r\n        initDynamicComponents();\r\n        initDynamicAnimations();\r\n\r\n        this.iFrameCommunicator = new IFrameCommunicator(\"test\", window.parent, this.onMessage);\r\n\r\n        // TODO test, clean them after test finished\r\n        window.addEventListener(\"keydown\",(e) =>{\r\n            e = e || window.event;\r\n            let key = e.which || e.keyCode; // keyCode detection\r\n            let ctrl = e.ctrlKey ? e.ctrlKey : (key === 17); // ctrl detection\r\n\r\n            if ( key === 80 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + P\");\r\n                this.pinInspector();\r\n            }\r\n            if ( key === 76 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + L\");\r\n                this.openInspector();\r\n            }\r\n            if ( key === 79 && ctrl ) {\r\n                e.preventDefault();\r\n                console.log(\"ctrl + O\");\r\n                this.closeInspector();\r\n            }\r\n        });\r\n    };\r\n\r\n    onMessage = (data, res) => {\r\n        EditorController.onMessage(data, res, this);\r\n    };\r\n\r\n    postMessage = (data, callback) => {\r\n        this.iFrameCommunicator.post(data, callback);\r\n    };\r\n\r\n    onSiteDataUpdated = (siteData) => {\r\n        this.setState({siteData});\r\n    };\r\n\r\n    onPageChange = (pageId) => {\r\n        this.setState({pageId});\r\n    };\r\n\r\n    togglePreview = (preview) => {\r\n        this.setState({preview});\r\n    };\r\n\r\n    setZoomLevel = (zoomLevel) => {\r\n        this.setState({zoomLevel: zoomLevel || 100});\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.breakpointmanager.dispose();\r\n    }\r\n\r\n    // Just in editor\r\n    onBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        if (this.rootLayoutRef.current)\r\n            width = this.rootLayoutRef.current.getSize(false).width;\r\n\r\n        this.onPageResize(width, this.rootLayoutRef.current);\r\n    };\r\n\r\n    notifyBreakpointChange = (width, newBreakpointName, devicePixelRatio) => {\r\n        this.rootLayoutRef.current.onBreakpointChange(width, newBreakpointName, devicePixelRatio);\r\n    };\r\n\r\n    onZoomLevelChange = (newDevicePixelRatio) => {\r\n        // TODO\r\n        this.select.onScrollItem();\r\n        this.rootLayoutRef.current.getSize(true, true);\r\n    };\r\n\r\n    openInspector = () => {\r\n        this.inspectorRef.current.open();\r\n    };\r\n\r\n    pinInspector = () => {\r\n        let selected = this.select.getSelected();\r\n        this.rootLayoutRef.current.props.aglRef.current.onSelect(true);\r\n        this.editorData.inspectorPinned = !this.state.inspectorPinned;\r\n        this.editorData.innerWidth = window.innerWidth -\r\n            this.editorData.inspectorPinned ? this.editorData.inspectorWidth : 0;\r\n        this.setState({inspectorPinned: this.editorData.inspectorPinned}, () => {\r\n            this.select.onScrollItem();\r\n            setTimeout(() => {\r\n                if (selected)\r\n                    selected.onSelect(true);\r\n            }, 0);\r\n        })\r\n    };\r\n\r\n    closeInspector = () => {\r\n        this.inspectorRef.current.close();\r\n    };\r\n\r\n    onPageResize = (width, pageAgl, force) => {\r\n        let result = this.breakpointmanager.checkBreakPointChange(width);\r\n        this.breakpointmanager.setWindowWidth(width);\r\n\r\n        if (result.changed || force) {\r\n            console.log(\"onBreakpointChange\", width, result.currentBreakpointName);\r\n            this.notifyBreakpointChange(width, result.currentBreakpointName,\r\n                this.breakpointmanager.getDevicePixelRatio());\r\n        }\r\n\r\n        // this.select.onScrollItem();\r\n    };\r\n\r\n    render() {\r\n        // TODO if this.state.siteData not loaded, show loading component\r\n        return (\r\n            <>\r\n                <AdjustmentGrid\r\n                    ref={this.gridEditorRef}\r\n                />\r\n                <AdjustmentSnap\r\n                    ref={this.snapSvgRef}\r\n                />\r\n                <AdjustmentGridLines\r\n                    ref={this.gridContainerRef}\r\n                />\r\n                <AdjustmentGroupRect\r\n                    ref={this.groupSelectRef}\r\n                />\r\n                <MenuHolder\r\n                    ref={this.miniMenuHolderRef}\r\n                />\r\n                <div\r\n                    className=\"EditorBoundaryPageHolder\"\r\n                    style={{\r\n                        // TODO add scale support\r\n                        padding: \"0 50px\"\r\n                    }}\r\n                >\r\n                    <PageBase\r\n                        id=\"page\"\r\n                        aglRef={this.rootLayoutRef}\r\n                        breakpointmanager={this.breakpointmanager}\r\n                        undoredo={this.undoredo}\r\n                        dragdrop={this.dragdrop}\r\n                        select={this.select}\r\n                        snap={this.snap}\r\n                        idMan={this.idMan}\r\n                        gridLine={this.gridLine}\r\n                        gridEditorRef={this.gridEditorRef}\r\n                        anchorMan={this.anchorMan}\r\n                        copyMan={this.copyMan}\r\n                        editorData={this.editorData}\r\n                        onPageResize={this.onPageResize}\r\n                        editor\r\n                        devicePixelRatio={this.state.devicePixelRatio}\r\n                        inspectorPinned={this.state.inspectorPinned}\r\n                    />\r\n                </div>\r\n\r\n                <AdjustmentHover\r\n                    ref={this.hoverRef}\r\n                />\r\n\r\n                <AdjustmentHelpLinesWrapper\r\n                    ref={this.helpLinesRef}\r\n                />\r\n\r\n                <AdjustmentResizeWrapper\r\n                    ref={this.resizeRef}\r\n                />\r\n\r\n                <Inspector\r\n                    ref={this.inspectorRef}\r\n                    inspectorPinned={this.state.inspectorPinned}\r\n                />\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport EditorBoundary from \"./AwesomeGridLayout/Editor/EditorBoundary\";\r\n\r\nReactDOM.render(\r\n    <EditorBoundary />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/paint.b4611be4.svg\";"],"sourceRoot":""}